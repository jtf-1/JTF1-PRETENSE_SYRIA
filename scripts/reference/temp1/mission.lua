 env.info("[JTF-1] MISSION BUILD 2023-09-11T18:46:28.96")  
  
--------------------------------[core\mission_init.lua]-------------------------------- 
 
env.info( "*** [JTF-1] MISSION SCRIPTS START ***" )
---- remove default MOOSE player menu
_SETTINGS:SetPlayerMenuOff()

--- debug on/off
BASE:TraceOnOff(false)

JTF1 = {
	traceTitle = "[JTF-1 MISSIONINIT] ",
	missionRestart = "ADMIN9999", -- Message to trigger mission restart via jtf1-hooks
	flagLoadMission = 9999, -- flag for load misison trigger
	defaultServerConfigFile = "LocalServerSettings.lua", -- srs server settings file name
	menu = {},
}

function JTF1:Start()
	if not lfs then
		BASE:E( "[JTF-1] WARNING: lfs not desanitized. Loading will look into your DCS installation root directory rather than the \"Saved Games\\DCS\" folder.")
	else

		-- load local server settings file
		local settingsFile = lfs.writedir() .. JTF1.defaultServerConfigFile

		if UTILS.CheckFileExists(lfs.writedir(), JTF1.defaultServerConfigFile) then
			BASE:I( "[JTF-1] Mission INIT settingsFile = " .. settingsFile )
			dofile(settingsFile)
			for _name, _value in pairs(LOCALSERVER) do
				JTF1[_name] = _value
			end
			BASE:I("[JTF-1] Local server settings to follow...")
			BASE:I(JTF1)
		else
			BASE:E("[JTF-1] Error! Server config file not found. Using mission defaults")
		end

	end

	-- add root menu for JTF-1 if activated in data file
	if JTF1.jtfmenu then
		JTF1.menu.root = MENU_MISSION:New("JTF-1")
	end

end


--- END INIT  
--------------------------------[mission_init_data.lua]-------------------------------- 
 
env.info( "[JTF-1] mission_init_data.lua" )

--- MISSION JTF1 SETTINGS FOR MIZ
--
-- This file MUST be loaded AFTER mission_init.lua
--
-- These values are specific to the miz and will override the default values in JTF1
--

-- Error prevention. Create empty container if module core lua not loaded.
if not JTF1 then 
	JTF1 = {}
	JTF1.traceTitle = "[JTF-1 MISSIONINIT] "
	_msg = JTF1.traceTitle .. "CORE FILE NOT LOADED!"
	BASE:E(_msg)
end

-- table of values to override default JTF1 values for this miz
JTF1.menuAllSlots = true
JTF1.jtfmenu = true

-- start the mission timer
if JTF1.Start then
	_msg = JTF1.traceTitle .. "Call Start()"
	BASE:T(_msg)
	JTF1:Start()  
end
  
--------------------------------[core\devcheck.lua]-------------------------------- 
 
env.info( "[JTF-1] devcheck" )
--- Check for Static or Dynamic mission file loading flag
-- mission flag for setting dev mode
local devFlag = 8888

-- If missionflag is true, mission file will load from filesystem with an assert
local devState = trigger.misc.getUserFlag(devFlag)

if devState == 1 or JTF1.trace then
	
	local msgLog = "[JTF-1 DEVCHECK] "
	local msgText = ""

	if devState == 1 then
		msgText = "Dynamic Loading is ON!"
	end

	if JTF1.trace then
		msgText = msgText .. " TRACE is ON!"
		-- trace all events
		BASE:TraceOnOff(true)
		BASE:TraceAll(true)
	end

	_msg = msgLog .. msgText
	BASE:E(_msg)
	MESSAGE:New(msgText):ToAll()

	DEV_MENU = {
		traceOn = true, -- default tracestate false == trace off, true == trace on.
		flagLoadMission = (JTF1.flagLoadMission and JTF1.flagLoadMission or 9999), -- flag for load misison trigger
		missionRestartMsg = (JTF1.missionRestartMsg and JTF1.missionRestartMsg or "ADMIN9999"), -- Message to trigger mission restart via jtf1-hooks
	}
	
	function DEV_MENU:toggleTrace()
		if BASE:IsTrace() then
		BASE:TraceOff()
		else
		BASE:TraceOn()
		end
		_msg = string.format("[JTF-1 DEVCHECK] Trace toggled", tostring(BASE:IsTrace()))
		BASE:E(_msg)
	end

	-- function DEV_MENU:testLua() --check encoding
	--   local base = _G
	--   local f = assert( base.loadfile( 'E:/GitHub/FUN-MAP_NTTR/scripts/dynamic/test.lua' ) )
	--   if f == nil then
	--     error ("Mission Loader: could not load test.lua." )
		--   else
	--     env.info( "[JTF-1] Mission Loader: test.lua dynamically loaded." )
	--     --return f()
	--   end
	-- end

	function DEV_MENU:restartMission()
		trigger.action.setUserFlag(ADMIN.flagLoadMission, 99)
	end

	-- Add Dev submenu to F10 Other
	if JTF1.menu.root then
		DEV_MENU.topmenu = MENU_MISSION:New("DEVMENU", JTF1.menu.root)
	else
		DEV_MENU.topmenu = MENU_MISSION:New("DEVMENU")
	end
	MENU_MISSION_COMMAND:New("Toggle TRACE.", DEV_MENU.topmenu, DEV_MENU.toggleTrace)
	--MENU_MISSION_COMMAND:New("Reload Test LUA.", DEV_MENU.topmenu, DEV_MENU.testLua)
	MENU_MISSION_COMMAND:New("Restart Mission", DEV_MENU.topmenu, DEV_MENU.restartMission)

	if DEV_MENU.traceOn then
		BASE:TraceOn()
	end  

else
	local _msg = "[JTF-1] DEV flag is OFF."
	BASE:I(_msg)
end

--- END DEVCHECK  
--------------------------------[core\missionsrs.lua]-------------------------------- 
 
env.info( "[JTF-1] missionsrs.lua" )
--
-- Send messages through SRS using STTS
--
-- Two files are used by this module;
--     missionsrs.lua
--     missionsrs_data.lua
--
-- 1. missionsrs.lua
-- Core file. Contains functions, key values and GLOBAL settings.
--
-- 2. missionsrs_data.lua
-- Contains settings that are specific to the miz.
-- Optional. If not use, uncomment MISSIONSRS:Start() at the end of this file.
-- If used, MISSIONSRS:Start() in this file MUST be commented out.
--
-- For custom settings to be used, load order in miz MUST be;
--     1. missionsrs.lua
--     2. missionsrs_data.lua
--
-- If the missionsrs_data.lua is not used the defaults for srs_path and srs_port will be used.
--
-- Message text will be formatted as a SOUNDTEXT object.
-- 
-- Use MISSIONSRS:SendRadio() to transmit on SRS
--
-- msgText        - [required] STRING. Text of message. Can be plain text or a MOOSE SOUNDTEXT obkect
-- msfFreqs       - [optional] STRING. frequency, or table of frequencies (without any spaces). Default freqs AND modulations will be applied if this is not specified.
-- msgModulations - [optional] STRING. modulation, or table of modulations (without any spaces) if multiple freqs passed. Ignored if msgFreqs is not defined. Default modulations will be applied if this is not specified
--

MISSIONSRS = {}

MISSIONSRS = {
  srsPath = "C:/PROGRA~1/DCS-SimpleRadio-Standalone", -- default path to SRS install directory if setting file is not avaialable "C:/Program Files/DCS-SimpleRadio-Standalone"
  srsPort = 5002,                                          -- default SRS port to use if settings file is not available
  msg = "No Message Defined!",                             -- default message if text is nil
  freqs = "243,251,327,377.8,30",                          -- transmit on guard, CTAF, NTTR TWR, NTTR BLACKJACK and 30FM as default frequencies
  modulations = "AM,AM,AM,AM,FM",                          -- default modulation (count *must* match qty of freqs)
  vol = "1.0",                                             -- default to full volume
  name = "Server",                                         -- default to server as sender
  coalition = 0,                                           -- default to spectators
  vec3 = nil,                                              -- point from which transmission originates
  speed = 2,                                               -- speed at which message should be played
  gender = "female",                                       -- default gender of sender
  culture = "en-US",                                       -- default culture of sender
  voice = "",                                              -- default voice to use
}

local _msg

function MISSIONSRS:Start()
  local useSRS = JTF1.useSRS
  if useSRS == false then
    _msg = "[JTF-1 MISSIONSRS] Server SRS is OFF!"
    BASE:E(_msg)
  end
  self.srsPath = JTF1.srsPath or self.srsPath
  self.srsPort = JTF1.srsPort or self.srsPort
  self:AddRadio()
  BASE:T({"[JTF-1 MISSIONSRS]",{self}})
end

function MISSIONSRS:AddRadio()
  self.Radio = MSRS:New(self.srsPath, self.freqs, self.modulations)
  self.Radio:SetPort(self.srsPort)
  self.Radio:SetGender(self.gender)
  self.Radio:SetCulture(self.culture)
  self.Radio.name = self.name
  self.Radio.active = true
end

function MISSIONSRS:SendRadio(msgText, msgFreqs, msgModulations)

  BASE:T({"[JTF-1 MISSIONSRS] SendRadio", {msgText}, {msgFreqs}, {msgModulations}})
  if msgFreqs then
    BASE:T("[JTF-1 MISSIONSRS] tx with freqs change.")
    if msgModulations then
      BASE:T("[JTF-1 MISSIONSRS] tx with mods change.")
    end
  end
  if msgText == (nil or "") then 
    msgText = self.msg
  end
  local text = msgText
  local tempFreqs = msgFreqs or self.freqs
  local tempModulations = msgModulations or self.modulations
  if not msgText.ClassName then
    BASE:T("[JTF-1 MISSIONSRS] msgText NOT SoundText object.")
    text = SOUNDTEXT:New(msgText) -- convert msgText to SOundText object
  end
  self.Radio:SetFrequencies(tempFreqs)
  self.Radio:SetModulations(tempModulations)
  self.Radio:PlaySoundText(text)
  self.Radio:SetFrequencies(self.freqs) -- reset freqs to default
  self.Radio:SetModulations(self.modulations) -- rest modulation to default

end

--MISSIONSRS:Start() -- uncomment if missionsrs_data.lua is not used
  
--------------------------------[missionsrs_data.lua]-------------------------------- 
 
env.info( "[JTF-1] missionsrs_data" )

--- MISSIONSRS SETTINGS FOR MIZ
--
-- This file MUST be loaded AFTER missionsrs.lua
--
-- These values are specific to the miz and will override the default values in MISSIONSRS.default
--

-- Error prevention. Create empty container if module core lua not loaded.
if not MISSIONSRS then 
	_msg = "[JTF-1 MISSIONSRS] CORE FILE NOT LOADED!"
	BASE:E(_msg)
	MISSIONSRS = {}
end

-- table of values for missionsrs to use this miz. Overrides default values.
-- MISSIONSRS.srsPath = "C:/Program Files/DCS-SimpleRadio-Standalone" -- default path to SRS install directory if setting file is not avaialable "C:/Program Files/DCS-SimpleRadio-Standalone"
-- MISSIONSRS.srsPort = 5002                                          -- default SRS port to use if settings file is not available
-- MISSIONSRS.msg = "No Message Defined!"                             -- default message if text is nil
MISSIONSRS.freqs = "243,251,3,30"                          -- transmit on guard, CTAF, NTTR TWR, NTTR BLACKJACK and 30FM as default frequencies
-- MISSIONSRS.modulations = "AM,AM,AM,AM,FM"                          -- default modulation (count *must* match qty of freqs)
-- MISSIONSRS.vol = "1.0"                                             -- default to full volume
-- MISSIONSRS.name = "Server"                                         -- default to server as sender
-- MISSIONSRS.coalition = 0                                           -- default to spectators
-- MISSIONSRS.vec3 = nil                                              -- point from which transmission originates
-- MISSIONSRS.speed = 2                                               -- speed at which message should be played
-- MISSIONSRS.gender = "female"                                       -- default gender of sender
-- MISSIONSRS.culture = "en-US"                                       -- default culture of sender
-- MISSIONSRS.voice = ""                                              -- default voice to use

if MISSIONSRS.Start then
	MISSIONSRS:Start()
end  
--------------------------------[core\adminmenu.lua]-------------------------------- 
 
env.info( "[JTF-1] adminmenu.lua" )

--- Admin menu
--
-- Add F10 command menus for selecting a mission to load, or restarting the current mission.
--
-- In the Mission Editor, add (a) switched condition trigger(s) with a 
-- FLAG EQUALS condition, where flag number is ADMIN.flagLoadMission value
-- and flag value is the ADMIN.missionList[x].missionFlagValue (see below).
-- A missionFlagValue == 0 is used to trigger restart of the current
-- mission using jtf1-hooks.lua.
--
-- If the menu should only appear for restricted client slots, set
-- ADMIN.menuAllSlots to FALSE and add a client slot with the group name
-- *prefixed* with the value set in ADMIN.adminMenuName.
--
-- If the menu should be available in all mission slots, set ADMIN.menuAllSlots
-- to TRUE.|
-- 

ADMIN = {
	ClassName = "ADMIN",
	traceTitle = "[JTF-1 ADMIN] ",
	menuAllSlots = false, -- Set to true for admin menu to appear in all player slots
	defaultMissionRestart = "MISSION_RESTART",
	defaultMissionLoad = "MISSION_LOAD",
	defaultMissionFile = "missions.lua",
	defaultMissionFolder = "missions",
	defaultMissionPath = "C:\\Users\\jtf-1\\Saved Games\\missions",
	adminUnitName = "XX_", -- String to locate within unit name for admin slots
	missionRestart = JTF1.missionRestart or ADMIN.defaultMissionRestart,
	missionLoad = JTF1.missionLoad or ADMIN.defaultMissionLoad,
	missionFile = JTF1.missionFile or ADMIN.defaultMissionFile,
}

-- ADMIN = EVENTHANDLER:New()
-- ADMIN:HandleEvent(EVENTS.PlayerEnterAircraft)
ADMIN = BASE:Inherit(ADMIN, BASE:New())
ADMIN:HandleEvent(EVENTS.PlayerEnterAircraft)



function ADMIN:Start()
	-- check if mission is in devmode.
	local devState = trigger.misc.getUserFlag(8888)
	-- add admin menu to all slots if dev mode is active
	if devState == 1 then
		ADMIN.menuAllSlots = true
	end

	-- check if a server config file has defined the path to the missions file.
	if JTF1.missionPath then
		ADMIN.missionPath = JTF1.missionPath
		_msg = string.format(ADMIN.traceTitle .. "missionPath = %s", ADMIN.missionPath)
		BASE:T(_msg)
	else
		if lfs then -- check if game environment is desanitised
			ADMIN.missionPath = (lfs.writedir() .. "\\" .. ADMIN.defaultMissionFolder) -- set mission path to current write directory
		else
			ADMIN.missionPath = "" -- empty mission path will bypass all but restart mission menu option
		end
	end

	-- set full path to mission list
	local missionPathFile = ADMIN.missionPath .. "\\" .. ADMIN.missionFile
	BASE:T(ADMIN.traceTitle .. "mission list file: " .. missionPathFile)
	-- check mission list lua file exists. If it does run it. 
	if UTILS.CheckFileExists(ADMIN.missionPath, ADMIN.missionFile) then
		BASE:T( ADMIN.traceTitle .. "Mission list file exists")
		dofile(missionPathFile)
		ADMIN.missionList = MISSIONLIST -- map mission list values to ADMIN.missionList
		BASE:T({ADMIN.traceTitle .. "ADMIN.missionList", ADMIN.missionList})
		-- if present append local server mission list to ADMIN.missionList
		if JTF1.missionList then
			BASE:T({ADMIN.traceTitle .. "JTF1.missionList", ADMIN.missionList})
			table.insert(ADMIN.missionList, JTF1.missionList[1])
			BASE:T({ADMIN.traceTitle .. "ADMIN.missionList with local server list", ADMIN.missionList})
		end
	else
		BASE:E(ADMIN.traceTitle .. "Error! Mission list file not found.")        
	end

end

function ADMIN:GetPlayerUnitAndName(unitName)
	if unitName ~= nil then
		-- Get DCS unit from its name.
		local DCSunit = Unit.getByName(unitName)
		if DCSunit then
			local playername=DCSunit:getPlayerName()
			local unit = UNIT:Find(DCSunit)
		if DCSunit and unit and playername then
			return unit, playername
		end
		end
	end
	-- Return nil if we could not find a player.
	return nil,nil
end

-- when player enters a slot, check if it's an admin slot and add F10 admin menu if it is
function ADMIN:OnEventPlayerEnterAircraft(EventData)
	local unitName = EventData.IniUnitName
	local unit, playername = ADMIN:GetPlayerUnitAndName(unitName)
	if unit and playername then
		-- add a scheduled task to create F10 menu if it's an admin slot or if menuAllslots is set to true
		if string.find(unitName, ADMIN.adminUnitName) or ADMIN.menuAllSlots then
			-- delay task to allow client to finish spawning
			SCHEDULER:New(nil, ADMIN.BuildAdminMenu, {self, unit, playername}, 0.5)
		end
	end
end

--- Load mission requested from menu
function ADMIN:LoadMission(playerName, missionFile)
	local adminMessage = ADMIN.missionRestart
	if playerName then
		BASE:T(ADMIN.traceTitle .. "Restart or load called by player name: " .. playerName)
	else
		BASE:T(ADMIN.traceTitle .. "Restart or load called by non-player!")
	end
	if missionFile then
		adminMessage = ADMIN.missionLoad .. "-" .. missionFile
	end
	MESSAGE:New(adminMessage):ToAll()
end

--- Add admin menu and commands if client is in an ADMIN spawn
function ADMIN:BuildAdminMenu(unit,playername)
	local adminGroup = unit:GetGroup()
	-- add ADMIN menu to F10
	local adminMenu
	if JTF1.menu.root then
		-- add root to JTF1 menu
		adminMenu = MENU_GROUP:New(adminGroup, "Admin", JTF1.menu.root)
	else
		-- add root to main F10 menu
		adminMenu = MENU_GROUP:New(adminGroup, "Admin")
	end
	
	-- add command to restart current mission  
	MENU_GROUP_COMMAND:New( adminGroup, "Restart Current Mission", adminMenu, ADMIN.LoadMission, self, playername)
	-- if a mission list has been found add submenus for it
	if ADMIN.missionList then
		BASE:T(ADMIN.traceTitle .. "Build missionList.")
		-- add menus to load missions
		for i, missionList in ipairs(ADMIN.missionList) do
			BASE:T(missionList)
			-- add menu for mission group  
			local missionName = MENU_GROUP:New(adminGroup, missionList.missionName, adminMenu)
			-- add menus for each mission file in the group
			for j, missionMenu in ipairs(missionList.missionMenu) do
				BASE:T(missionMenu)
				-- add full path to mission file if defined
				local missionFile = ADMIN.missionPath .. "\\" .. missionMenu.missionFile
				-- add command to load mission
				MENU_GROUP_COMMAND:New( adminGroup, missionMenu.menuText, missionName, ADMIN.LoadMission, self, playername, missionFile )
				_msg = string.format(ADMIN.traceTitle .. "Admin Menu Mission %s", missionFile)
				BASE:T(_msg)
			end
		end
	end
end

--- END ADMIN MENU SECTION  
--------------------------------[adminmenu_data.lua]-------------------------------- 
 
env.info( "[JTF-1] adminmenu_data" )

--- MISSION ADMIN MENU SETTINGS FOR MIZ
--
-- This file MUST be loaded AFTER adminmenu.lua
--
-- These values are specific to the miz and will override the default values in ADMIN
--

-- Error prevention. Create empty container if module core lua not loaded.
if not ADMIN then 
	ADMIN = {}
	ADMIN.traceTitle = "[JTF-1 ADMIN] "
	_msg = ADMIN.traceTitle .. "CORE FILE NOT LOADED!"
	BASE:E(_msg)
end

-- table of values to override default ADMIN values for this miz
ADMIN.menuAllSlots = true
ADMIN.jtfmenu = true

-- start the mission timer
if ADMIN.Start then
	_msg = ADMIN.traceTitle .. "Call Start()"
	BASE:T(_msg)
	ADMIN:Start()  
end
  
--------------------------------[core\missiontimer.lua]-------------------------------- 
 
env.info( "[JTF-1] missiontimer.lua" )

--- Mission Timer
--
-- Add schedules to display messages at set intervals prior to restarting the base mission.
-- ME switched triggers should be set to a FLAG EQUALS condition for the flag flagLoadMission
-- value (defined in script header). Sending missionRestart text will trigger restarting the
-- current mission via jtf1-hooks.lua.
--
MISSIONTIMER = {}
MISSIONTIMER.traceTitle = "[JTF-1 MISSIONTIMER] "

MISSIONTIMER.msgWarning = {} -- schedule container
MISSIONTIMER.missionRestart = ( JTF1.missionRestart and JTF1.missionRestart or "ADMIN9999" ) -- Message to trigger mission restart via jtf1-hooks
MISSIONTIMER.durationHrs = 11 -- Mission run time in HOURS
MISSIONTIMER.msgSchedule = {60, 30, 10, 5} -- Schedule for mission restart warning messages. Time in minutes.
MISSIONTIMER.restartDelay =  4 -- time in minutes to delay restart if active clients are present.
MISSIONTIMER.useSRS = true -- default flag to determine if htis module should send messages through SRS.

local useSRS
local _msg

-- function to start the mission timer
function MISSIONTIMER:Start()
	self.useSRS = (JTF1.useSRS and self.useSRS) and MISSIONSRS.Radio.active -- default to not using SRS unless both the server AND the module request it AND MISSIONSRS.Radio.active is true
	BASE:I({"[JTF-1 MISSIONTIMER] useSRS", self.useSRS})
	self.durationSecs = self.durationHrs * 3600 -- Mission run time in seconds
	BASE:T({"[JTF-1 MISSIONTIMER] settings",{self}})
	self:AddSchedules()
end

--- function to add scheduled messages for mission restart warnings and restart at end of mission duration
function MISSIONTIMER:AddSchedules()
	if self.msgSchedule ~= nil then
		BASE:I({"[JTF-1 MISSIONTIMER] Schedule", self.msgSchedule})
		for i, msgTime in ipairs(self.msgSchedule) do
		self.msgWarning[i] = SCHEDULER:New( nil, 
			function()
			_msg = string.format("[JTF-1 MISSIONTIMER] TIMER WARNING CALLED at %d minutes remaining.", msgTime)
			BASE:T(_msg)
			_msg = string.format("All players, mission is scheduled to restart in %d minutes!", msgTime)
			if self.useSRS then -- if MISSIONSRS radio object has been created, send message via default broadcast.
				MISSIONSRS:SendRadio(_msg)
			else -- otherwise, send in-game text message
				MESSAGE:New(_msg):ToAll()
			end
			end,
		{msgTime}, self.durationSecs - (msgTime * 60))
		end
	end
	self.msgWarning["restart"] = SCHEDULER:New( nil,
		function()
			MISSIONTIMER:Restart()
		end,
		{ }, self.durationSecs
	)
end

-- function to restart the mission after the end of the scheduled duration
-- restart will be delayed until all pplayers have left the mission
function MISSIONTIMER:Restart()
	if not self.clientList then
		self.clientList = SET_CLIENT:New()
		self.clientList:FilterActive()
		self.clientList:FilterStart()
	end
	if self.clientList:CountAlive() > 0 then
		local delayTime = self.restartDelay
		local msg  = "All players, mission will restart when no active clients are present. Next check will be in " .. tostring(delayTime) .." minutes." 
		if self.useSRS then -- if MISSIONSRS radio object has been created, send message via default broadcast.
			MISSIONSRS:SendRadio(msg)
		else -- otherwise, send in-game text message
			MESSAGE:New(msg):ToAll()
		end
		self.msgWarning["restart"] = SCHEDULER:New( nil,
			function()
				MISSIONTIMER:Restart()
			end,
			{ }, (self.restartDelay * 60)
		)
	else
		BASE:I("[JTF-1 MISSIONTIMER] RESTART MISSION")
		MESSAGE:New(self.missionRestart):ToAll()
	end
end

--- END MISSION TIMER  
--------------------------------[missiontimer_data.lua]-------------------------------- 
 
env.info( "[JTF-1] missiontimer_data" )

--- MISSION TIMER SETTINGS FOR MIZ
--
-- This file MUST be loaded AFTER missiontimer.lua
--
-- These values are specific to the miz and will override the default values in MISSIONTIMER
--

-- Error prevention. Create empty container if module core lua not loaded.
if not MISSIONTIMER then 
	MISSIONTIMER = {}
	MISSIONTIMER.traceTitle = "[JTF-1 MISSIONTIMER] "
	_msg = MISSIONTIMER.traceTitle .. "CORE FILE NOT LOADED!"
	BASE:E(_msg)
end

-- table of values for timer shedule in this miz
MISSIONTIMER.durationHrs = 9 -- Mission run time in HOURS
MISSIONTIMER.msgSchedule = {60, 30, 10, 5} -- Schedule for mission restart warning messages prior to the mission restart. Time in minutes.
MISSIONTIMER.restartDelay =  4 -- time in minutes to delay restart if active clients are present.
MISSIONTIMER.useSRS = true -- set to false to disable use of SRS for this module in this miz

-- start the mission timer
if MISSIONTIMER.Start then
	_msg = MISSIONTIMER.traceTitle .. "Call Start()"
	BASE:T(_msg)
	MISSIONTIMER:Start()  
end
  
--------------------------------[core\supportaircraft.lua]-------------------------------- 
 
env.info( "[JTF-1] supportaircraft.lua" )

--
--- Support Aircraft
--
-- **NOTE** THIS FILE MUST BE LOADED BEFORE SUPPORTAIRCRAFT_DATA.LUA IS LOADED
--
-- Spawn support aircraft (tankers, awacs) at zone markers placed in the mission editor.
--
-- Two files are required for this module;
--     supportaircraft.lua
--     supportaircraft_data.lua
--
-- 1. supportaircraft.lua
-- Core file. Contains functions, key values and GLOBAL settings.
--
-- 2. supportaircraft_data.lua
-- Contains settings that are specific to the miz.
--
-- Load order in miz MUST be;
--     1. supportaircraft.lua
--     2. supportaircraft_data.lua
--
-- In the mission editor, place a zone where you want the support aircraft to spawn.
-- Under SUPPORTAC.mission, add a config block for the aircraft you intend to spawn.
-- See the comments in the example block for explanations of each config option.
--
-- if the predefined templates are not being used a late activated template must be added 
-- to the miz for for each support *type* that is to be spawned.
-- The template should use the same name as the type in the SUPPORTAC.type data block, 
-- eg "KC-135" or "AWACS-E3A" etc.
--
-- Available support aircraft categories and types for which predefined templates are available [category] = [template name];
--
-- Category: tanker
--    tankerBoom = "KC-135" - SUPPORTAC.template["KC-135"]
--    tankerProbe = KC-135MPRS" - SUPPORTAC.template["KC-135MPRS"]
--    WIP** tankerProbeC130 = "KC-130" - SUPPORTAC.template["KC-130"]
--
-- Category: awacs
-- awacsE3a = "AWACS-E3A" - SUPPORTAC.template["AWACS-E3A"]
-- awacsE2d = "AWACS-E3A" - SUPPORTAC.template["AWACS-E3A"]
--

SUPPORTAC = {}
SUPPORTAC.traceTitle = "[JTF-1 SUPPORTAC] "
SUPPORTAC.ClassName = "SUPPORTAC"
SUPPORTAC.useSRS = true -- if true, messages will be sent over SRS using the MISSIONSRS module. If false, messages will be sent as in-game text.

SUPPORTAC = BASE:Inherit(SUPPORTAC, BASE:New())

local _msg -- used for debug messages only
local useSRS

-- function to start the SUPPORTAC module.
function SUPPORTAC:Start()
	_msg = string.format(self.traceTitle .. "Start()")
	self:T(_msg)

	-- default to not using SRS unless both the server AND the module request it AND MISSIONSRS.Radio.active is true
	useSRS = (JTF1.useSRS and self.useSRS) and MISSIONSRS.Radio.active 
	self:I({self.traceTitle .. "useSRS", self.useSRS})

	for index, mission in ipairs(SUPPORTAC.mission) do -- FOR-DO LOOP
		_msg = string.format(self.traceTitle .. "Start - mission %s", mission.name)
		SUPPORTAC:T({_msg, mission})

		local skip = false -- check value to exit early from the current for/do iteration

		local missionZone = ZONE:FindByName(mission.zone)
		-- check zone is present in miz
		if missionZone then -- CHECK MISSION ZONE
		
			-- if trace is on, draw the zone on the map
			if BASE:IsTrace() then 
				-- draw mission zone on map
				missionZone:DrawZone()
			end

			-- airbase to which aircraft will fly on RTB
			local missionTheatre = env.mission.theatre
			local missionHomeAirbase = mission.homeAirbase or SUPPORTAC.homeAirbase[missionTheatre]
			_msg = string.format(self.traceTitle .. "start - Mission %s set to use %s as home base.", mission.name, mission.homeAirbase)
			SUPPORTAC:T(_msg)
		if missionHomeAirbase then -- CHECK HOME AIRBASE
				_msg = string.format(self.traceTitle .. "start - Mission %s using %s as home base.", mission.name, missionHomeAirbase)
				SUPPORTAC:T(_msg)

				-- set home airbase in mission
				mission.homeAirbase = missionHomeAirbase

				-- values used to create mission spawn prefix
				local missionName = mission.name or SUPPORTAC.missionDefault.name
				local missionSpawnType = mission.type or SUPPORTAC.missionDefault.type
				-- set spawn prefix unique to support mission
				local missionSpawnAlias = string.format("M%02d_%s_%s", index, missionName, missionSpawnType)

				-- values used to define mission, spawn and waypoint locations
				local missionFlightLevel = mission.flightLevel or SUPPORTAC.missionDefault.flightLevel
				local missionSpawnDistance = mission.spawnDistance or SUPPORTAC.missionDefault.spawnDistance
				local missionAltitude = UTILS.FeetToMeters(missionFlightLevel * 100)
				local spawnDistance = UTILS.NMToMeters(missionSpawnDistance)
				local spawnHeading = mission.heading or SUPPORTAC.missionDefault.heading
				local spawnAngle = spawnHeading + 180
				if spawnAngle > 360 then 
					spawnAngle = spawnHeading - 180
				end

				-- coordinate used for the AUFTRAG
				local missionCoordinate = missionZone:GetCoordinate()
				missionCoordinate:SetAltitude(missionAltitude)
				mission.missionCoordinate = missionCoordinate

				-- coordinate used for the mission spawn template
				local spawnCoordinate = missionCoordinate
				spawnCoordinate:Translate(spawnDistance, spawnAngle, true, true)
				mission.spawnCoordinate = spawnCoordinate

				-- coordinate used for an initial waypoint for the flightgroup
				local waypointCoordinate = missionCoordinate
				waypointCoordinate = waypointCoordinate:Translate(spawnDistance/2, spawnAngle, true, true)
				mission.waypointCoordinate = waypointCoordinate

				if GROUP:FindByName(missionSpawnType) then -- FIND MISSION SPAWN TEMPLATE - use from mission block
					_msg = string.format(self.traceTitle .. "start - Using spawn template from miz for %s.", missionSpawnType)
					SUPPORTAC:T(_msg)

					-- add mission spawn object using template in miz
					mission.missionSpawnTemplate = SPAWN:NewWithAlias(missionSpawnType, missionSpawnAlias)
				elseif SUPPORTAC.template[missionSpawnType] then -- ELSEIF FIND MISSION SPAWN TEMPLATE-- Use predfined template from SUPPORTAC.template[missionSpawnType]
					_msg = string.format(self.traceTitle .. "start - Using spawn template from SUPPORTAC.template for %s.", missionSpawnType)
					SUPPORTAC:T(_msg)

					-- get template to use for spawn
					local spawnTemplate = SUPPORTAC.template[missionSpawnType]

					-- apply mission callsign to template (for correct display in F10 map)
					local missionCallsignId = mission.callsign
					local missionCallsignNumber = mission.callsignNumber or 1

					-- default callsign name to use if not found
					local missionCallsignName = "Ghost"

					if missionCallsignId then
						-- table of callsigns to search for callsign name
						local callsignTable = CALLSIGN.Tanker
						if mission.category == SUPPORTAC.category.awacs then
							callsignTable = CALLSIGN.AWACS
						end

						for name, value in pairs(callsignTable) do
							if value == missionCallsignId then
								missionCallsignName = name
							end
						end
						
					else
						missionCallsignId = 1
					end
					
					local missionCallsign = string.format("%s%d1", missionCallsignName, missionCallsignNumber)
					spawnTemplate.units[1]["callsign"]["name"] = missionCallsign
					spawnTemplate.units[1]["callsign"][1] = missionCallsignId
					spawnTemplate.units[1]["callsign"][2] = missionCallsignNumber
					spawnTemplate.units[1]["callsign"][1] = 1
					_msg = string.format(self.traceTitle .. "Callsign for mission %s is %s", mission.name, spawnTemplate.units[1]["callsign"]["name"])
					SUPPORTAC:T(_msg)
					
					local missionCountryid = mission.countryid or SUPPORTAC.missionDefault.countryid
					local missionCoalition = mission.coalition or SUPPORTAC.missionDefault.coalition
					local missionGroupCategory = mission.groupCategory or SUPPORTAC.missionDefault.groupCategory

					-- add mission spawn object using template in SUPPORTAC.template[missionSpawnType]
					mission.missionSpawnTemplate = SPAWN:NewFromTemplate(spawnTemplate, missionSpawnType, missionSpawnAlias)
						:InitCountry(missionCountryid) -- set spawn countryid
						:InitCoalition(missionCoalition) -- set spawn coalition
						:InitCategory(missionGroupCategory) -- set category
				else -- FIND MISSION SPAWN TEMPLATE
						skip = true -- can't exit to the next iteration so skip the rest of the mission creation
				end -- FIND MISSION SPAWN TEMPLATE

				-- if missionSpawnTamplate was not created continue to next iteration, otherwise set spawn inits and create a new mission
				if skip then -- CHECK SKIP
					_msg = string.format(self.traceTitle .. "Start - template for type %s for mission %s is not present in MIZ or as a predefined template!", missionSpawnType, missionSpawnAlias)
					SUPPORTAC:E(_msg)
				else -- CHECK SKIP
					-- mission spawn object defaults
					mission.missionSpawnTemplate:InitLateActivated() -- set template to late activated
					mission.missionSpawnTemplate:InitPositionCoordinate(mission.spawnCoordinate) -- set the default location at which the template is created
					mission.missionSpawnTemplate:InitHeading(mission.heading) -- set the default heading for the spawn template
					mission.missionSpawnTemplate:OnSpawnGroup(
						function(spawngroup)
							local spawnGroupName = spawngroup:GetName()
							_msg = string.format(SUPPORTAC.traceTitle .. "Spawned Group %s", spawnGroupName)
							BASE:T(_msg)
		
							spawngroup:CommandSetCallsign(mission.callsign, mission.callsignNumber) -- set the template callsign
						end
						,mission
					)

					_msg = string.format(self.traceTitle .. "New late activated mission spawn template added for %s", missionSpawnAlias)
					SUPPORTAC:T({_msg, mission.missionSpawnTemplate})
					
					-- call NewMission() to create the initial mission for the support aircraft
					-- subsequent mission restarts will be called after the mission's AUFTRAG is cancelled
					SUPPORTAC:NewMission(mission, 0) -- create new mission with specified delay to flightgroup activation
				end -- CHECK SKIP
			
			else -- CHECK HOME AIRBASE
				
				_msg = string.format(self.traceTitle .. "Start - Default Home Airbase for %s not defined! Mission skipped.", missionTheatre)
				SUPPORTAC:E(_msg)

			end -- CHECK HOME AIRBASE

		else -- CHECK MISSION ZONE
			_msg = string.format(self.traceTitle .. "Start - Zone %s not found! Mission skipped.", mission.zone)
			SUPPORTAC:E(_msg)
		end -- CHECK MISSION ZONE

	end -- FOR-DO LOOP

end -- SUPPORTAC:Start()

-- function to create new support mission and flightGroup
function SUPPORTAC:NewMission(mission, initDelay)
	_msg = string.format(self.traceTitle .. "Create new mission for %s", mission.name)
	SUPPORTAC:T(_msg)

	-- create new mission
	local newMission = {}
	local missionCoordinate = mission.missionCoordinate
	local missionAltitude = mission.flightLevel * 100
	local missionSpeed = mission.speed
	local missionHeading = mission.heading
	local missionDespawn = mission.despawn or SUPPORTAC.missionDefault.despawn
	
	-- use appropriate AUFTRAG type for mission
	if mission.category == SUPPORTAC.category.tanker then
		local missionLeg = mission.leg or SUPPORTAC.missionDefault.tankerLeg -- set leg length. Either mission defined or use default for tanker.
		-- create new tanker AUFTRAG mission
		newMission = AUFTRAG:NewTANKER(
		missionCoordinate, 
		missionAltitude, 
		missionSpeed, 
		missionHeading, 
		missionLeg
		)
		_msg = string.format(self.traceTitle .. "New mission created: %s", newMission:GetName())
		SUPPORTAC:T(_msg)
	elseif mission.category == SUPPORTAC.category.awacs then
		local missionLeg = mission.leg or SUPPORTAC.missionDefault.awacsLeg -- set leg length. Either mission defined or use default for AWACS.
		-- create new AWACS AUFTRAG mission
		newMission = AUFTRAG:NewAWACS(
		missionCoordinate,
		missionAltitude,
		missionSpeed,
		missionHeading,
		missionLeg
		)
		_msg = string.format(self.traceTitle .. "New mission created: %s", newMission:GetName())
		SUPPORTAC:T(_msg)
	else
		_msg = self.traceTitle .. "Mission category not defined!"
		SUPPORTAC:E(_msg)
		return -- exit mission creation
	end

	newMission:SetEvaluationTime(5)

	if mission.tacan ~= nil then
		newMission:SetTACAN(mission.tacan, mission.tacanid)
	end

	newMission:SetRadio(mission.radio)

	local despawnDelay = mission.despawnDelay or SUPPORTAC.missionDefault.despawnDelay
	local activateDelay = (mission.activateDelay or SUPPORTAC.missionDefault.activateDelay) + despawnDelay

	-- spawn new group
	local spawnGroup = mission.missionSpawnTemplate:SpawnFromCoordinate(mission.spawnCoordinate)
	_msg = string.format(self.traceTitle .. "New late activated group %s spawned.", spawnGroup:GetName())
	SUPPORTAC:T({_msg, spawnGroup})

	-- create new flightGroup
	local flightGroup = FLIGHTGROUP:New(spawnGroup)
		:SetDefaultCallsign(mission.callsign, mission.callsignNumber)
		:SetDefaultRadio(SUPPORTAC.missionDefault.radio)
		--:SetDefaultAltitude(mission.flightLevel * 100)
		:SetDefaultSpeed(mission.speed) -- mission.speed + (mission.flightLevel / 2)
		
	-- add an initial waypoint between the aircraft and the mission zone
	--flightGroup:AddWaypoint(mission.waypointCoordinate, missionSpeed)
	flightGroup:SetHomebase(mission.homeAirbase)

	flightGroup:Activate(activateDelay)

	-- function call after flightGroup is spawned
	-- assign mission to new ac
	function flightGroup:OnAfterSpawned()
		_msg = string.format(SUPPORTAC.traceTitle .. "Flightgroup %s activated.", self:GetName())
		SUPPORTAC:T(_msg)
		-- assign mission to flightGroup
		self:AddMission(newMission)
	end

	-- function called after flightGroup starts mission
	-- set RTB criteria
	function flightGroup:OnAfterMissionStart()
		local missionName = newMission:GetName()
		local flightGroupName = self:GetName()
		local flightGroupCallSign = SUPPORTAC:GetCallSign(self)

		_msg = string.format(SUPPORTAC.traceTitle .. "Mission %s for Flightgroup %s, %s has started.", missionName, flightGroupName, flightGroupCallSign) -- self:GetCallsignName(true)
		SUPPORTAC:T(_msg)

		self:SetFuelLowRefuel(false)
		local fuelLowThreshold = mission.fuelLowThreshold or SUPPORTAC.missionDefault.fuelLowThreshold

		if fuelLowThreshold > 0 then
			self:SetFuelLowThreshold(fuelLowThreshold) -- tune fuel RTB trigger for each support mission
		end

		self:SetFuelLowRTB()

		function flightGroup:OnAfterRTB()
			_msg = string.format(SUPPORTAC.traceTitle .. "Flightgroup %s is RTB.", flightGroupName)
			SUPPORTAC:T(_msg)
		end

		function newMission:OnAfterDone()
			local missionName = self.name
			local missionFreq = mission.radio
			local flightGroupName = flightGroup:GetName()
			local flightGroupCallSign = SUPPORTAC:GetCallSign(flightGroup)
		
			_msg = string.format(SUPPORTAC.traceTitle .. "newMission OnAfterDone - Mission %s for Flightgroup %s is done.", missionName, flightGroupName)
			SUPPORTAC:T(_msg)

			-- prepare off-station advisory message
			local msgText = string.format("All players, %s is going off station. A new aircraft will be on station shortly.", flightGroupCallSign)
			-- send off station advisory message
			SUPPORTAC:SendMessage(msgText, missionFreq)
			-- create a new mission to replace the departing support aircraft 
			SUPPORTAC:NewMission(mission)

			-- despawn this flightgroup, if it's still alive
			if flightGroup:IsAlive() and missionDespawn then
				_msg = string.format(SUPPORTAC.traceTitle .. "newMission OnAfterDone - Flightgroup %s will be despawned after %d seconds.", flightGroupName, despawnDelay)
				SUPPORTAC:T(_msg)

				flightGroup:Despawn(despawnDelay)
			end

		end -- newMission:OnAfterDone()

	end -- flightGroup:OnAfterMissionStart()

end -- SUPPORTAC:NewMission()

-- function called to send message
-- if MISSIONSRS is loaded, message will be sent on aupport aircraft freq.
-- Otherwise, message will be sent as text to all.
function SUPPORTAC:SendMessage(msgText, msgFreq)
	local _msg = string.format(self.traceTitle .. "SendMessage: %s", msgText)
	SUPPORTAC:T(_msg)
	if useSRS then
		MISSIONSRS:SendRadio(msgText, msgFreq)
	else
		MESSAGE:New(msgText):ToAll()
	end
end -- SUPPORTAC:SendMessage()

-- function called to return callsign name with major number only
function SUPPORTAC:GetCallSign(flightGroup)
	local callSign=flightGroup:GetCallsignName()
	if callSign then
		local callsignroot = string.match(callSign, '(%a+)') or "Ghost" -- Uzi
		local callnumber = string.match(callSign, "(%d+)$" ) or "91" -- 91
		local callnumbermajor = string.char(string.byte(callnumber,1)) -- 9
		callSign = callsignroot.." "..callnumbermajor -- Uzi/Victory 9
		return callSign
	end
	-- default callsign to return if it cannot be determined
	return "Ghostrider 1"
end -- SUPPORTAC:GetCallSign()

-- Support categories used to define which AUFTRAG type is used
SUPPORTAC.category = {
	tanker = 1,
	awacs = 2,
} -- end SUPPORTAC.category

-- Support aircraft types. Used to define the late activated group to be used as the spawn template
-- for the type. A check is made to ensure the template exists in the miz or that the value is the
-- same as the ID in the SUPPORTAC.template block (see supportaircraft.lua)
SUPPORTAC.type = {
	tankerBoom = "KC-135", -- template to be used for type = "tankerBoom" OR SUPPORTAC.template["KC-135"]
	tankerProbe = "KC-135MPRS", -- template to be used for type = "tankerProbe" OR SUPPORTAC.template["KC-135MPRS"]
	tankerProbeC130 = "KC-130", -- template for type = "tankerProbeC130" OR SUPPORTAC.template["KC-130"]
	awacsE3a = "AWACS-E3A", -- template to be used for type = "awacsE3a" OR SUPPORTAC.template["AWACS-E3A"]
	awacsE2d = "AWACS-E2D", -- template to be used for type = "awacsE2d" OR SUPPORTAC.template["AWACS-E2D"]
	awacsA50 = "AWACS-A50", -- template to be used for type = "awacsA50" OR SUPPORTAC.template["AWACS-A50"]
} -- end SUPPORTAC.type

-- Default home airbase. Added to the mission spawn template if not defined in
-- the mission data block
SUPPORTAC.homeAirbase = {
	["Nevada"] = AIRBASE.Nevada.Nellis_AFB,
	["Caucasus"] = AIRBASE.Caucasus.Tbilisi_Lochini,
	["PersianGulf"] = AIRBASE.PersianGulf.Al_Dhafra_AB,
	["Syria"] = AIRBASE.Syria.Incirlik,
	["Sinai"] = AIRBASE.Sinai.Cairo_International_Airport,
	["MarianaIslands"] = AIRBASE.MarianaIslands.Andersen_AFB,
} -- end SUPPORTAC.homeAirbase

-- default mission values to be used if not specified in the flight's mission data block
SUPPORTAC.missionDefault = {
	name = "TKR", -- default name for the mission
	category = SUPPORTAC.category.tanker, -- default aircraft category
	type = SUPPORTAC.type.tankerBoom, -- default spawn template that will be used
	callsign = CALLSIGN.Tanker.Texaco, -- default callsign
	callsignNumber = 1, -- default calsign number
	tacan = 100, -- default TACAN preset
	tacanid = "TEX", -- default TACAN ID
	radio = 251, -- default radio freq the ac will use when not on mission
	flightLevel = 200, -- default FL at which to fly mission
	speed = 315, -- default speed at which to fly mission
	heading = 90, --default heading on which to spawn aircraft
	tankerLeg = 50, -- default tanker racetrack leg length
	awacsLeg = 70, -- default awacs racetrack leg length
	activateDelay = 10, -- delay, in seconds, after the previous ac has despawned before the new ac will be activated 
	despawnDelay = 30, -- delay, in seconds, before the old ac will be despawned
	fuelLowThreshold = 30, -- default % fuel low level to trigger RTB
	spawnDistance = 1, -- default distance in NM from the mission zone at which to spawn aircraft
	countryid = country.id.USA, -- default country to be used for predfined templates
	coalition = coalition.side.BLUE, -- default coalition to use for predefined templates
	groupCategory = Group.Category.AIRPLANE, -- default group category to use for predefined templates
	despawn = true, -- default deSpawn option. if false or nil the aircraft will fly to hom base on RTB
} -- end SUPPORTAC.missionDefault

-- pre-defined spawn templates to be used as an alternative to placing late activated templates in the miz
SUPPORTAC.template = {
	["KC-135"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = true,
		["task"] = "Refueling",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 6096,
					["action"] = "Fly Over Point",
					["alt_type"] = "BARO",
					["speed"] = 164.44444444444,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "Tanker",
									["number"] = 1,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "WrappedAction",
									["number"] = 2,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "ActivateBeacon",
											["params"] = 
											{
												["type"] = 4,
												["AA"] = false,
												["callsign"] = "RTB",
												["modeChannel"] = "Y",
												["channel"] = 60,
												["system"] = 5,
												["unitId"] = 20564,
												["bearing"] = true,
												["frequency"] = 1147000000,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
								[3] = 
								{
									["number"] = 3,
									["auto"] = false,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "SetInvisible",
											["params"] = 
											{
												["value"] = true,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [3]
								[4] = 
								{
									["number"] = 4,
									["auto"] = false,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "Option",
											["params"] = 
											{
												["value"] = true,
												["name"] = 6,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [4]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = -88072.492518417,
					["x"] = -129287.90747937,
					["name"] = "",
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 1,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 6096,
				["alt_type"] = "BARO",
				["livery_id"] = "standard usaf",
				["skill"] = "Excellent",
				["speed"] = 164.44444444444,
				["type"] = "KC-135",
				["unitId"] = 1,
				["psi"] = 1.0956711527151,
				["y"] = -88072.492518417,
				["x"] = -129287.90747937,
				["name"] = "KC-135",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = 90700,
					["flare"] = 0,
					["chaff"] = 0,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = -1.0960185021449,
				["callsign"] = 
				{
					[1] = 1,
					[2] = 1,
					["name"] = "Texaco11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "088",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = -88072.492518417,
		["x"] = -129287.90747937,
		["name"] = "KC-135",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,
	}, -- end of [KC-135]
	["KC-135MPRS"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = true,
		["task"] = "Refueling",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 6096,
					["action"] = "Fly Over Point",
					["alt_type"] = "BARO",
					["speed"] = 164.44444444444,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "Tanker",
									["number"] = 1,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "WrappedAction",
									["number"] = 2,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "ActivateBeacon",
											["params"] = 
											{
												["type"] = 4,
												["AA"] = false,
												["callsign"] = "RTB",
												["modeChannel"] = "Y",
												["channel"] = 60,
												["system"] = 5,
												["unitId"] = 20565,
												["bearing"] = true,
												["frequency"] = 1147000000,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
								[3] = 
								{
									["number"] = 3,
									["auto"] = false,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "SetInvisible",
											["params"] = 
											{
												["value"] = true,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [3]
								[4] = 
								{
									["number"] = 4,
									["auto"] = false,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "Option",
											["params"] = 
											{
												["value"] = true,
												["name"] = 6,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [4]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = -87560.730212787,
					["x"] = -129296.58141675,
					["name"] = "",
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 1,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 6096,
				["alt_type"] = "BARO",
				["livery_id"] = "22nd ARW",
				["skill"] = "Excellent",
				["speed"] = 164.44444444444,
				["type"] = "KC135MPRS",
				["unitId"] = 1,
				["psi"] = 1.0660373467781,
				["y"] = -87560.730212787,
				["x"] = -129296.58141675,
				["name"] = "KC-135MPRS",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = 90700,
					["flare"] = 60,
					["chaff"] = 120,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = -1.0660373467782,
				["callsign"] = 
				{
					[1] = 3,
					[2] = 1,
					["name"] = "Shell11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "089",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = -87560.730212787,
		["x"] = -129296.58141675,
		["name"] = "KC-135MPRS",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,
	}, -- end of [KC-135MPRS]
	["KC-130"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = true,
		["task"] = "Refueling",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 2438.4,
					["action"] = "Turning Point",
					["alt_type"] = "BARO",
					["speed"] = 172.5,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["number"] = 1,
									["auto"] = true,
									["id"] = "Tanker",
									["enabled"] = true,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["number"] = 2,
									["auto"] = true,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "ActivateBeacon",
											["params"] = 
											{
												["type"] = 4,
												["AA"] = false,
												["unitId"] = 16683,
												["modeChannel"] = "Y",
												["channel"] = 60,
												["system"] = 5,
												["callsign"] = "ARC",
												["bearing"] = true,
												["frequency"] = 1147000000,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
								[3] = 
								{
									["enabled"] = true,
									["auto"] = false,
									["id"] = "WrappedAction",
									["number"] = 3,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "SetInvisible",
											["params"] = 
											{
												["value"] = true,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [3]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = -11585.313345172,
					["x"] = -399323.02717468,
					["name"] = "",
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 2447,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 2438.4,
				["alt_type"] = "BARO",
				["livery_id"] = "default",
				["skill"] = "Excellent",
				["speed"] = 172.5,
				["type"] = "KC130",
				["unitId"] = 16683,
				["psi"] = 1.4236457627903,
				["y"] = -11585.313345172,
				["x"] = -399323.02717468,
				["name"] = "KC-130",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = 30000,
					["flare"] = 60,
					["chaff"] = 120,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = -1.4236457627903,
				["callsign"] = 
				{
					[1] = 2,
					[2] = 1,
					["name"] = "Arco11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "139",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = -11585.313345172,
		["x"] = -399323.02717468,
		["name"] = "KC-130",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,		
	}, -- end of ["KC-130"]
	["AWACS-E3A"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = true,
		["task"] = "AWACS",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 6096,
					["action"] = "Fly Over Point",
					["alt_type"] = "BARO",
					["speed"] = 164.44444444444,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["number"] = 1,
									["auto"] = true,
									["id"] = "AWACS",
									["enabled"] = true,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["enabled"] = true,
									["auto"] = false,
									["id"] = "WrappedAction",
									["number"] = 2,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "SetInvisible",
											["params"] = 
											{
												["value"] = true,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
								[3] = 
								{
									["number"] = 3,
									["auto"] = false,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "EPLRS",
											["params"] = 
											{
												["value"] = true,
												["groupId"] = 46,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [3]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = -88627.624510964,
					["x"] = -129296.58141675,
					["name"] = "",
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 17446,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 6096,
				["alt_type"] = "BARO",
				["livery_id"] = "nato",
				["skill"] = "Excellent",
				["speed"] = 164.44444444444,
				["type"] = "E-3A",
				["unitId"] = 20566,
				["psi"] = 1.1124120783257,
				["y"] = -88627.624510964,
				["x"] = -129296.58141675,
				["name"] = "AWACS-E3A",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = 65000,
					["flare"] = 60,
					["chaff"] = 120,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = -1.1124120783257,
				["callsign"] = 
				{
					[1] = 1,
					[2] = 1,
					["name"] = "Overlord11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "090",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = -88627.624510964,
		["x"] = -129296.58141675,
		["name"] = "AWACS-E3A",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,
	}, -- end of [AWACS-E3A]
  	["AWACS-E2D"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = true,
		["task"] = "AWACS",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 9144,
					["action"] = "Turning Point",
					["alt_type"] = "BARO",
					["speed"] = 133.61111111111,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "AWACS",
									["number"] = 1,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "WrappedAction",
									["number"] = 2,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "EPLRS",
											["params"] = 
											{
												["value"] = true,
												["groupId"] = 38,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
								[3] = 
								{
									["enabled"] = true,
									["auto"] = false,
									["id"] = "WrappedAction",
									["number"] = 3,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "SetInvisible",
											["params"] = 
											{
												["value"] = true,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [3]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = -12187.736469214,
					["x"] = -399320.85899169,
					["name"] = "",
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 2452,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 9144,
				["alt_type"] = "BARO",
				["livery_id"] = "E-2D Demo",
				["skill"] = "High",
				["speed"] = 133.61111111111,
				["type"] = "E-2C",
				["unitId"] = 16697,
				["psi"] = 1.3887207292845,
				["y"] = -12187.736469214,
				["x"] = -399320.85899169,
				["name"] = "AWACS-E2D-1",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = "5624",
					["flare"] = 60,
					["chaff"] = 120,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = -1.3887207292845,
				["callsign"] = 
				{
					[1] = 1,
					[2] = 1,
					["name"] = "Overlord11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "143",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = -12187.736469214,
		["x"] = -399320.85899169,
		["name"] = "AWACS-E2D",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,		
	}, -- end of ["AWACS-E2D"]
	["AWACS-A50"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = false,
		["task"] = "AWACS",
		["uncontrolled"] = false,
		["taskSelected"] = true,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 10972.8,
					["action"] = "Turning Point",
					["alt_type"] = "BARO",
					["speed"] = 220.97222222222,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["enabled"] = true,
									["auto"] = true,
									["id"] = "AWACS",
									["number"] = 1,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["enabled"] = true,
									["auto"] = false,
									["id"] = "WrappedAction",
									["number"] = 2,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "SetInvisible",
											["params"] = 
											{
												["value"] = true,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
								[3] = 
								{
									["enabled"] = true,
									["auto"] = false,
									["id"] = "WrappedAction",
									["number"] = 3,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "Option",
											["params"] = 
											{
												["value"] = 0,
												["name"] = 1,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [3]
								[4] = 
								{
									["enabled"] = true,
									["auto"] = false,
									["id"] = "WrappedAction",
									["number"] = 4,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "Option",
											["params"] = 
											{
												["value"] = false,
												["name"] = 19,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [4]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = 315953.41096792,
					["x"] = 63905.857563882,
					["name"] = "",
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 588,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 10972.8,
				["alt_type"] = "BARO",
				["livery_id"] = "RF Air Force new",
				["skill"] = "High",
				["speed"] = 220.97222222222,
				["AddPropAircraft"] = 
				{
					["PropellorType"] = 0,
					["SoloFlight"] = false,
				}, -- end of ["AddPropAircraft"]
				["type"] = "A-50",
				["unitId"] = 1595,
				["psi"] = -1.7947587772958,
				["y"] = 315953.41096792,
				["x"] = 63905.857563882,
				["name"] = "RED_AWACS",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = "70000",
					["flare"] = 192,
					["chaff"] = 192,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = 1.7947587772958,
				["callsign"] = 666,
				["onboard_num"] = "027",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = 315953.41096792,
		["x"] = 63905.857563882,
		["name"] = "RED_AWACS",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,
	}, -- end of ["AWACS-RED"]
	["S3BTANKER"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = false,
		["task"] = "Refueling",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 1828.8,
					["action"] = "Turning Point",
					["alt_type"] = "BARO",
					["speed"] = 141.31944444444,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["number"] = 1,
									["auto"] = true,
									["id"] = "Tanker",
									["enabled"] = true,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["number"] = 2,
									["auto"] = true,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "ActivateBeacon",
											["params"] = 
											{
												["type"] = 4,
												["AA"] = false,
												["callsign"] = "TKR",
												["system"] = 4,
												["channel"] = 1,
												["modeChannel"] = "X",
												["bearing"] = true,
												["frequency"] = 962000000,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = 606748.96393416,
					["x"] = -358539.84033849,
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 1,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 1828.8,
				["alt_type"] = "BARO",
				["livery_id"] = "usaf standard",
				["skill"] = "High",
				["speed"] = 141.31944444444,
				["type"] = "S-3B Tanker",
				["unitId"] = 1,
				["psi"] = 0,
				["y"] = 606748.96393416,
				["x"] = -358539.84033849,
				["name"] = "Aerial-1-1",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = "7813",
					["flare"] = 30,
					["chaff"] = 30,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = 0,
				["callsign"] = 
				{
					[1] = 1,
					[2] = 1,
					["name"] = "Texaco11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "010",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = 606748.96393416,
		["x"] = -358539.84033849,
		["name"] = "S3BTANKER",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,
	}, -- end of ["S3BTANKER"]



} -- end SUPPORTAC.template

-- END SUPPORT AIRCRAFT SECTION  
--------------------------------[supportaircraft_data.lua]-------------------------------- 
 
env.info( "[JTF-1] supportaircraft_data" )

--- Support Aircraft Defined in this file
--
-- **NOTE**: SUPPORTAIRCRAFT.LUA MUST BE LOADED BEFORE THIS FILE IS LOADED!
--
-- This file contains the config data specific to the miz in which it will be used.
-- All functions and key values are in SUPPORTAIRCRAFT.LUA, which should be loaded first
--
-- Load order in miz MUST be;
--     1. supportaircraft.lua
--     2. supportaircraft_data.lua
--

-- Error prevention. Create empty container if SUPPORTAIRCRAFT.LUA is not loaded or has failed.
if not SUPPORTAC then 
	SUPPORTAC = {}
	SUPPORTAC.traceTitle = "[JTF-1 SUPPORTAC] "
	_msg = SUPPORTAC.traceTitle .. "CORE FILE NOT LOADED!"
	BASE:E(_msg)
end

SUPPORTAC.useSRS = true

-- Support aircraft missions. Each mission block defines a support aircraft mission. Each block is processed
-- and an aircraft will be spawned for the mission. When the mission is cancelled, eg after RTB or if it is destroyed,
-- a new aircraft will be spawned and a fresh AUFTRAG created.
--
-- See SUPPORTAC.missionDefault in supportaircraft.lua for all mission options.
--
SUPPORTAC.mission = {
	{
		name = "ARWB",
		category = SUPPORTAC.category.tanker,
		type = SUPPORTAC.type.tankerBoom,
		zone = "ARWB",
		callsign = CALLSIGN.Tanker.Arco,
		callsignNumber = 1,
		tacan = 36,
		tacanid = "ARC",
		radio = 276.5,
		flightLevel = 240,
		speed = 315,
		heading = 45,
		leg = 40,
		homeAirbase = AIRBASE.Syria.Ramat_David,
	},
	{
		name = "ARWB",
		category = SUPPORTAC.category.tanker,
		type = SUPPORTAC.type.tankerProbe,
		zone = "ARWB",
		callsign = CALLSIGN.Tanker.Shell,
		callsignNumber = 1,
		tacan = 115,
		tacanid = "SHL",
		radio = 317.5,
		flightLevel = 200,
		speed = 315,
		heading = 45,
		leg = 40,
		homeAirbase = AIRBASE.Syria.Ramat_David,
	},
	{
		name = "ARXE",
		category = SUPPORTAC.category.tanker,
		type = SUPPORTAC.type.tankerBoom,
		zone = "ARXE",
		callsign = CALLSIGN.Tanker.Arco,
		callsignNumber = 2,
		tacan = 105,
		tacanid = "ARC",
		radio = 276.5,
		flightLevel = 240,
		speed = 315,
		heading = 4,
		leg = 40,
		homeAirbase = AIRBASE.Syria.Incirlik,
	},
	{
		name = "ARXE",
		category = SUPPORTAC.category.tanker,
		type = SUPPORTAC.type.tankerProbe,
		zone = "ARXE",
		callsign = CALLSIGN.Tanker.Shell,
		callsignNumber = 2,
		tacan = 106,
		tacanid = "SHL",
		radio = 317.5,
		flightLevel = 200,
		speed = 315,
		heading = 4,
		leg = 40,
		homeAirbase = AIRBASE.Syria.Incirlik,
	},
	{
		name = "AWACSSOUTH",
		category = SUPPORTAC.category.awacs,
		type = SUPPORTAC.type.awacsE3a,
		zone = "AWACSSOUTH",
		callsign = CALLSIGN.AWACS.Magic,
		callsignNumber = 1,
		tacan = nil,
		tacanid = nil,
		radio = 367.575,
		flightLevel = 300,
		speed = 400,
		heading = 289,
		leg = 60,
		activateDelay = 5,
		despawnDelay = 10,
		fuelLowThreshold = 15,
		homeAirbase = AIRBASE.Syria.Ramat_David,
	},
}

-- call the function that initialises the SUPPORTAC module
if SUPPORTAC.Start ~= nil then
  _msg = SUPPORTAC.traceTitle .. "SUPPORTAIRCRAFT_DATA - call SUPPORTAC:Start()."
  BASE:I(_msg)
  SUPPORTAC:Start()
end


  
--------------------------------[core\cvncontrol.lua]-------------------------------- 
 
env.info( "[JTF-1] cvncontrol.lua" )

--- BEGIN CVNCONTROL MENU SECTION

CVNCONTROL = {}

CVNCONTROL.traceTitle = "[JTF-1 CVNCONTROL] "

CVNCONTROL.menu = {}

CVNCONTROL.default = {
	recoverywindow = {15, 30, 60, 90},
	cruise = 12,
	deckoffset = -9,
	countryid = country.id.USA, -- default country to be used for predfined templates
	coalition = coalition.side.BLUE, -- default coalition to use for predefined templates
	groupcategory = Group.Category.AIRPLANE, -- default group category to use for predefined templates
}

function CVNCONTROL:Start()

	for index, cvn in ipairs(CVNCONTROL.cvn) do

		-- local cvn = self.cvn[index]
		-- use data file values or set to default if not defined
		cvn.deckOffset = cvn.deckoffset or self.default.deckoffset
		cvn.recoverySpeed = cvn.recoveryspeed or self.default.recoveryspeed
		cvn.cruise = cvn.cruise or self.default.cruise
		cvn.recoveryWindow = cvn.recoveryWindow or self.default.recoverywindow
		--local tacan = cvn.tacan
		
		cvn.navygroup = NAVYGROUP:New(GROUP:FindByName(cvn.group)) -- cvn.navygroup
			--:Activate()
		
		cvn.navygroup:SetDefaultSpeed(cvn.cruise)
			:SetVerbosity(3)
			:SwitchTACAN(cvn.tacan, cvn.tacanid) -- add
			:SwitchICLS(cvn.icls, cvn.iclsid) -- add
			:SwitchRadio(cvn.radio,cvn.radiomodulation) -- add
			:SwitchAlarmstate(ENUMS.AlarmState.Red) -- add
			:SwitchROE(ENUMS.ROE.WeaponFree) -- add
			:SetPatrolAdInfinitum()

			-- if trace is on, draw the zone on the map
			if BASE:IsTrace() then 
				_msg = string.format("Add waypoint marks for group %s", cvn.name)
				BASE:T(_msg)
				-- draw waypoints on map
				cvn.navygroup:MarkWaypoints()
			end

			-- add recovery tanker if cvn.recoverytanker is true
		function cvn.navygroup:OnAfterElementSpawned(From, Event, To, Element)
			_msg = string.format("%sOnAfterElementSpawned for Element %s", CVNCONTROL.traceTitle, Element.name)
			BASE:T({_msg,Element})

			local elementName = Element.name
	
	
			if Element.name == cvn.unit then
				_msg = string.format("%sLead Element %s", CVNCONTROL.traceTitle, Element.name)
				BASE:T(_msg)
	
				-- -- set carrier nav and radio
				-- self:SwitchTACAN(cvn.tacan, cvn.tacanid)
				-- self:SwitchICLS(cvn.icls, cvn.iclsid)
				-- self:SwitchRadio(cvn.radio,cvn.radiomodulation)
				-- self:SwitchAlarmstate(ENUMS.AlarmState.Red)
				-- self:SwitchROE(ENUMS.ROE.WeaponFree)

				-- -- set cruise
				-- self:SetSpeed(cvn.cruise)

				-- add recovery tanker
				if cvn.tanker then
					_msg = string.format("%sRecovery Tanker for %s is required", CVNCONTROL.traceTitle, cvn.name)
					BASE:T(_msg)
					CVNCONTROL:recoveryTanker(cvn)
				end
				-- insert unit ID into DYNDECK group
				local unit = UNIT:FindByName(cvn.unit)--GROUP:FindByName(cvn.group):GetUnit(1)
				local unitid = unit:GetID()
				_msg = string.format("%sUnit object for %s", CVNCONTROL.traceTitle, cvn.unit)
				BASE:T({_msg, unit})
	
			end
	
		end
	
		_msg = string.format("%sNew Navygroup =", self.traceTitle)
		BASE:T({_msg,cvn.navygroup})
		
		-- add top menu if not already added
		if not self.menu.top then
			if JTF1.menu.root then
				self.menu.top = MENU_COALITION:New(coalition.side.BLUE,"CVN Control", JTF1.menu.root)
			else
				self.menu.top = MENU_COALITION:New(coalition.side.BLUE,"CVN Control")
			end
		end
	
		-- add menu for this CVN
		self.menu[cvn.name] = MENU_COALITION:New(coalition.side.BLUE, cvn.menutext, self.menu.top)
		
		for index, minutes in ipairs(cvn.recoveryWindow) do
			local menuText = string.format("Recovery/%dmin", minutes)
			local menuId = tostring(minutes)
	
			-- add command menus for this cvn
			self.menu[cvn.name][menuId] = MENU_COALITION_COMMAND:New( coalition.side.BLUE, menuText, self.menu[cvn.name], self.start_recovery, CVNCONTROL, cvn, minutes)
			_msg = string.format("%sAdd command menu for CVN %s window %s minutes.", self.traceTitle, cvn.name, menuId)
			BASE:T(_msg)
		
		end
	
		-- add command to cancel current recovery window
		self.menu[cvn.name]["cancel"] = MENU_COALITION_COMMAND:New( coalition.side.BLUE, "Cancel current recovery window.", self.menu[cvn.name], self.recoveryCancel, CVNCONTROL, cvn, cruise)
		_msg = string.format("%sAdd command menu to cancel recovery for CVN %s.", self.traceTitle, cvn.name)
		BASE:T(_msg)
			
	end

end

function CVNCONTROL:start_recovery(cvn, minutes)

	_msg = string.format("%sstart_recovery().", self.traceTitle)
	BASE:T({_msg,cvn})


	if cvn.navygroup:IsSteamingIntoWind() then
		_msg = string.format("%sCVN %s already steaming into wind.", self.traceTitle, cvn.name)
		BASE:T(_msg)

		local heading = UTILS.Round(cvn.navygroup:GetHeadingIntoWind(), 0)
		_msg = string.format("%s is currently launching/recovering.\n\nRecovery window closes at time %s\n\nBRC is %d",cvn.name, cvn.timeend, heading)
		MESSAGE:New(_msg, 5):ToBlue()

	else

		_msg = string.format("%sAdd turn into wind for CVN %s.", self.traceTitle, cvn.name)
		BASE:T(_msg)

		local timeNow = timer.getAbsTime()
		local secondsStart = timeNow
		local timeStart = UTILS.SecondsToClock(secondsStart,true)
		local secondsEnd = secondsStart + minutes * 60
		local timeEnd = UTILS.SecondsToClock(secondsEnd,true)
		local windDir = UTILS.Round(cvn.navygroup:GetWind(),0)
		local deckOffSet = cvn.deckoffset
		local uturn = cvn.uturn
		if uturn == nil then
			uturn = true
		end
		local recoverySpeed = cvn.recoveryspeed

		_msg =string.format("%s is turning for recovery.\n\nRecovery Window is open from %s until %s.\n\nWind is at %d", cvn.name, timeStart, timeEnd, windDir)
		Message_01 = MESSAGE:New(_msg, 10):ToBlue()

		cvn.navygroup:AddTurnIntoWind(nil, timeEnd , recoverySpeed, uturn, deckOffSet)
		cvn.timeend = timeEnd

	end 

end

function CVNCONTROL:recoveryCancel(cvn, cruise)
	_msg = string.format("%sCancel recovery window for CVN %s.", self.traceTitle, cvn.name)
	BASE:T(_msg)

	if cvn.navygroup:IsSteamingIntoWind() then

		cvn.navygroup:TurnIntoWindStop()
		--cvn.navygroup:SetSpeed(cruise)
	
		_msg = string.format("The recovery window for %s has been cancelled.", cvn.name)
		MESSAGE:New(_msg, 5):ToBlue()
	end

end

function CVNCONTROL:recoveryTanker(cvn)
	_msg = string.format("%sAdd Recovery Tanker for CVN %s.", self.traceTitle, cvn.name)
	BASE:T(_msg)

	if cvn.tankertemplate and GROUP:FindByName(cvn.tankertemplate) then
		_msg = string.format("%sUsing tanker spawn template in MIZ for CVN %s.", self.traceTitle, cvn.name)
		BASE:T(_msg)
		-- spawn from template in miz
		cvn.spawntemplate = SPAWN:New(cvn.tankertemplate)
	else
		_msg = string.format("%sUsing default tanker spawn template for CVN %s.", self.traceTitle, cvn.name)
		BASE:T(_msg)
		-- spawn using CVNCONTROL default template
		local countryId = cvn.countryid or CVNCONTROL.default.countryid
		local coalition = cvn.coalition or CVNCONTROL.default.coalition
		local groupCategory = cvn.groupcategory or CVNCONTROL.default.groupcategory
		local spawnTemplatePrefix = "S3BTANKER"
		local spawnAliasPrefix = string.format("%s_HAWK", cvn.name)

		-- add mission spawn object using template in SUPPORTAC.template[missionSpawnType]
		cvn.spawntemplate = SPAWN:NewFromTemplate(CVNCONTROL.templates[spawnTemplatePrefix], spawnTemplatePrefix, spawnAliasPrefix)
			:InitCountry(countryId) -- set spawn countryid
			:InitCoalition(coalition) -- set spawn coalition
			:InitCategory(groupCategory) -- set category
	end
	
	cvn.spawntemplate:InitLateActivated() -- set template to late activated

	-- add RECOVERYTANKER object after spawning
	cvn.spawntemplate:OnSpawnGroup(
		function(spawngroup)
			local spawnGroupName = spawngroup:GetName()
			_msg = string.format(CVNCONTROL.traceTitle .. "Spawned Group %s", spawnGroupName)
			BASE:T(_msg)

			cvn.spawntanker = RECOVERYTANKER:New(UNIT:FindByName(cvn.unit), spawnGroupName)
				:SetCallsign(cvn.tankercallsign, cvn.tankercallsignnumber)
				:SetTACAN(cvn.tankertacan, cvn.tankertacanid)
				:SetRadio(cvn.tankerradio)
				:SetTakeoffAir()
				:SetAltitude(6000)
				:SetRespawnInAir()
				:SetRecoveryAirboss( false )
				
			cvn.spawntanker:Start()
		end, cvn
	)

	-- spawn the tanker
	cvn.spawntemplate:Spawn()

end

CVNCONTROL.templates = {
	["S3BTANKER"] = {
		["lateActivation"] = true,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["radioSet"] = false,
		["task"] = "Refueling",
		["uncontrolled"] = false,
		["route"] = 
		{
			["routeRelativeTOT"] = true,
			["points"] = 
			{
				[1] = 
				{
					["alt"] = 1828.8,
					["action"] = "Turning Point",
					["alt_type"] = "BARO",
					["speed"] = 141.31944444444,
					["task"] = 
					{
						["id"] = "ComboTask",
						["params"] = 
						{
							["tasks"] = 
							{
								[1] = 
								{
									["number"] = 1,
									["auto"] = true,
									["id"] = "Tanker",
									["enabled"] = true,
									["params"] = 
									{
									}, -- end of ["params"]
								}, -- end of [1]
								[2] = 
								{
									["number"] = 2,
									["auto"] = true,
									["id"] = "WrappedAction",
									["enabled"] = true,
									["params"] = 
									{
										["action"] = 
										{
											["id"] = "ActivateBeacon",
											["params"] = 
											{
												["type"] = 4,
												["AA"] = false,
												["callsign"] = "TKR",
												["system"] = 4,
												["channel"] = 1,
												["modeChannel"] = "X",
												["bearing"] = true,
												["frequency"] = 962000000,
											}, -- end of ["params"]
										}, -- end of ["action"]
									}, -- end of ["params"]
								}, -- end of [2]
							}, -- end of ["tasks"]
						}, -- end of ["params"]
					}, -- end of ["task"]
					["type"] = "Turning Point",
					["ETA"] = 0,
					["ETA_locked"] = true,
					["y"] = 606748.96393416,
					["x"] = -358539.84033849,
					["formation_template"] = "",
					["speed_locked"] = true,
				}, -- end of [1]
			}, -- end of ["points"]
		}, -- end of ["route"]
		["groupId"] = 1,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["alt"] = 1828.8,
				["alt_type"] = "BARO",
				["livery_id"] = "usaf standard",
				["skill"] = "High",
				["speed"] = 141.31944444444,
				["type"] = "S-3B Tanker",
				["unitId"] = 1,
				["psi"] = 0,
				["y"] = 606748.96393416,
				["x"] = -358539.84033849,
				["name"] = "Aerial-1-1",
				["payload"] = 
				{
					["pylons"] = 
					{
					}, -- end of ["pylons"]
					["fuel"] = "7813",
					["flare"] = 30,
					["chaff"] = 30,
					["gun"] = 100,
				}, -- end of ["payload"]
				["heading"] = 0,
				["callsign"] = 
				{
					[1] = 1,
					[2] = 1,
					["name"] = "Texaco11",
					[3] = 1,
				}, -- end of ["callsign"]
				["onboard_num"] = "010",
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = 606748.96393416,
		["x"] = -358539.84033849,
		["name"] = "S3BTANKER",
		["communication"] = true,
		["start_time"] = 0,
		["modulation"] = 0,
		["frequency"] = 251,
	}, -- end of ["S3BTANKER"]
}

--CVNCONTROL:Start() -- called from cvncontrol_data

  
--------------------------------[cvncontrol_data.lua]-------------------------------- 
 
env.info( "[JTF-1] cvncontrol_data" )

--- MISSION JTF1 MENU SETTINGS FOR MIZ
--
-- This file MUST be loaded AFTER JTF1menu.lua
--
-- These values are specific to the miz and will override the default values in JTF1
--

-- Error prevention. Create empty container if module core lua not loaded.
if not CVNCONTROL then 
	CVNCONTROL = {}
	JTF1.traceTitle = "[JTF-1 CVNCONTROL] "
	_msg = CVNCONTROL.traceTitle .. "CORE FILE NOT LOADED!"
	BASE:E(_msg)
end

-- table of CVNs
CVNCONTROL.cvn = {
	{
		name = "CVN72", -- identifier for this CVN
		group = "JTF-1_CVN72", -- name of the GROUP in the ME
		unit = "JTF-1_CVN72", -- name of the carrier unit in the GROUP
		menutext = "CVN-72 Lincoln",-- text used for the carrier's control menu
		deckoffset = -9, -- deck offset from boat heading
        uturn = false, -- whether boat should return to the position it was in prior to the recover/launch request
		recoveryspeed = 32, -- wind speed over the deck dunring recovery
		tacan = 72, -- boat TACAN channel
		tacanid = "ABE", -- TACAN morse ID
		icls = 2,-- ICLS channel
		iclsid = "ABE", -- ICLS morse ID
		radio = 274.075, -- AI ATC freq
		radiomodulation = radio.modulation.AM, -- AI ATC freq modulation [radio.modulation.AM/FM]
		cruise = 11, -- speed at which boat should steam when not on launch/recovery
		tanker = true, -- if a Hawk tanker should be spawned
		tankertemplate = nil, -- name of GROUP template to be used. If nil, use the built-in template (default nil)
		tankercallsign = CALLSIGN.Tanker.Texaco, -- Hawk tanker callsign [CALLSIGN.Tanker.Texaco/Shell/Arco]
		tankercallsignnumber = 6, -- hawk tanker callsign number
		tankertacan = 38, -- hawk tanker TACAN channel
		tankertacanid = "TEX", -- hawk tanker TACAN morse ID
		tankerradio = 317.775, -- hawk tanker radio freq
	},
}

-- start the mission timer
if CVNCONTROL.Start then
	_msg = JTF1.traceTitle .. "Call Start()"
	BASE:T(_msg)
	CVNCONTROL:Start()
end
  
--------------------------------[core\dynamic_deck.lua]-------------------------------- 
 
env.info( "[JTF-1] dynamic_deck_population" )
--
-- F10 menu driven population of carrier deck with templated static objects.
--
-- Three files are required for this module;
--     dynamic_deck.lua
--     dynamic_deck_templates.lua
--     dynamic_deck_data.lua
--
-- 1. dynamic_dec.lua
-- Contains functions, key values and GLOBAL settings.
--
-- 2. dynamic_deck_templates.lua
-- Contains templates for the various staic objects/groups that can be placed on the carrier deck.
--
-- 3. dynamic_deck_data.lua
-- Contains settings that are specific to the miz.
--
-- Load order in miz MUST be;
--     1. dynamic_deck.lua
--     2. dynamic_deck_templates.lua
--     3. dynamic_deck_data.lua
--

DYNDECK = DYNDECK or {}

DYNDECK.menu = {}
DYNDECK.templates = {}

-- Function to parse through DYNDECK.ship and add menu items
function DYNDECK:Start()

    BASE:T("[JTF-1 DYNDECK] Add template menus to mission.")
    
    local menu_root

    if JTF1.menu.root then
        menu_root = JTF1.menu.root
    else
        -- add menu root
        menu_root = DYNDECK.menuroot or nil
    end
    
    DYNDECK.menu = MENU_MISSION:New("Dynamic Deck", menu_root)
 
    -- add menu root
    DYNDECK.menu = MENU_MISSION:New("Dynamic Deck", menu_root)

    -- add ship menus
     for shipIndex, menuship in ipairs(DYNDECK.ship) do
  
        -- add menu for ship
        DYNDECK.menu[menuship.id] = MENU_MISSION:New(menuship.name, DYNDECK.menu)
        -- add submenu for COMPLETE templates
        DYNDECK.menu[menuship.id].complete = MENU_MISSION:New("Complete Templates", DYNDECK.menu[menuship.id])
        -- add submenu for PARTIAL templates
        DYNDECK.menu[menuship.id].partial = MENU_MISSION:New("Partial Templates", DYNDECK.menu[menuship.id])
  
        
        -- add menu commands for full templates first
        for templateIndex, template in ipairs(menuship.templates) do
  
            if template.group == "" then -- this is a full template and should be placed in the ship's root menu
  
             end
  
        end

        -- add group submenus and add/remove commands for partial templates
        for templateIndex, template in ipairs(menuship.templates) do
 
            if template.group == "" then -- this is a complete template and should be placed in the Complete Templates submenu
                BASE:T("[JTF-1 DYNDECK] Add Full Template: " .. template.name)
  
                -- add command to ship root menu for full template 
                MENU_MISSION_COMMAND:New(template.menutext, DYNDECK.menu[menuship.id].complete, DYNDECK.applyTemplate, self, template.name, menuship.id, menuship.coalitionID, false, shipIndex ,templateIndex)

            else -- this is a partial template and should be placed in the Partial Templates submenu
                BASE:T("[JTF-1 DYNDECK] Add partial template.")

                -- add submenu for group if it doesn't already exist
                if not DYNDECK.menu[menuship.id].partial[template.group] then
                    BASE:T("[JTF-1 DYNDECK] Add Group submenu: " .. template.group)
 
                    DYNDECK.menu[menuship.id].partial[template.group] = MENU_MISSION:New(template.group, DYNDECK.menu[menuship.id].partial) -- add group submenu
                    DYNDECK.menu[menuship.id].partial[template.group].templates = {} -- container for grouped template submenus
 
                end
 
                if not DYNDECK.menu[menuship.id].partial[template.group].templates[template.name] then -- check template entry isn't a duplicate
                    BASE:T("[JTF-1 DYNDECK] Add template submenu: " .. template.name)

                    -- add a submenu for the group template
                    DYNDECK.menu[menuship.id].partial[template.group].templates[template.name] = MENU_MISSION:New(template.menutext, DYNDECK.menu[menuship.id].partial[template.group])

                    -- add a menu to apply the partial template
                    MENU_MISSION_COMMAND:New("Add",  DYNDECK.menu[menuship.id].partial[template.group].templates[template.name], DYNDECK.applyTemplate, self, template.name, menuship.id, menuship.coalitionID, true, shipIndex ,templateIndex)

                    -- add a menu to remove the partial template
                    MENU_MISSION_COMMAND:New("Remove", DYNDECK.menu[menuship.id].partial[template.group].templates[template.name], DYNDECK.clearDeck, self, template.name, menuship.id, menuship.coalitionID, shipIndex ,templateIndex)  

                else
                    BASE:T("[JTF-1 DYNDECK] ERROR! Menu has already been added for template: " .. template.name)
                end
 
            end
 
        end

        -- add menu to completely clear the ships deck of all statics
        MENU_MISSION_COMMAND:New("Clear Deck", DYNDECK.menu[menuship.id], DYNDECK.clearDeck, self, false, menuship.id, menuship.coalitionID, shipIndex)  
 
    end

end

-- Function to remove templates from the deck
function DYNDECK:clearDeck(templateName, shipID, coalitionID, shipIndex, templateIndex)
    BASE:T("[JTF-1 DYNDECK] clearDeck called.")

    local staticFind = templateName or ("dyndeck_" .. shipID) -- search string for identifying objects to remove
    local statObj = coalition.getStaticObjects(coalitionID) -- table of all static objects for coalition
 
    -- step through table to find statics with the search string in thier name
    for i, static in pairs(statObj) do
        local staticName = static:getName()
        if string.match(staticName, ".*" .. staticFind .. ".*") then
            static:destroy() -- destroy found static
        end
    end
    
    if templateName then
        -- if a template name was passed to clearDeck change its active tag to false
        DYNDECK.ship[shipIndex].templates[templateIndex].active = false
    else
        -- if no template name was provided change the active tag for all the ship's templates to false 
        for j, template in ipairs(DYNDECK.ship[shipIndex].templates) do
            DYNDECK.ship[shipIndex].templates[j].active = false
        end
        -- set the ship's fullTemplateActive tag to false
        DYNDECK.ship[shipIndex].fullTemplateActive = false
    end

end

-- Function to Apply the selected template to the ship
function DYNDECK:applyTemplate(templateName, shipID, coalitionID, noClear, shipIndex, templateIndex)
    BASE:T("[JTF-1 DYNDECK] applyTemplate called.")
 
    if DYNDECK[templateName] then -- check called template exists!
        -- only apply the template if it is *not* already active
 
        if not DYNDECK.ship[shipIndex].templates[templateIndex].active then
            BASE:T("[JTF-1 DYNDECK] Template not active.")
 
            if DYNDECK.ship[shipIndex].fullTemplateActive or (not noClear) then -- a full template is being, or has already been, applied
                BASE:T("[JTF-1 DYNDECK] Clear Deck.")
                -- clear deck before applying template
                DYNDECK:clearDeck(false, shipID, coalitionID, shipIndex)
            end
 
            BASE:T("[JTF-1 DYNDECK] Apply template: " .. templateName)
            -- call function for the template
            DYNDECK[templateName](shipID, templateName)
            -- mark the template as active
            DYNDECK.ship[shipIndex].templates[templateIndex].active = true
 
            if not noClear then 
                -- mark ship as having a full template applied
                DYNDECK.ship[shipIndex].fullTemplateActive = true
            end
        else
            BASE:T("[JTF-1 DYNDECK] TEMPLATE ALREADY ACTIVE!")
        end
 
    else -- if template does not exist
        _msg = "[JTF-1 DYNDECK] ERROR! REQUESTED SHIP TEMPLATE NOT FOUND: " .. templateName
        BASE:T(_msg)
        MESSAGE:New(_msg):ToAll()
    end
end


--DYNDECK:Start()

-- default templates for SC and Forrestal. Additional templates should be placed in dynamic_deck_templates.lua and loaded in ME after this file.

function DYNDECK.sc_flex4c234(shipID, templateName) 

    local namePrefix = "dyndeck_" .. shipID .. templateName

	-- Created by Redkite: https://www.youtube.com/user/RedKiteRender/

	local staticObj = {

		["groupId"] = 400,		-- ids of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 401,
		["rate"] = 30,
		["name"] = namePrefix .. "4temp EL1 Hornet 1", -- unit name (Name this something identifiable if you wish to remove it later)

		["type"] = "FA-18C_hornet", 			-- unit, category and livery of unit to place.
		["category"] = "Planes",
		["livery_id"] = "VFA-37",

		["y"] = -274433.54379664,
		["heading"] = 37.55948550292,		-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -90767.765053252,

		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
			["y"] = 31.035356269975,
			["angle"] = 4.7123889803847,
			["x"] = 23.392320767991
		}, -- end of ["offsets"]
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************



	local staticObj = {

		["groupId"] = 401,		-- ids of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 401,
		["rate"] = 30,
		["name"] = namePrefix .. "4temp EL1 Hornet 2", -- unit name (Name this something identifiable if you wish to remove it later)

		["type"] = "FA-18C_hornet", 			-- unit, category and livery of unit to place.
		["category"] = "Planes",
		["livery_id"] = "VFA-37",

		["y"] = 274432.9647788,
		["heading"] =  4.7123889803847,		-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] =  -90757.458535686,

		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
			["y"] = 31.61437411001,
			["angle"] = 4.7123889803847,
			["x"] = 33.698838333992,
		}, -- end of ["offsets"]
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************



	local staticObj = {

		["groupId"] = 403,		-- ids of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 403,
		["rate"] = 30,
		["name"] = namePrefix .. "4temp EL2 S3", -- unit name (Name this something identifiable if you wish to remove it later)

		["type"] = "S-3B Tanker", 			-- unit, category and livery of unit to place.
		["category"] = "Planes",
		["livery_id"] = "usaf standard",
		
		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
			["y"] = 29.84889531997,
			["angle"] =  4.4505895925855,
			["x"] = -14.761768433003,
		}, -- end of ["offsets"]

		["y"] = -274434.73025759,	-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] =  -90805.919142453,
		["heading"] =  4.4505895925855,	

		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************

	local staticObj = {
		
	-- Segment you need to change start  
		["groupId"] = 1,		-- id's of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 1,
		["name"] = namePrefix .. "4temp EL2 Hornet", -- unit name (Name this something identifiable if you wish to remove it later)
		
		
	
		["livery_id"] = "VFA-37",
		["category"] = "Planes",
		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
			["y"] = 31.382766969968,
			["angle"] = 4.7123889803847,
			["x"] = -25.013570722003,
		}, -- end of ["offsets"]
		["type"] = "FA-18C_hornet", 			-- unit, category and livery of unit to place.
	-- Segment you need to change end


		["x"] = -90816.170944742,			-- The initial location of the unit (required else unit will offet on origin of map)
		["y"] = -274433.19638594,
		["heading"] = 4.7123889803847,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************


	local staticObj = {

	-- Segment you need to change start  

		["name"] = namePrefix .. "4temp Finger Seahawk", -- unit name (Name this something identifiable if you wish to remove it later)


		["livery_id"] = "standard",
		["category"] = "Helicopters",
		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
			["y"] = -25.023610410048,
			["angle"] = 1.7976891295542,
			["x"] = -120.511512843,
		}, -- end of ["offsets"]
		["type"] = "SH-60B",			-- unit, category and livery of unit to place.
	-- Segment you need to change end

	-- these can be left as is, but are required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************


	local staticObj = {

	-- Segment you need to change start  

		["name"] = namePrefix .. "4temp Corral Crane", -- unit name (Name this something identifiable if you wish to remove it later)


		["category"] = "ADEquipment",
		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
			["y"] = 33.351427629997,
			["angle"] = 4.6600291028249,
			["x"] = -0.92642854900623,
		}, -- end of ["offsets"]
		["type"] = "AS32-36A",			-- unit, category and livery of unit to place.
	-- Segment you need to change end

	-- these can be left as is, but are required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************

	local staticObj = {

	-- Segment you need to change start  

		["name"] = namePrefix .. "4temp Point Firetruck", -- unit name (Name this something identifiable if you wish to remove it later)


		["category"] = "ADEquipment",
		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
												["y"] = 32.424999079958,
												["angle"] = 5.4279739737024,
												["x"] = 72.724640796994,
		}, -- end of ["offsets"]
		["type"] = "AS32-p25",			-- unit, category and livery of unit to place.
	-- Segment you need to change end

	-- these can be left as is, but are required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************

	local staticObj = {
		
	-- Segment you need to change start  

		["name"] = namePrefix .. "4temp Junk Yard Tug", -- unit name (Name this something identifiable if you wish to remove it later)


		["category"] = "ADEquipment",
		["offsets"] = {				-- The offsets that choose where on the deck it will spawn
												["y"] = 30.242116749985,
												["angle"] = 2.4958208303519,
												["x"] = -79.610005513998,
		}, -- end of ["offsets"]
		["type"] = "AS32-31A",			-- unit, category and livery of unit to place.
	-- Segment you need to change end

	-- these can be left as is, but are required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)


	-- ********************************************************

	local staticObj = {
	-- Segment you need to change start  

		["name"] = namePrefix .. "4temp EL4 Tomcat 1", -- unit name (Name this something identifiable if you wish to remove it later)

											["livery_id"] = "VF-102 Diamondbacks",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = -32.180430089997,
												["angle"] = 1.9373154697137,
												["x"] = -98.393250321998,
											}, -- end of ["offsets"]
											["type"] = "F-14B",
	-- Segment you need to change end

	-- these can be left as is, but are required.
	--	["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************


	local staticObj = {

		["name"] = namePrefix .. "4temp EL4 Tomcat 2", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
										["livery_id"] = "VF-102 Diamondbacks 102",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = -32.924847350048,
												["angle"] = 1.7627825445143,
												["x"] = -110.574623714,
											}, -- end of ["offsets"]
											["type"] = "F-14B",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************

	local staticObj = {

		["name"] = namePrefix .. "4temp Corral E2", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
										["livery_id"] = "E-2D Demo",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 30.665721859958,
												["angle"] = 4.6949356878647,
												["x"] = 8.8025239199924,
											}, -- end of ["offsets"]
											["type"] = "E-2C",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************

	local staticObj = {

		["name"] = namePrefix .. "4temp Point Hornet", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["livery_id"] = "VFA-37",
											["category"] = "Planes",
											["type"] = "FA-18C_hornet",
											["offsets"] = 
											{
												["y"] = 34.190822379955,
												["angle"] = 3.3335788713092,
												["x"] = 61.561528349994,
											}, -- end of ["offsets"]
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************


	local staticObj = {

		["name"] = namePrefix .. "4temp LSO Station 3", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -22.370473980031,
												["angle"] = 2.4434609527921,
												["x"] = -130.61201797701,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso_usa",
											["type"] = "Carrier LSO Personell",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************



	local staticObj = {

		["name"] = namePrefix .. "4temp LSO Station 1", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -21.789118479996,
												["angle"] = 4.2935099599061,
												["x"] = -129.42353100701,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso1_usa",
											["type"] = "Carrier LSO Personell 1",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************


	local staticObj = {

		["name"] = namePrefix .. "4temp LSO Station 2", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
										["livery_id"] = "white",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -22.656188270019,
												["angle"] = 1.850049007114,
												["x"] = -129.497732263,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
											["unitId"] = 17,
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

	-- ********************************************************

	local staticObj = {

		["name"] = namePrefix .. "4temp Point Tech 3", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["livery_id"] = "white",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 31.799837369996,
												["angle"] = 1.850049007114,
												["x"] = 58.869844022993,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)
	-- ********************************************************
	local staticObj = {

		["name"] = namePrefix .. "4temp Point Tech 2", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["livery_id"] = "purple",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 36.657607259986,
												["angle"] = 5.9341194567807,
												["x"] = 60.15744568099,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)
	-- ********************************************************
	local staticObj = {

		["name"] = namePrefix .. "4temp Point Tech 1", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["livery_id"] = "purple",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 32.502165549959,
												["angle"] = 2.460914245312,
												["x"] = 67.356309497001,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)
	-- ********************************************************
	local staticObj = {

		["name"] = namePrefix .. "4temp Corral Tech 1", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 25.203805239988,
												["angle"] = 4.7472955654246,
												["x"] = 15.325497041995,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)
	-- ********************************************************
	local staticObj = {

		["name"] = namePrefix .. "4temp Corral Tech 2", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 24.753144659975,
												["angle"] = 5.218534463463,
												["x"] = 13.844755134996,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)
	-- ********************************************************
	local staticObj = {

		["name"] = namePrefix .. "4temp Junk Yard Seaman", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 31.255831669958,
												["angle"] = 4.7472955654246,
												["x"] = -78.473079361007,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_seaman_USA",
											["type"] = "Carrier Seaman",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)
	-- ********************************************************
	local staticObj = {

		["name"] = namePrefix .. "4temp EL2 Tug", -- unit name (Name this something identifiable if you wish to remove it later)
	-- Copy and paste over this with the units information
											["category"] = "ADEquipment",
											["offsets"] = 
											{
												["y"] = 25.035044669989,
												["angle"] = 2.4958208303519,
												["x"] = -22.810439552006,
											}, -- end of ["offsets"]
											["type"] = "AS32-31A",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 33,		-- id's of the unit we're spawning (will auto increment if id taken?)
		["unitId"] = 33,
		["y"] = -00127900,			-- The initial location of the unit (required else unit will offet on origin of map)
		["x"] = -00126557,			
		["heading"] = 37.55948550292,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
		["rate"] = 30,
	}
	coalition.addStaticObject(country.id.USA, staticObj)

    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK103",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.574397958365,
                                                ["angle"] = 12.184219274949,
                                                ["x"] = -140.22202233315,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK106",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.999894815472,
                                                ["angle"] = 24.27935099127,
                                                ["x"] = -126.3733451222,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.245066265035,
                                                ["angle"] = 30.230923740571,
                                                ["x"] = -115.09659159312,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.273813754869,
                                                ["angle"] = 3.701919110256,
                                                ["x"] = -131.81665467857,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.24388530906,
                                                ["angle"] = 3.5448394775765,
                                                ["x"] = -119.34764000727,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.726752809735,
                                                ["angle"] = 3.6146526476563,
                                                ["x"] = -130.88525791424,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.911959307137,
                                                ["angle"] = 6.8435117638458,
                                                ["x"] = -114.74868459558,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.905678081278,
                                                ["angle"] = 5.2727154370509,
                                                ["x"] = -126.96371630654,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.76100756934,
                                                ["angle"] = 6.8435117638458,
                                                ["x"] = -110.09545944759,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    

	-- ********************************************************

end

function DYNDECK.forrestal_flex4c234(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Forrestal Full Deck 3 Cats 4 Spawns

    local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.33673287998,
                                                ["angle"] = 4.3982297150257,
                                                ["x"] = -77.835629449983,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_MD3",
                                            ["unitId"] = 27,
                                            ["rate"] = 1,
                                            ["y"] = 469450.90816145,
                                            ["x"] = -360934.97848659,
                                            ["name"] = namePrefix .. "CV-59 MD-3 Mule 1",
                                            ["heading"] = 4.3982297150257,
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                        ["livery_id"] = "vf-33 starfighters ab201 (1988)",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.972092159966,
                                                ["angle"] = 4.6949356878647,
                                                ["x"] = -70.971807360009,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 34,
                                            ["rate"] = "50",
                                            ["y"] = 469458.54352073,
                                            ["x"] = -360928.1146645,
                                            ["name"] = namePrefix .. "CV-59 F14A heck 1",
                                            ["heading"] = 4.6949356878647,
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-33 starfighters ab201 (1988)",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.235489899991,
                                                ["angle"] = 1.5882496193148,
                                                ["x"] = -62.675864739984,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 35,
                                            ["rate"] = "50",
                                            ["y"] = 469454.80691847,
                                            ["x"] = -360919.81872188,
                                            ["name"] = namePrefix .. "CV-59 F14A heck 2",
                                            ["heading"] = 1.5882496193148,
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)

                                            ["livery_id"] = "VF-21 Freelancers 200",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 10.262743929983,
                                                ["angle"] = 3.7350045992679,
                                                ["x"] = 171.91009173996,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 2,
                                            ["rate"] = "50",
                                            ["y"] = 469438.8341725,
                                            ["x"] = -360685.2327654,
                                            ["name"] = namePrefix .. "CV-59 F14A bug 1",
                                            ["heading"] = 3.7350045992679,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "VF-21 Freelancers 200",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 10.134759989975,
                                                ["angle"] = 3.7350045992679,
                                                ["x"] = 157.95984155999,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 5,
                                            ["rate"] = "50",
                                            ["y"] = 469438.70618856,
                                            ["x"] = -360699.18301558,
                                            ["name"] = namePrefix .. "CV-59 F14A bug 2",
                                            ["heading"] = 3.7350045992679,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "VF-21 Freelancers 200",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 10.817341029993,
                                                ["angle"] = 3.7350045992679,
                                                ["x"] = 143.58297822002,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 8,
                                            ["rate"] = "50",
                                            ["y"] = 469439.3887696,
                                            ["x"] = -360713.55987892,
                                            ["name"] = namePrefix .. "CV-59 F14A bug 3",
                                            ["heading"] = 3.7350045992679,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "VF-21 Freelancers 200",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.457260769967,
                                                ["angle"] = 3.7350045992679,
                                                ["x"] = 128.35288858,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 9,
                                            ["rate"] = "50",
                                            ["y"] = 469440.02868934,
                                            ["x"] = -360728.78996856,
                                            ["name"] = namePrefix .. "CV-59 F14A bug 4",
                                            ["heading"] = 3.7350045992679,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "USMC VMA-311 Tomcats",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.070305300003,
                                                ["angle"] = 5.1312680008633,
                                                ["x"] = -2.6952501999913,
                                            }, -- end of ["offsets"]
                                            ["type"] = "A-4E-C",
                                            ["unitId"] = 23,
                                            ["rate"] = 40,
                                            ["y"] = 469442.64173387,
                                            ["x"] = -360859.83810734,
                                            ["name"] = namePrefix .. "CV-59 A4 mid 1",
                                            ["heading"] = 5.1312680008633,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.15586408996,
                                                ["angle"] = 4.7298422729046,
                                                ["x"] = -41.413245120028,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_NS60",
                                            ["unitId"] = 26,
                                            ["rate"] = 1,
                                            ["y"] = 469456.72729266,
                                            ["x"] = -360898.55610226,
                                            ["name"] = namePrefix .. "CV-59 NS-60 Tilly 1",
                                            ["heading"] = 4.7298422729046,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.33673287998,
                                                ["angle"] = 4.3982297150257,
                                                ["x"] = -77.835629449983,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_MD3",
                                            ["unitId"] = 27,
                                            ["rate"] = 1,
                                            ["y"] = 469450.90816145,
                                            ["x"] = -360934.97848659,
                                            ["name"] = namePrefix .. "CV-59 MD-3 Mule 1",
                                            ["heading"] = 4.3982297150257,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 31.27796856995,
                                                ["angle"] = 5.2883476335428,
                                                ["x"] = -50.06724542001,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_Large_Forklift",
                                            ["unitId"] = 28,
                                            ["rate"] = 1,
                                            ["y"] = 469459.84939714,
                                            ["x"] = -360907.21010256,
                                            ["name"] = namePrefix .. "CV-59 Large Forklift 1",
                                            ["heading"] = -0.9948376736368,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.971448700002,
                                                ["angle"] = 0.2094395102393,
                                                ["x"] = 84.003947869991,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_H60",
                                            ["unitId"] = 29,
                                            ["rate"] = 1,
                                            ["y"] = 469444.54287727,
                                            ["x"] = -360773.13890927,
                                            ["name"] = namePrefix .. "CV-59 Hyster 60 1",
                                            ["heading"] = 0.2094395102393,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "VF-31 AE204 1988",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.447393599956,
                                                ["angle"] = 3.7350045992679,
                                                ["x"] = 113.54730550997,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 31,
                                            ["rate"] = "50",
                                            ["y"] = 469440.01882217,
                                            ["x"] = -360743.59555163,
                                            ["name"] = namePrefix .. "CV-59 F14A bug 5",
                                            ["heading"] = 3.7350045992679,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "VF-31 AE200 1988",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.325865889958,
                                                ["angle"] = 3.7350045992679,
                                                ["x"] = 99.885688829992,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 32,
                                            ["rate"] = "50",
                                            ["y"] = 469441.89729446,
                                            ["x"] = -360757.25716831,
                                            ["name"] = namePrefix .. "CV-59 F14A bug 6",
                                            ["heading"] = 3.7350045992679,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "vf-33 starfighters ab201 (1988)",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.972092159966,
                                                ["angle"] = 4.6949356878647,
                                                ["x"] = -70.971807360009,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 34,
                                            ["rate"] = "50",
                                            ["y"] = 469458.54352073,
                                            ["x"] = -360928.1146645,
                                            ["name"] = namePrefix .. "CV-59 F14A heck 1",
                                            ["heading"] = 4.6949356878647,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "vf-33 starfighters ab201 (1988)",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.235489899991,
                                                ["angle"] = 1.5882496193148,
                                                ["x"] = -62.675864739984,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14A-135-GR",
                                            ["unitId"] = 35,
                                            ["rate"] = "50",
                                            ["y"] = 469454.80691847,
                                            ["x"] = -360919.81872188,
                                            ["name"] = namePrefix .. "CV-59 F14A heck 2",
                                            ["heading"] = 1.5882496193148,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "USMC VMA-311 Tomcats",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 12.865749110002,
                                                ["angle"] = 5.1312680008633,
                                                ["x"] = 6.0377822199953,
                                            }, -- end of ["offsets"]
                                            ["type"] = "A-4E-C",
                                            ["unitId"] = 36,
                                            ["rate"] = 40,
                                            ["y"] = 469441.43717768,
                                            ["x"] = -360851.10507492,
                                            ["name"] = namePrefix .. "CV-59 A4 mid 2",
                                            ["heading"] = 5.1312680008633,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "USN VA-144 Roadrunners",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.123868289986,
                                                ["angle"] = 5.1312680008633,
                                                ["x"] = 14.899874229974,
                                            }, -- end of ["offsets"]
                                            ["type"] = "A-4E-C",
                                            ["unitId"] = 37,
                                            ["rate"] = 40,
                                            ["y"] = 469441.69529686,
                                            ["x"] = -360842.24298291,
                                            ["name"] = namePrefix .. "CV-59 A4 mid 3",
                                            ["heading"] = 5.1312680008633,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "USN VA-144 Roadrunners",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 12.263471009966,
                                                ["angle"] = 5.1312680008633,
                                                ["x"] = 24.837462849973,
                                            }, -- end of ["offsets"]
                                            ["type"] = "A-4E-C",
                                            ["unitId"] = 38,
                                            ["rate"] = 40,
                                            ["y"] = 469440.83489958,
                                            ["x"] = -360832.30539429,
                                            ["name"] = namePrefix .. "CV-59 A4 mid 4",
                                            ["heading"] = 5.1312680008633,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "VAW-124 BearAces",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.332032859966,
                                                ["angle"] = 4.2062434973063,
                                                ["x"] = 76.439462339971,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
                                            ["unitId"] = 40,
                                            ["rate"] = "100",
                                            ["y"] = 469444.90346143,
                                            ["x"] = -360780.7033948,
                                            ["name"] = namePrefix .. "CV-59 E2D bug 1",
                                            ["heading"] = 4.2062434973063,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.159426649974,
                                                ["angle"] = 4.7298422729046,
                                                ["x"] = 66.45111609,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_NS60",
                                            ["unitId"] = 41,
                                            ["rate"] = 1,
                                            ["y"] = 469452.73085522,
                                            ["x"] = -360790.69174105,
                                            ["name"] = namePrefix .. "CV-59 NS-60 Tilly 2",
                                            ["heading"] = 4.7298422729046,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.458585369983,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 88.506038529973,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 43,
                                            ["rate"] = 100,
                                            ["y"] = 469445.03001394,
                                            ["x"] = -360768.63681861,
                                            ["name"] = namePrefix .. "CV-59 Ammo 1",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.453315379971,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 89.827295569994,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 44,
                                            ["rate"] = 100,
                                            ["y"] = 469445.02474395,
                                            ["x"] = -360767.31556157,
                                            ["name"] = namePrefix .. "CV-59 Ammo 2",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.497724729998,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 62.634507059993,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 45,
                                            ["rate"] = 100,
                                            ["y"] = 469458.0691533,
                                            ["x"] = -360794.50835008,
                                            ["name"] = namePrefix .. "CV-59 Ammo 3",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 30.737726669991,
                                                ["angle"] = 4.8345620280243,
                                                ["x"] = 61.212707380007,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 46,
                                            ["rate"] = 100,
                                            ["y"] = 469459.30915524,
                                            ["x"] = -360795.93014976,
                                            ["name"] = namePrefix .. "CV-59 Ammo 4",
                                            ["heading"] = -1.4486232791553,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.599187659973,
                                                ["angle"] = 0.0174532925199,
                                                ["x"] = -45.894397350028,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 47,
                                            ["rate"] = 100,
                                            ["y"] = 469453.17061623,
                                            ["x"] = -360903.03725449,
                                            ["name"] = namePrefix .. "CV-59 Ammo 5",
                                            ["heading"] = 0.0174532925199,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.251629469974,
                                                ["angle"] = 0.0174532925199,
                                                ["x"] = -45.874063010036,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 48,
                                            ["rate"] = 100,
                                            ["y"] = 469451.82305804,
                                            ["x"] = -360903.01692015,
                                            ["name"] = namePrefix .. "CV-59 Ammo 6",
                                            ["heading"] = 0.0174532925199,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.196566589992,
                                                ["angle"] = 1.4835298641951,
                                                ["x"] = -48.328411909984,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 49,
                                            ["rate"] = 100,
                                            ["y"] = 469452.76799516,
                                            ["x"] = -360905.47126905,
                                            ["name"] = namePrefix .. "CV-59 Bombs 1",
                                            ["heading"] = 1.4835298641951,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.106317459955,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 91.922479700006,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 50,
                                            ["rate"] = 100,
                                            ["y"] = 469444.67774603,
                                            ["x"] = -360765.22037744,
                                            ["name"] = namePrefix .. "CV-59 Bombs 2",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.031181099999,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 93.406567899976,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 51,
                                            ["rate"] = 100,
                                            ["y"] = 469444.60260967,
                                            ["x"] = -360763.73628924,
                                            ["name"] = namePrefix .. "CV-59 Bombs 3",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.933522039966,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 94.803157570015,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 52,
                                            ["rate"] = 100,
                                            ["y"] = 469444.50495061,
                                            ["x"] = -360762.33969957,
                                            ["name"] = namePrefix .. "CV-59 Bombs 4",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.045754369989,
                                                ["angle"] = 4.7298422729046,
                                                ["x"] = 62.761577569996,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 53,
                                            ["rate"] = 100,
                                            ["y"] = 469449.61718294,
                                            ["x"] = -360794.38127957,
                                            ["name"] = namePrefix .. "CV-59 Bombs 5",
                                            ["heading"] = -1.553343034275,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.37175436999,
                                                ["angle"] = 0,
                                                ["x"] = 26.183162770001,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 54,
                                            ["rate"] = 100,
                                            ["y"] = 469449.94318294,
                                            ["x"] = -360830.95969437,
                                            ["name"] = namePrefix .. "CV-59 Bombs 6",
                                            ["heading"] = 0,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.893985959992,
                                                ["angle"] = 0,
                                                ["x"] = 23.123464139993,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 56,
                                            ["rate"] = 100,
                                            ["y"] = 469449.46541453,
                                            ["x"] = -360834.019393,
                                            ["name"] = namePrefix .. "CV-59 Bombs 8",
                                            ["heading"] = 0,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.439851770003,
                                                ["angle"] = 0,
                                                ["x"] = 23.309999260004,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 57,
                                            ["rate"] = 100,
                                            ["y"] = 469448.01128034,
                                            ["x"] = -360833.83285788,
                                            ["name"] = namePrefix .. "CV-59 Bombs 9",
                                            ["heading"] = 0,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 1500,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.212431159976,
                                                ["angle"] = 4.7298422729046,
                                                ["x"] = 28.729959079996,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "ammo_box_cargo",
                                            ["type"] = "ammo_cargo",
                                            ["unitId"] = 58,
                                            ["rate"] = 100,
                                            ["y"] = 469449.78385973,
                                            ["x"] = -360828.41289806,
                                            ["name"] = namePrefix .. "CV-59 Ammo 7",
                                            ["heading"] = -1.553343034275,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.728229369968,
                                                ["angle"] = 1.2740903539558,
                                                ["x"] = -54.847454730014,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_MD3",
                                            ["unitId"] = 59,
                                            ["rate"] = 1,
                                            ["y"] = 469455.29965794,
                                            ["x"] = -360911.99031187,
                                            ["name"] = namePrefix .. "CV-59 MD-3 Mule 2",
                                            ["heading"] = 1.274090353955,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.97817606997,
                                                ["angle"] = 2.8797932657906,
                                                ["x"] = 90.446121620014,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_MD3",
                                            ["unitId"] = 60,
                                            ["rate"] = 1,
                                            ["y"] = 469440.54960464,
                                            ["x"] = -360766.69673552,
                                            ["name"] = namePrefix .. "CV-59 MD-3 Mule 3",
                                            ["heading"] = 2.8797932657906,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.195021889987,
                                                ["angle"] = 5.7246799465414,
                                                ["x"] = 28.489813330001,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 65,
                                            ["rate"] = 20,
                                            ["y"] = 469447.76645046,
                                            ["x"] = -360828.65304381,
                                            ["name"] = namePrefix .. "CV-59 Technician 1",
                                            ["heading"] = -0.5585053606382,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 17.918418669957,
                                                ["angle"] = 6.1959188445799,
                                                ["x"] = 28.31462095998,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 66,
                                            ["rate"] = 20,
                                            ["y"] = 469446.48984724,
                                            ["x"] = -360828.82823618,
                                            ["name"] = namePrefix .. "CV-59 Technician 2",
                                            ["heading"] = -0.0872664625997,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.632032659953,
                                                ["angle"] = 4.3633231299858,
                                                ["x"] = 30.092285580002,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 67,
                                            ["rate"] = 20,
                                            ["y"] = 469450.20346123,
                                            ["x"] = -360827.05057156,
                                            ["name"] = namePrefix .. "CV-59 Technician 3",
                                            ["heading"] = -1.9198621771938,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 31.081593789975,
                                                ["angle"] = 4.3458698374659,
                                                ["x"] = 62.348933589994,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 68,
                                            ["rate"] = 20,
                                            ["y"] = 469459.65302236,
                                            ["x"] = -360794.79392355,
                                            ["name"] = namePrefix .. "CV-59 Technician 4",
                                            ["heading"] = -1.9373154697137,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.131282319955,
                                                ["angle"] = 3.2463124087094,
                                                ["x"] = -44.513802300033,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 69,
                                            ["rate"] = 20,
                                            ["y"] = 469452.70271089,
                                            ["x"] = -360901.65665944,
                                            ["name"] = namePrefix .. "CV-59 Technician 5",
                                            ["heading"] = -3.0368728984702,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.487857559987,
                                                ["angle"] = 4.1713369122664,
                                                ["x"] = -47.165706939995,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 70,
                                            ["rate"] = 20,
                                            ["y"] = 469454.05928613,
                                            ["x"] = -360904.30856408,
                                            ["name"] = namePrefix .. "CV-59 Technician 6",
                                            ["heading"] = -2.1118483949132,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.100804699992,
                                                ["angle"] = 0.9424777960769,
                                                ["x"] = 61.324876810017,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 71,
                                            ["rate"] = 20,
                                            ["y"] = 469457.67223327,
                                            ["x"] = -360795.81798033,
                                            ["name"] = namePrefix .. "CV-59 Technician 7",
                                            ["heading"] = 0.9424777960769,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.730528499989,
                                                ["angle"] = 1.3439035240356,
                                                ["x"] = 62.48927043,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 72,
                                            ["rate"] = 20,
                                            ["y"] = 469456.30195707,
                                            ["x"] = -360794.65358671,
                                            ["name"] = namePrefix .. "CV-59 Technician 8",
                                            ["heading"] = 1.3439035240356,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.66171458998,
                                                ["angle"] = 2.9496064358704,
                                                ["x"] = -5.2636686500045,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 73,
                                            ["rate"] = 20,
                                            ["y"] = 469440.23314316,
                                            ["x"] = -360862.40652579,
                                            ["name"] = namePrefix .. "CV-59 Technician 9",
                                            ["heading"] = 2.9496064358704,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.806669440004,
                                                ["angle"] = 4.7123889803847,
                                                ["x"] = 88.081767519994,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 74,
                                            ["rate"] = 20,
                                            ["y"] = 469443.37809801,
                                            ["x"] = -360769.06108962,
                                            ["name"] = namePrefix .. "CV-59 Technician 10",
                                            ["heading"] = -1.5707963267949,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "blue",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.6044085899484,
                                                ["angle"] = 3.9444441095072,
                                                ["x"] = 22.162760849984,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 75,
                                            ["rate"] = 20,
                                            ["y"] = 469435.17583716,
                                            ["x"] = -360834.98009629,
                                            ["name"] = namePrefix .. "CV-59 Technician 11",
                                            ["heading"] = -2.3387411976724,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.6825801399536,
                                                ["angle"] = 0.907571211037,
                                                ["x"] = 21.009934830014,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 76,
                                            ["rate"] = 20,
                                            ["y"] = 469434.25400871,
                                            ["x"] = -360836.13292231,
                                            ["name"] = namePrefix .. "CV-59 Technician 12",
                                            ["heading"] = 0.907571211037,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "blue",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 12.482483859989,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = -6.3519227600191,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 77,
                                            ["rate"] = 20,
                                            ["y"] = 469441.05391243,
                                            ["x"] = -360863.4947799,
                                            ["name"] = namePrefix .. "CV-59 Technician 13",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "blue",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 9.8248471499537,
                                                ["angle"] = 3.700098014228,
                                                ["x"] = 76.027643800015,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 78,
                                            ["rate"] = 20,
                                            ["y"] = 469438.39627572,
                                            ["x"] = -360781.11521334,
                                            ["name"] = namePrefix .. "CV-59 Technician 14",
                                            ["heading"] = -2.5830872929516,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "blue",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 8.5271150099579,
                                                ["angle"] = 1.6057029118347,
                                                ["x"] = 75.335432389984,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 79,
                                            ["rate"] = 20,
                                            ["y"] = 469437.09854358,
                                            ["x"] = -360781.80742475,
                                            ["name"] = namePrefix .. "CV-59 Technician 15",
                                            ["heading"] = 1.6057029118347,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 9.5831095199683,
                                                ["angle"] = 5.7944931166212,
                                                ["x"] = 74.820895490004,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 80,
                                            ["rate"] = 20,
                                            ["y"] = 469438.15453809,
                                            ["x"] = -360782.32196165,
                                            ["name"] = namePrefix .. "CV-59 Technician 16",
                                            ["heading"] = -0.4886921905584,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 9.395204159955,
                                                ["angle"] = 5.235987755983,
                                                ["x"] = 89.386125179997,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 81,
                                            ["rate"] = 20,
                                            ["y"] = 469437.96663273,
                                            ["x"] = -360767.75673196,
                                            ["name"] = namePrefix .. "CV-59 Technician 17",
                                            ["heading"] = -1.0471975511966,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 7.5748663699487,
                                                ["angle"] = 4.6425758103049,
                                                ["x"] = 20.888940159988,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 82,
                                            ["rate"] = 20,
                                            ["y"] = 469436.14629494,
                                            ["x"] = -360836.25391698,
                                            ["name"] = namePrefix .. "CV-59 Technician 18",
                                            ["heading"] = -1.6406094968747,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.475844899949,
                                                ["angle"] = 1.3962634015954,
                                                ["x"] = 28.803845649993,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 83,
                                            ["rate"] = 20,
                                            ["y"] = 469442.04727347,
                                            ["x"] = -360828.33901149,
                                            ["name"] = namePrefix .. "CV-59 Technician 19",
                                            ["heading"] = 1.3962634015954,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 9.4500615699799,
                                                ["angle"] = 3.4382986264288,
                                                ["x"] = 90.874154079997,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 84,
                                            ["rate"] = 20,
                                            ["y"] = 469438.02149014,
                                            ["x"] = -360766.26870306,
                                            ["name"] = namePrefix .. "CV-59 Technician 20",
                                            ["heading"] = -2.8448866807508,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.252880869957,
                                                ["angle"] = 5.3930673886625,
                                                ["x"] = 32.270201759995,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 85,
                                            ["rate"] = 20,
                                            ["y"] = 469456.82430944,
                                            ["x"] = -360824.87265538,
                                            ["name"] = namePrefix .. "CV-59 Technician 21",
                                            ["heading"] = -0.8901179185171,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.989666519978,
                                                ["angle"] = 3.7699111843077,
                                                ["x"] = -53.761342699989,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 86,
                                            ["rate"] = 20,
                                            ["y"] = 469452.56109509,
                                            ["x"] = -360910.90419984,
                                            ["name"] = namePrefix .. "CV-59 Technician 22",
                                            ["heading"] = -2.5132741228719,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 7.5537387600052,
                                                ["angle"] = 5.7770398241012,
                                                ["x"] = 19.452221489977,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 87,
                                            ["rate"] = 20,
                                            ["y"] = 469436.12516733,
                                            ["x"] = -360837.69063565,
                                            ["name"] = namePrefix .. "CV-59 Technician 24",
                                            ["heading"] = -0.5061454830784,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.661630999995,
                                                ["angle"] = 4.7123889803847,
                                                ["x"] = 87.133109899994,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
                                            ["unitId"] = 88,
                                            ["rate"] = 20,
                                            ["y"] = 469440.23305957,
                                            ["x"] = -360770.00974724,
                                            ["name"] = namePrefix .. "CV-59 Technician 23",
                                            ["heading"] = -1.5707963267949,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -2.7689845300047,
                                                ["angle"] = 3.8397243543875,
                                                ["x"] = 98.852623810002,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_shooter",
                                            ["type"] = "us carrier shooter",
                                            ["unitId"] = 89,
                                            ["rate"] = 20,
                                            ["y"] = 469425.80244404,
                                            ["x"] = -360758.29023333,
                                            ["name"] = namePrefix .. "CV-59 Shooter 1",
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -2.6633533000131,
                                                ["angle"] = 4.904375198104,
                                                ["x"] = 97.342026819999,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_shooter",
                                            ["type"] = "us carrier shooter",
                                            ["unitId"] = 90,
                                            ["rate"] = 20,
                                            ["y"] = 469425.90807527,
                                            ["x"] = -360759.80083032,
                                            ["name"] = namePrefix .. "CV-59 Shooter 2",
                                            ["heading"] = -1.378810109075,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -2.104307260015,
                                                ["angle"] = 3.682644721708,
                                                ["x"] = 88.38926252001,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_shooter",
                                            ["type"] = "us carrier shooter",
                                            ["unitId"] = 91,
                                            ["rate"] = 20,
                                            ["y"] = 469426.46712131,
                                            ["x"] = -360768.75359462,
                                            ["name"] = namePrefix .. "CV-59 Shooter 3",
                                            ["heading"] = -2.6005405854716,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.142018720042,
                                                ["angle"] = 5.0440015382636,
                                                ["x"] = 89.373070589965,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_shooter",
                                            ["type"] = "us carrier shooter",
                                            ["unitId"] = 92,
                                            ["rate"] = 20,
                                            ["y"] = 469427.42940985,
                                            ["x"] = -360767.76978655,
                                            ["name"] = namePrefix .. "CV-59 Shooter 5",
                                            ["heading"] = -1.239183768916,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["mass"] = 840,
                                            ["category"] = "Cargos",
                                            ["canCargo"] = false,
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.73112368997,
                                                ["angle"] = 4.7298422729046,
                                                ["x"] = 62.647827629989,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "m117_cargo",
                                            ["type"] = "m117_cargo",
                                            ["unitId"] = 95,
                                            ["rate"] = 100,
                                            ["y"] = 469453.30255226,
                                            ["x"] = -360794.49502951,
                                            ["name"] = namePrefix .. "CV-59 Bombs 10",
                                            ["heading"] = -1.553343034275,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -2.0484931700048,
                                                ["angle"] = 3.8048177693476,
                                                ["x"] = 90.597058320011,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_shooter",
                                            ["type"] = "us carrier shooter",
                                            ["unitId"] = 93,
                                            ["rate"] = 20,
                                            ["y"] = 469426.5229354,
                                            ["x"] = -360766.54579882,
                                            ["name"] = namePrefix .. "CV-59 Shooter 4",
                                            ["heading"] = -2.478367537832,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
                                            
                                            local staticObj = {
        ["name"] = namePrefix .. "dDeck_forrestal", -- unit name (Name this something identifiable if you wish to remove it later)
                                            
                                                                                    ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.043987939949,
                                                ["angle"] = 4.6949356878647,
                                                ["x"] = -7.95861625002,
                                            }, -- end of ["offsets"]
                                            ["type"] = "CV_59_H60",
                                            ["unitId"] = 94,
                                            ["rate"] = 1,
                                            ["y"] = 469449.61541651,
                                            ["x"] = -360865.10147339,
                                            ["name"] = namePrefix .. "CV-59 Hyster 60 3",
                                            ["heading"] = -1.5882496193149,
                                            
                                            -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

end

--- END Dynamic Deck Population
  
--------------------------------[core\dynamic_deck_templates.lua]-------------------------------- 
 
env.info( "[JTF-1] dynamic_deck_templates" )
--
-- NOTE: dynamic_deck_population.lua should be loaded before this file.
--

if not DYNDECK then -- Error prevention. Create empty container if DDP module not loaded.
    _msg = "[JTF-1 DYNDECK] CORE FILE NOT LOADED!"
    SUPPORTAC:E(_msg)
    DYNDECK = {}
end

function DYNDECK.sc_(shipID, templateName) -- template for deck template function

    local namePrefix = "dyndeck_" .. shipID .. templateName
    

end

--- TEMPLATES GO UNDER HERE

function DYNDECK.sc_lch_low(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 645.65147128633,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 816.1875924987,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 777.80780224735,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.097856989679,
                                                ["angle"] = 815.24511470263,
                                                ["x"] = -34.721702907785,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.277117391028,
                                                ["angle"] = 32.953637373683,
                                                ["x"] = -34.732073358085,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.841876281434,
                                                ["angle"] = 12.568191710388,
                                                ["x"] = -46.473225983412,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 856.06837148444,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 815.19275482507,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.050660831591,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -51.605714756815,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 827.79403202447,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.669406083255,
                                                ["angle"] = 431.15050621621,
                                                ["x"] = -81.188579290842,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.639842598229,
                                                ["angle"] = 432.04062413473,
                                                ["x"] = -72.948655685138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.902145490903,
                                                ["angle"] = 407.32676192649,
                                                ["x"] = -42.260791551122,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.546159565233,
                                                ["angle"] = 406.59372364065,
                                                ["x"] = -41.202128437865,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.91945951727,
                                                ["angle"] = 433.36707436624,
                                                ["x"] = -31.165410408404,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.818860063248,
                                                ["angle"] = 431.70901157685,
                                                ["x"] = -30.804706359764,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.823568424595,
                                                ["angle"] = 432.51186303277,
                                                ["x"] = -31.291805946785,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.322398460964,
                                                ["angle"] = 361.77366844943,
                                                ["x"] = -71.458887492548,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.350873921939,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -83.19495052369,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 11", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.701075990667,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -74.240538147751,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK100",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.179512487887,
                                                ["angle"] = 496.26874060812,
                                                ["x"] = -154.54050081595,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.7391817566416,
                                                ["angle"] = 496.30364719316,
                                                ["x"] = -155.27503906218,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK101_NPD",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.0029690814996,
                                                ["angle"] = 496.30364719316,
                                                ["x"] = -155.87628096397,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -13.005046297121,
                                                ["angle"] = 497.1239519416,
                                                ["x"] = -146.66496187523,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102_NPD",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -15.307549672268,
                                                ["angle"] = 491.24219236238,
                                                ["x"] = -135.97118197623,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK201 CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -21.875030227257,
                                                ["angle"] = 491.22473906986,
                                                ["x"] = -120.15838880036,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.618622991992,
                                                ["angle"] = 149.85579067227,
                                                ["x"] = -143.34737720138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.8587904552019,
                                                ["angle"] = 150.3270295703,
                                                ["x"] = -148.39389397052,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-R 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 2.9951744287039,
                                                ["angle"] = 150.60628225062,
                                                ["x"] = -148.6959220144,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.2820572675681,
                                                ["angle"] = 148.33735422303,
                                                ["x"] = -146.46714599295,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-W 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.4176867628193,
                                                ["angle"] = 146.87127765135,
                                                ["x"] = -135.06168999672,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -11.185698655444,
                                                ["angle"] = 151.70583967938,
                                                ["x"] = -117.66135621609,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_lch_med(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.56539029044469,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 49.037352753452,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vfa-25 generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.9165360388852,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 60.08834944242,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.3698449825059,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 70.985443953678,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- *******************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 426 Matt 'Gannon' Wayne",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -4.7172584559018,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 82.042290909375,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.6807811134881,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 92.660709237033,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -6.9761561406201,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 104.14295655801,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -7.9935357811509,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 115.02702279532,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -8.8622980860768,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 125.99653280804,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -8.4189546313416,
                                                ["angle"] = 429.73678952209,
                                                ["x"] = 136.63282885359,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -9.0716331338308,
                                                ["angle"] = 354.47819217609,
                                                ["x"] = 149.78327421946,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.3374882673047,
                                                ["angle"] = 116.13602952373,
                                                ["x"] = 42.777801593228,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.5495708687677,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 47.052935840525,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.22348151799788,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 90.125866213387,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.4497604680265,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 102.70969022384,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-W 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.86790735153088,
                                                ["angle"] = 115.90913672097,
                                                ["x"] = 107.96544928822,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 645.65147128633,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 816.1875924987,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 777.80780224735,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.097856989679,
                                                ["angle"] = 815.24511470263,
                                                ["x"] = -34.721702907785,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.277117391028,
                                                ["angle"] = 32.953637373683,
                                                ["x"] = -34.732073358085,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.841876281434,
                                                ["angle"] = 12.568191710388,
                                                ["x"] = -46.473225983412,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 856.06837148444,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 815.19275482507,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.050660831591,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -51.605714756815,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 827.79403202447,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.669406083255,
                                                ["angle"] = 431.15050621621,
                                                ["x"] = -81.188579290842,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.639842598229,
                                                ["angle"] = 432.04062413473,
                                                ["x"] = -72.948655685138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.902145490903,
                                                ["angle"] = 407.32676192649,
                                                ["x"] = -42.260791551122,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.546159565233,
                                                ["angle"] = 406.59372364065,
                                                ["x"] = -41.202128437865,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.91945951727,
                                                ["angle"] = 433.36707436624,
                                                ["x"] = -31.165410408404,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.818860063248,
                                                ["angle"] = 431.70901157685,
                                                ["x"] = -30.804706359764,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.823568424595,
                                                ["angle"] = 432.51186303277,
                                                ["x"] = -31.291805946785,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.322398460964,
                                                ["angle"] = 361.77366844943,
                                                ["x"] = -71.458887492548,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.350873921939,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -83.19495052369,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 11", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.701075990667,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -74.240538147751,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -33.344235799775,
                                                ["angle"] = 234.05047378848,
                                                ["x"] = -107.29391769261,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -33.406129444774,
                                                ["angle"] = 234.05047378848,
                                                ["x"] = -95.604236622335,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -31.964097133702,
                                                ["angle"] = 118.54458389148,
                                                ["x"] = -110.23901828911,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -29.671642155997,
                                                ["angle"] = 120.1328335108,
                                                ["x"] = -103.49094182992,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -25.072092217455,
                                                ["angle"] = 116.97378756469,
                                                ["x"] = -105.05066039867,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -27.725434969865,
                                                ["angle"] = 119.50451498008,
                                                ["x"] = -98.238166449895,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 5", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.717017857683,
                                                ["angle"] = 116.86906780957,
                                                ["x"] = -93.431793780025,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-18-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 401 Brennan 'Goonie' Haltli  XO Alternate 1994",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.5562057387847,
                                                ["angle"] = 6.2151932331278,
                                                ["x"] = -153.90243998348,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-18-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO Low Vis",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.62341317287,
                                                ["angle"] = 6.1802866480879,
                                                ["x"] = -153.13519210902,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-18-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_00_CAG_Terry",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.299429679681,
                                                ["angle"] = 6.2151932331278,
                                                ["x"] = -154.30318520217,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-18-4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 410 Dargel 'Loco' Napoles",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -12.684961593476,
                                                ["angle"] = 7.0354979815652,
                                                ["x"] = -145.46005275256,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-18-5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 407 Scott 'Bonz' Reagan CO Low Vis OS",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -14.27002078993,
                                                ["angle"] = 1.1537384023443,
                                                ["x"] = -134.06044829341,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-18-6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_000_POM",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -21.202331190479,
                                                ["angle"] = 1.1362851098243,
                                                ["x"] = -119.57187523335,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-31 tomcatters nk101 (2004)",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.272174412871,
                                                ["angle"] = 55.416024846851,
                                                ["x"] = -137.05946340778,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.90766034143,
                                                ["angle"] = 55.276398506692,
                                                ["x"] = -125.05018529034,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL F-14 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK103",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.688365467764,
                                                ["angle"] = 55.171678751572,
                                                ["x"] = -113.62551094625,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.249266486735,
                                                ["angle"] = 47.684216260516,
                                                ["x"] = -118.84548836107,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.198280514752,
                                                ["angle"] = 27.804916080299,
                                                ["x"] = -119.93375446631,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.50378327452,
                                                ["angle"] = 28.241248393297,
                                                ["x"] = -129.01825825982,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.680574336987,
                                                ["angle"] = 27.141690964541,
                                                ["x"] = -110.40087259709,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 17.991715812614,
                                                ["angle"] = 30.108750692932,
                                                ["x"] = -135.51865999092,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 17.751052416906,
                                                ["angle"] = 30.894148856329,
                                                ["x"] = -110.36489862637,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    
end

function DYNDECK.sc_lch_hvy(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.10437053479,
                                                ["angle"] = 10.159637342635,
                                                ["x"] = 83.262039503581,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.950453495473,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 91.559690927119,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.854390702424,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 102.95885426481,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.202562667095,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 118.26254908461,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.614878866904,
                                                ["angle"] = 3.5273861850565,
                                                ["x"] = 131.18367415037,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 10.388253750276,
                                                ["angle"] = 3.4575730149768,
                                                ["x"] = 145.08093209201,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.56539029044469,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 49.037352753452,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vfa-25 generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.9165360388852,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 60.08834944242,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.3698449825059,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 70.985443953678,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- *******************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 426 Matt 'Gannon' Wayne",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -4.7172584559018,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 82.042290909375,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.6807811134881,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 92.660709237033,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -6.9761561406201,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 104.14295655801,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -7.9935357811509,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 115.02702279532,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -8.8622980860768,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 125.99653280804,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -8.4189546313416,
                                                ["angle"] = 429.73678952209,
                                                ["x"] = 136.63282885359,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -9.0716331338308,
                                                ["angle"] = 354.47819217609,
                                                ["x"] = 149.78327421946,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.3374882673047,
                                                ["angle"] = 116.13602952373,
                                                ["x"] = 42.777801593228,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.5495708687677,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 47.052935840525,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.22348151799788,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 90.125866213387,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.4497604680265,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 102.70969022384,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-W 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.86790735153088,
                                                ["angle"] = 115.90913672097,
                                                ["x"] = 107.96544928822,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and Techs on Bow on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Bow F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.848033676395,
                                                ["angle"] = 731.99290938249,
                                                ["x"] = 164.12363956928,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and Techs on Bow on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Bow F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_04_Gigs",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.2231174373491,
                                                ["angle"] = 731.99290938249,
                                                ["x"] = 164.16779592396,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and Techs on Bow on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Bow Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.91963539000237,
                                                ["angle"] = 493.12714795453,
                                                ["x"] = 158.59517086731,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and Techs on Bow on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Bow Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.96975688117813,
                                                ["angle"] = 493.63329343761,
                                                ["x"] = 158.16543528477,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 403 Matt Wurst _Matty_",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.491131379038,
                                                ["angle"] = 601.61681425851,
                                                ["x"] = 10.807660643992,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_13_Dart",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.494579421873,
                                                ["angle"] = 601.61681425851,
                                                ["x"] = 0.76208163411436,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.425834836686,
                                                ["angle"] = 495.84986158764,
                                                ["x"] = 8.2282668224776,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.478054903549,
                                                ["angle"] = 493.26677429469,
                                                ["x"] = 12.400304287891,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 30.050828571727,
                                                ["angle"] = 495.84986158764,
                                                ["x"] = 2.5874308985216,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 645.65147128633,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 816.1875924987,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 777.80780224735,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.097856989679,
                                                ["angle"] = 815.24511470263,
                                                ["x"] = -34.721702907785,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.277117391028,
                                                ["angle"] = 32.953637373683,
                                                ["x"] = -34.732073358085,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.841876281434,
                                                ["angle"] = 12.568191710388,
                                                ["x"] = -46.473225983412,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 856.06837148444,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 815.19275482507,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.050660831591,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -51.605714756815,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 827.79403202447,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.669406083255,
                                                ["angle"] = 431.15050621621,
                                                ["x"] = -81.188579290842,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.639842598229,
                                                ["angle"] = 432.04062413473,
                                                ["x"] = -72.948655685138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.902145490903,
                                                ["angle"] = 407.32676192649,
                                                ["x"] = -42.260791551122,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.546159565233,
                                                ["angle"] = 406.59372364065,
                                                ["x"] = -41.202128437865,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.91945951727,
                                                ["angle"] = 433.36707436624,
                                                ["x"] = -31.165410408404,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.818860063248,
                                                ["angle"] = 431.70901157685,
                                                ["x"] = -30.804706359764,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.823568424595,
                                                ["angle"] = 432.51186303277,
                                                ["x"] = -31.291805946785,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.322398460964,
                                                ["angle"] = 361.77366844943,
                                                ["x"] = -71.458887492548,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.350873921939,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -83.19495052369,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 11", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.701075990667,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -74.240538147751,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK100",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.179512487887,
                                                ["angle"] = 496.26874060812,
                                                ["x"] = -154.54050081595,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.7391817566416,
                                                ["angle"] = 496.30364719316,
                                                ["x"] = -155.27503906218,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK101_NPD",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.0029690814996,
                                                ["angle"] = 496.30364719316,
                                                ["x"] = -155.87628096397,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -13.005046297121,
                                                ["angle"] = 497.1239519416,
                                                ["x"] = -146.66496187523,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102_NPD",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -15.307549672268,
                                                ["angle"] = 491.24219236238,
                                                ["x"] = -135.97118197623,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK201 CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -21.875030227257,
                                                ["angle"] = 491.22473906986,
                                                ["x"] = -120.15838880036,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.618622991992,
                                                ["angle"] = 149.85579067227,
                                                ["x"] = -143.34737720138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.8587904552019,
                                                ["angle"] = 150.3270295703,
                                                ["x"] = -148.39389397052,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-R 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 2.9951744287039,
                                                ["angle"] = 150.60628225062,
                                                ["x"] = -148.6959220144,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.2820572675681,
                                                ["angle"] = 148.33735422303,
                                                ["x"] = -146.46714599295,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-W 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.4176867628193,
                                                ["angle"] = 146.87127765135,
                                                ["x"] = -135.06168999672,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -11.185698655444,
                                                ["angle"] = 151.70583967938,
                                                ["x"] = -117.66135621609,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island E-2Cx", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.467359055958,
                                                ["angle"] = 557.61706381573,
                                                ["x"] = -35.289777030018,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 7.0412458731262,
                                                ["angle"] = 160.11832667399,
                                                ["x"] = -37.131948660666,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.632701538063,
                                                ["angle"] = 162.52688104174,
                                                ["x"] = -33.324470195337,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.333414700347,
                                                ["angle"] = 5.7265010425694,
                                                ["x"] = -142.47883139923,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.489198597179,
                                                ["angle"] = 5.0109160492517,
                                                ["x"] = -128.62332397449,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.432193601072,
                                                ["angle"] = 4.8538364165722,
                                                ["x"] = -116.23331243811,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.444990970708,
                                                ["angle"] = 3.7891855728557,
                                                ["x"] = -137.57043416091,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.586105244976,
                                                ["angle"] = 3.5622927700964,
                                                ["x"] = -137.10340081464,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.108589187036,
                                                ["angle"] = 3.5622927700964,
                                                ["x"] = -125.91383567431,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.921940063067,
                                                ["angle"] = 5.5694214098899,
                                                ["x"] = -118.34952748705,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioL Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.591039946127,
                                                ["angle"] = 5.3250753146107,
                                                ["x"] = -114.02559376099,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats static aircraft and techs on the Point on Nimitz carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Point S-3B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "S3_VS37",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.100242104084,
                                                ["angle"] = 375.42214320003,
                                                ["x"] = 49.68480942168,
                                            }, -- end of ["offsets"]
                                            ["type"] = "S-3B Tanker",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************-- Creats static aircraft and techs on the Point on Nimitz carriers.
    -- Creats static aircraft and techs on the Point on Nimitz carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Point F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 407  Scott 'Bonz' Reagan Custom",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.476355525632,
                                                ["angle"] = 375.42214320003,
                                                ["x"] = 59.061195556497,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************-- Creats static aircraft and techs on the Point on Nimitz carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Point Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.547724102961,
                                                ["angle"] = 119.76631436788,
                                                ["x"] = 56.582054462759,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Street F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 406 Ryan 'GreenHead' Kitts",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 8.6288177467084,
                                                ["angle"] = 657.50225690737,
                                                ["x"] = -7.0777660328889,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Street F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 413 Adam 'sickdog' Soloway",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.9391671683504,
                                                ["angle"] = 657.50225690737,
                                                ["x"] = 2.5541960441424,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Street F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.4704260470337,
                                                ["angle"] = 657.50225690737,
                                                ["x"] = 12.099386533672,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Street Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.6189556139081,
                                                ["angle"] = 492.14976357342,
                                                ["x"] = -12.865438917002,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Street Tech-Y 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.0638087495994,
                                                ["angle"] = 17.629646541172,
                                                ["x"] = 14.649276218361,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Street Tech-Y 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.274891964877,
                                                ["angle"] = 19.217896160486,
                                                ["x"] = 19.925853226823,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_rec_low(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 645.65147128633,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 816.1875924987,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 777.80780224735,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.097856989679,
                                                ["angle"] = 815.24511470263,
                                                ["x"] = -34.721702907785,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.277117391028,
                                                ["angle"] = 32.953637373683,
                                                ["x"] = -34.732073358085,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.841876281434,
                                                ["angle"] = 12.568191710388,
                                                ["x"] = -46.473225983412,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 856.06837148444,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 815.19275482507,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.050660831591,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -51.605714756815,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 827.79403202447,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.669406083255,
                                                ["angle"] = 431.15050621621,
                                                ["x"] = -81.188579290842,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.639842598229,
                                                ["angle"] = 432.04062413473,
                                                ["x"] = -72.948655685138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.902145490903,
                                                ["angle"] = 407.32676192649,
                                                ["x"] = -42.260791551122,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.546159565233,
                                                ["angle"] = 406.59372364065,
                                                ["x"] = -41.202128437865,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.91945951727,
                                                ["angle"] = 433.36707436624,
                                                ["x"] = -31.165410408404,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.818860063248,
                                                ["angle"] = 431.70901157685,
                                                ["x"] = -30.804706359764,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.823568424595,
                                                ["angle"] = 432.51186303277,
                                                ["x"] = -31.291805946785,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.322398460964,
                                                ["angle"] = 361.77366844943,
                                                ["x"] = -71.458887492548,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.350873921939,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -83.19495052369,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 11", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.701075990667,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -74.240538147751,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK202",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -35.445383461716,
                                                ["angle"] = 497.94425669004,
                                                ["x"] = -107.40221763538,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK203",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -35.411844968488,
                                                ["angle"] = 497.94425669004,
                                                ["x"] = -96.289773067514,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -30.030244498687,
                                                ["angle"] = 382.43836679304,
                                                ["x"] = -111.78160739991,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -29.671642155997,
                                                ["angle"] = 384.02661641236,
                                                ["x"] = -103.49094182992,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -25.072092217455,
                                                ["angle"] = 380.86757046625,
                                                ["x"] = -105.05066039867,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.320193673524,
                                                ["angle"] = 383.39829788164,
                                                ["x"] = -99.244388878579,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 5", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.404337009315,
                                                ["angle"] = 380.76285071113,
                                                ["x"] = -93.512643472046,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 24.571513678523,
												["angle"] = 5.0109160492517,
												["x"] = -109.38597605227,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 16.105060984841,
												["angle"] = 111.66798663863,
												["x"] = -76.98153012923,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 10.701253058197,
												["angle"] = 112.20903870674,
												["x"] = -43.328997939506,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 4", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.650600765722,
												["angle"] = 334.66870516596,
												["x"] = -111.11725081114,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 5", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -24.862850276162,
												["angle"] = 334.66870516596,
												["x"] = -88.432445487217,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO1-1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.639902404069,
												["angle"] = 18.991003357727,
												["x"] = -128.87964937709,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso4_usa",
											["type"] = "Carrier LSO Personell 4",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO4-2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -22.336654402517,
												["angle"] = 40.476006449779,
												["x"] = -130.51429093913,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso3_usa",
											["type"] = "Carrier LSO Personell 3",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
    -- ********************************************************
    
end

function DYNDECK.sc_rec_med(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName
    
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.42373331700052,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 48.801296065951,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vfa-25 generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.9165360388852,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 60.08834944242,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.3698449825059,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 70.985443953678,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.4478270146218,
                                                ["angle"] = 160.11832667399,
                                                ["x"] = 42.31126245152,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.6211179625298,
                                                ["angle"] = 161.63676312323,
                                                ["x"] = 47.1192869069,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.0795751066997,
                                                ["angle"] = 2.0089497358215,
                                                ["x"] = 58.878521974936,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.1587672360767,
                                                ["angle"] = 5.1330890968913,
                                                ["x"] = 72.452471779597,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.51246658829964,
                                                ["angle"] = 5.5170615323301,
                                                ["x"] = 72.529540910213,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 645.65147128633,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 816.1875924987,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 777.80780224735,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.097856989679,
                                                ["angle"] = 815.24511470263,
                                                ["x"] = -34.721702907785,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.277117391028,
                                                ["angle"] = 32.953637373683,
                                                ["x"] = -34.732073358085,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.841876281434,
                                                ["angle"] = 12.568191710388,
                                                ["x"] = -46.473225983412,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 856.06837148444,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 815.19275482507,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.050660831591,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -51.605714756815,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 827.79403202447,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.669406083255,
                                                ["angle"] = 431.15050621621,
                                                ["x"] = -81.188579290842,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.639842598229,
                                                ["angle"] = 432.04062413473,
                                                ["x"] = -72.948655685138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.902145490903,
                                                ["angle"] = 407.32676192649,
                                                ["x"] = -42.260791551122,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.546159565233,
                                                ["angle"] = 406.59372364065,
                                                ["x"] = -41.202128437865,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.91945951727,
                                                ["angle"] = 433.36707436624,
                                                ["x"] = -31.165410408404,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.818860063248,
                                                ["angle"] = 431.70901157685,
                                                ["x"] = -30.804706359764,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.823568424595,
                                                ["angle"] = 432.51186303277,
                                                ["x"] = -31.291805946785,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.322398460964,
                                                ["angle"] = 361.77366844943,
                                                ["x"] = -71.458887492548,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.350873921939,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -83.19495052369,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 11", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.701075990667,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -74.240538147751,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -33.344235799775,
                                                ["angle"] = 234.05047378848,
                                                ["x"] = -107.29391769261,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -33.406129444774,
                                                ["angle"] = 234.05047378848,
                                                ["x"] = -95.604236622335,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -31.964097133702,
                                                ["angle"] = 118.54458389148,
                                                ["x"] = -110.23901828911,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -29.671642155997,
                                                ["angle"] = 120.1328335108,
                                                ["x"] = -103.49094182992,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -25.072092217455,
                                                ["angle"] = 116.97378756469,
                                                ["x"] = -105.05066039867,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -27.725434969865,
                                                ["angle"] = 119.50451498008,
                                                ["x"] = -98.238166449895,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 5", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.717017857683,
                                                ["angle"] = 116.86906780957,
                                                ["x"] = -93.431793780025,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK103",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.574397958365,
                                                ["angle"] = 12.184219274949,
                                                ["x"] = -140.22202233315,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK106",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.999894815472,
                                                ["angle"] = 24.27935099127,
                                                ["x"] = -126.3733451222,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.245066265035,
                                                ["angle"] = 30.230923740571,
                                                ["x"] = -115.09659159312,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.273813754869,
                                                ["angle"] = 3.701919110256,
                                                ["x"] = -131.81665467857,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.24388530906,
                                                ["angle"] = 3.5448394775765,
                                                ["x"] = -119.34764000727,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.726752809735,
                                                ["angle"] = 3.6146526476563,
                                                ["x"] = -130.88525791424,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.911959307137,
                                                ["angle"] = 6.8435117638458,
                                                ["x"] = -114.74868459558,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.905678081278,
                                                ["angle"] = 5.2727154370509,
                                                ["x"] = -126.96371630654,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.76100756934,
                                                ["angle"] = 6.8435117638458,
                                                ["x"] = -110.09545944759,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
	-- Creats aircraft and techs on Corral on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Corral F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VFA-25 403 Matt Wurst _Matty_",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 33.491131379038,
												["angle"] = 601.61681425851,
												["x"] = 10.807660643992,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on Corral on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Corral F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VMFA-122C_DC_13_Dart",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 33.494579421873,
												["angle"] = 601.61681425851,
												["x"] = 0.76208163411436,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on Corral on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Corral Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "brown",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 29.425834836686,
												["angle"] = 495.84986158764,
												["x"] = 8.2282668224776,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on Corral on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Corral Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "white",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 25.478054903549,
												["angle"] = 493.26677429469,
												["x"] = 12.400304287891,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on Corral on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Corral Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "brown",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 30.050828571727,
												["angle"] = 495.84986158764,
												["x"] = 2.5874308985216,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.

    local staticObj = {
        ["name"] = namePrefix ..  "EL1 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-2 f-14b nk106",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.302135340188,
                                                ["angle"] = 488.51947872927,
                                                ["x"] = 34.225363793548,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.

    local staticObj = {
        ["name"] = namePrefix ..  "EL1 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.291531537177,
                                                ["angle"] = 488.51947872927,
                                                ["x"] = 23.073027603039,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.

    local staticObj = {
        ["name"] = namePrefix ..  "EL1 Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.600520086,
                                                ["angle"] = 381.30390277925,
                                                ["x"] = 32.588099427781,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************	
	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 24.571513678523,
												["angle"] = 5.0109160492517,
												["x"] = -109.38597605227,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 16.105060984841,
												["angle"] = 111.66798663863,
												["x"] = -76.98153012923,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
										["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 10.701253058197,
												["angle"] = 112.20903870674,
												["x"] = -43.328997939506,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 4", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.650600765722,
												["angle"] = 334.66870516596,
												["x"] = -111.11725081114,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 5", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -24.862850276162,
												["angle"] = 334.66870516596,
												["x"] = -88.432445487217,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO1-1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.639902404069,
												["angle"] = 18.991003357727,
												["x"] = -128.87964937709,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso4_usa",
											["type"] = "Carrier LSO Personell 4",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO4-2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -22.336654402517,
												["angle"] = 40.476006449779,
												["x"] = -130.51429093913,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso3_usa",
											["type"] = "Carrier LSO Personell 3",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
    -- ********************************************************
    
end

function DYNDECK.sc_rec_hvy(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.42373331700052,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 48.801296065951,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vfa-25 generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.9165360388852,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 60.08834944242,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.3698449825059,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 70.985443953678,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.4478270146218,
                                                ["angle"] = 160.11832667399,
                                                ["x"] = 42.31126245152,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.6211179625298,
                                                ["angle"] = 161.63676312323,
                                                ["x"] = 47.1192869069,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.0795751066997,
                                                ["angle"] = 2.0089497358215,
                                                ["x"] = 58.878521974936,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.1587672360767,
                                                ["angle"] = 5.1330890968913,
                                                ["x"] = 72.452471779597,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.51246658829964,
                                                ["angle"] = 5.5170615323301,
                                                ["x"] = 72.529540910213,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 403 Matt Wurst _Matty_",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.491131379038,
                                                ["angle"] = 601.61681425851,
                                                ["x"] = 10.807660643992,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_13_Dart",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.494579421873,
                                                ["angle"] = 601.61681425851,
                                                ["x"] = 0.76208163411436,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.425834836686,
                                                ["angle"] = 495.84986158764,
                                                ["x"] = 8.2282668224776,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.478054903549,
                                                ["angle"] = 493.26677429469,
                                                ["x"] = 12.400304287891,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 30.050828571727,
                                                ["angle"] = 495.84986158764,
                                                ["x"] = 2.5874308985216,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************	
    -- Creats aircraft and techs on street on Nimitz Carriers.

    local staticObj = {
    	["name"] = namePrefix .. "Street F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 406 Ryan 'GreenHead' Kitts",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 8.6288177467084,
                                                ["angle"] = 657.50225690737,
                                                ["x"] = -7.0777660328889,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
    	["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
    	["unitId"] = 1,
    	["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
    	["x"] = 0,			
    	["heading"] = 0,
    	["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
    	["linkOffset"] = true,
    	["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.

    local staticObj = {
    	["name"] = namePrefix .. "Street F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 413 Adam 'sickdog' Soloway",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.9391671683504,
                                                ["angle"] = 657.50225690737,
                                                ["x"] = 2.5541960441424,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
    	["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
    	["unitId"] = 1,
    	["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
    	["x"] = 0,			
    	["heading"] = 0,
    	["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
    	["linkOffset"] = true,
    	["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on street on Nimitz Carriers.

    local staticObj = {
    	["name"] = namePrefix .. "Street F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.4704260470337,
                                                ["angle"] = 657.50225690737,
                                                ["x"] = 12.099386533672,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
    	["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
    	["unitId"] = 1,
    	["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
    	["x"] = 0,			
    	["heading"] = 0,
    	["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
    	["linkOffset"] = true,
    	["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 3.6189556139081,
												["angle"] = 492.14976357342,
												["x"] = -12.865438917002,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street Tech-Y 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 3.0638087495994,
												["angle"] = 17.629646541172,
												["x"] = 14.649276218361,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street Tech-Y 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 11.274891964877,
												["angle"] = 19.217896160486,
												["x"] = 19.925853226823,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************   
	-- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 645.65147128633,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 816.1875924987,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 777.80780224735,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.097856989679,
                                                ["angle"] = 815.24511470263,
                                                ["x"] = -34.721702907785,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.277117391028,
                                                ["angle"] = 32.953637373683,
                                                ["x"] = -34.732073358085,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 793.2539661275,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.841876281434,
                                                ["angle"] = 12.568191710388,
                                                ["x"] = -46.473225983412,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 856.06837148444,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 815.19275482507,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.050660831591,
                                                ["angle"] = 831.17997077334,
                                                ["x"] = -51.605714756815,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 827.79403202447,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.669406083255,
                                                ["angle"] = 431.15050621621,
                                                ["x"] = -81.188579290842,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.639842598229,
                                                ["angle"] = 432.04062413473,
                                                ["x"] = -72.948655685138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.902145490903,
                                                ["angle"] = 407.32676192649,
                                                ["x"] = -42.260791551122,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.546159565233,
                                                ["angle"] = 406.59372364065,
                                                ["x"] = -41.202128437865,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.91945951727,
                                                ["angle"] = 433.36707436624,
                                                ["x"] = -31.165410408404,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-R 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.818860063248,
                                                ["angle"] = 431.70901157685,
                                                ["x"] = -30.804706359764,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.823568424595,
                                                ["angle"] = 432.51186303277,
                                                ["x"] = -31.291805946785,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-Y 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.322398460964,
                                                ["angle"] = 361.77366844943,
                                                ["x"] = -71.458887492548,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.350873921939,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -83.19495052369,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tech-G 11", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.701075990667,
                                                ["angle"] = 4.3825975185338,
                                                ["x"] = -74.240538147751,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK202",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -35.445383461716,
                                                ["angle"] = 497.94425669004,
                                                ["x"] = -107.40221763538,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK203",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -35.411844968488,
                                                ["angle"] = 497.94425669004,
                                                ["x"] = -96.289773067514,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -30.030244498687,
                                                ["angle"] = 382.43836679304,
                                                ["x"] = -111.78160739991,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -29.671642155997,
                                                ["angle"] = 384.02661641236,
                                                ["x"] = -103.49094182992,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -25.072092217455,
                                                ["angle"] = 380.86757046625,
                                                ["x"] = -105.05066039867,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.320193673524,
                                                ["angle"] = 383.39829788164,
                                                ["x"] = -99.244388878579,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 5", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.404337009315,
                                                ["angle"] = 380.76285071113,
                                                ["x"] = -93.512643472046,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island E-2Cx", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.467359055958,
                                                ["angle"] = 557.61706381573,
                                                ["x"] = -35.289777030018,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 7.0412458731262,
                                                ["angle"] = 160.11832667399,
                                                ["x"] = -37.131948660666,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.632701538063,
                                                ["angle"] = 162.52688104174,
                                                ["x"] = -33.324470195337,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.235224469639,
                                                ["angle"] = 5.4472483622503,
                                                ["x"] = -114.93158495153,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.872561341676,
                                                ["angle"] = 5.55196811737,
                                                ["x"] = -125.21379408858,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.018040335181,
                                                ["angle"] = 5.9010339677688,
                                                ["x"] = -136.68694073897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-G 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -24.322739531564,
                                                ["angle"] = 1.6598838854226,
                                                ["x"] = -88.353782408567,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-G 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -20.650600765722,
                                                ["angle"] = 14.226254499782,
                                                ["x"] = -111.11725081114,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.19980412265,
                                                ["angle"] = 4.312784348454,
                                                ["x"] = -119.58220353962,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s and Techs on Patio for Nimitz Class Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.729152691366,
                                                ["angle"] = 4.5571304437332,
                                                ["x"] = -112.43738784538,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
    -- Creats static aircraft and techs on the Point on Nimitz carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Point S-3B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "S3_VS37",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.100242104084,
                                                ["angle"] = 375.42214320003,
                                                ["x"] = 49.68480942168,
                                            }, -- end of ["offsets"]
                                            ["type"] = "S-3B Tanker",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats static aircraft and techs on the Point on Nimitz carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Point F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 407  Scott 'Bonz' Reagan Custom",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.476355525632,
                                                ["angle"] = 375.42214320003,
                                                ["x"] = 59.061195556497,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats static aircraft and techs on the Point on Nimitz carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Point Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.547724102961,
                                                ["angle"] = 119.76631436788,
                                                ["x"] = 56.582054462759,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 24.571513678523,
												["angle"] = 5.0109160492517,
												["x"] = -109.38597605227,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 16.105060984841,
												["angle"] = 111.66798663863,
												["x"] = -76.98153012923,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
										["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 10.701253058197,
												["angle"] = 112.20903870674,
												["x"] = -43.328997939506,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 4", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.650600765722,
												["angle"] = 334.66870516596,
												["x"] = -111.11725081114,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 5", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -24.862850276162,
												["angle"] = 334.66870516596,
												["x"] = -88.432445487217,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO1-1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.639902404069,
												["angle"] = 18.991003357727,
												["x"] = -128.87964937709,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso4_usa",
											["type"] = "Carrier LSO Personell 4",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO4-2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -22.336654402517,
												["angle"] = 40.476006449779,
												["x"] = -130.51429093913,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso3_usa",
											["type"] = "Carrier LSO Personell 3",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
    -- ********************************************************
    
end

function DYNDECK.sc_cat1l_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creates F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.108140050537,
                                                ["angle"] = 10.159637342635,
                                                ["x"] = 75.492905602964,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.10437053479,
                                                ["angle"] = 10.159637342635,
                                                ["x"] = 83.262039503581,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.950453495473,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 91.559690927119,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.854390702424,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 102.95885426481,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.202562667095,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 118.26254908461,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 11.614878866904,
                                                ["angle"] = 3.5273861850565,
                                                ["x"] = 131.18367415037,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats F-18s on Catapult 1 Nimitz Carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat1 F-18 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 10.388253750276,
                                                ["angle"] = 3.4575730149768,
                                                ["x"] = 145.08093209201,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_cat1r_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.

    local staticObj = {
        ["name"] = namePrefix ..  "Cat1 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.10437053479,
                                                ["angle"] = 10.159637342635,
                                                ["x"] = 83.262039503581,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.

    local staticObj = {
        ["name"] = namePrefix ..  "Cat1 F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.950453495473,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 91.559690927119,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and techs on Catapult 1 Nimitz Carrier.

    local staticObj = {
        ["name"] = namePrefix ..  "Cat1 F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 402 Alex 'Red Sky' Jonischskies Hi Viz",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 13.854390702424,
                                                ["angle"] = 3.6495592326962,
                                                ["x"] = 102.95885426481,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************

end

function DYNDECK.sc_cat2l_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. "_" .. templateName .. "_"

    -- Creates 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.56539029044469,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 49.037352753452,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vfa-25 generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.9165360388852,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 60.08834944242,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.3698449825059,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 70.985443953678,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- *******************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 426 Matt 'Gannon' Wayne",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -4.7172584559018,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 82.042290909375,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.6807811134881,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 92.660709237033,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -6.9761561406201,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 104.14295655801,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 7", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -7.9935357811509,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 115.02702279532,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 8", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -8.8622980860768,
                                                ["angle"] = 435.79308202651,
                                                ["x"] = 125.99653280804,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 9", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -8.4189546313416,
                                                ["angle"] = 429.73678952209,
                                                ["x"] = 136.63282885359,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L F-18 10", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -9.0716331338308,
                                                ["angle"] = 354.47819217609,
                                                ["x"] = 149.78327421946,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.3374882673047,
                                                ["angle"] = 116.13602952373,
                                                ["x"] = 42.777801593228,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.5495708687677,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 47.052935840525,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.22348151799788,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 90.125866213387,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.4497604680265,
                                                ["angle"] = 117.65446597297,
                                                ["x"] = 102.70969022384,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats 9 F-18s on Carrier Bow Catapult 2.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2L Tech-W 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.86790735153088,
                                                ["angle"] = 115.90913672097,
                                                ["x"] = 107.96544928822,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_cat2r_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. "_" .. templateName .. "_"

    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -0.42373331700052,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 48.801296065951,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vfa-25 generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.9165360388852,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 60.08834944242,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122 high visibility",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.3698449825059,
                                                ["angle"] = 479.77537917677,
                                                ["x"] = 70.985443953678,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.4478270146218,
                                                ["angle"] = 160.11832667399,
                                                ["x"] = 42.31126245152,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 5.6211179625298,
                                                ["angle"] = 161.63676312323,
                                                ["x"] = 47.1192869069,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.0795751066997,
                                                ["angle"] = 2.0089497358215,
                                                ["x"] = 58.878521974936,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -1.1587672360767,
                                                ["angle"] = 5.1330890968913,
                                                ["x"] = 72.452471779597,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Catapult 2 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Cat2R Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 0.51246658829964,
                                                ["angle"] = 5.5170615323301,
                                                ["x"] = 72.529540910213,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_el1_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Elevator 1.

    local staticObj = {
        ["name"] = namePrefix ..  "EL1 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-2 f-14b nk106",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.302135340188,
                                                ["angle"] = 488.51947872927,
                                                ["x"] = 34.225363793548,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.

    local staticObj = {
        ["name"] = namePrefix ..  "EL1 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.291531537177,
                                                ["angle"] = 488.51947872927,
                                                ["x"] = 23.073027603039,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.

    local staticObj = {
        ["name"] = namePrefix ..  "EL1 Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.600520086,
                                                ["angle"] = 381.30390277925,
                                                ["x"] = 32.588099427781,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
end

function DYNDECK.sc_el2_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-102 diamondbacks",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.325475194068,
                                                ["angle"] = 639.31592610159,
                                                ["x"] = -11.513878068668,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-102 diamondbacks",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.445525464645,
                                                ["angle"] = 639.31592610159,
                                                ["x"] = -22.431866014385,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-P 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 31.795247390641,
                                                ["angle"] = 383.43320446668,
                                                ["x"] = -25.667554517406,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.717919574706,
                                                ["angle"] = 379.00006816662,
                                                ["x"] = -19.747781252829,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.084279884623,
                                                ["angle"] = 382.43836679304,
                                                ["x"] = -14.045921751688,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 30.995417005646,
                                                ["angle"] = 383.1888583714,
                                                ["x"] = -14.715059620154,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************

end

function DYNDECK.sc_el3_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "EL3 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK104",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.039680685218,
                                                ["angle"] = 488.51947872927,
                                                ["x"] = -90.683695983407,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "EL3 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK105",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 35.026055483354,
                                                ["angle"] = 488.51947872927,
                                                ["x"] = -101.6661596454,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "EL3 Tech-R 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 31.270646458947,
                                                ["angle"] = 384.16624275252,
                                                ["x"] = -105.93608363993,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "EL3 Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.443518892345,
                                                ["angle"] = 382.80488593596,
                                                ["x"] = -95.772647928271,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "EL3 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.163495978953,
                                                ["angle"] = 384.14878946,
                                                ["x"] = -92.537165392662,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "EL3 Tech-P 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.732737950045,
                                                ["angle"] = 378.84298853394,
                                                ["x"] = -86.125063737489,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
end

function DYNDECK.sc_el4_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK202",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -35.445383461716,
                                                ["angle"] = 497.94425669004,
                                                ["x"] = -107.40221763538,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK203",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -35.411844968488,
                                                ["angle"] = 497.94425669004,
                                                ["x"] = -96.289773067514,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -30.030244498687,
                                                ["angle"] = 382.43836679304,
                                                ["x"] = -111.78160739991,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -29.671642155997,
                                                ["angle"] = 384.02661641236,
                                                ["x"] = -103.49094182992,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -25.072092217455,
                                                ["angle"] = 380.86757046625,
                                                ["x"] = -105.05066039867,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.320193673524,
                                                ["angle"] = 383.39829788164,
                                                ["x"] = -99.244388878579,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL4 Tech-B 5", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.404337009315,
                                                ["angle"] = 380.76285071113,
                                                ["x"] = -93.512643472046,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************

end

function DYNDECK.sc_el1_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Elevator 1.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL1 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.421244398461,
                                                ["angle"] = 224.62569582771,
                                                ["x"] = 23.527064339876,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL1 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.553319932144,
                                                ["angle"] = 224.62569582771,
                                                ["x"] = 34.459724906861,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 1.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL1 Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.408732227881,
                                                ["angle"] = 117.41011987769,
                                                ["x"] = 33.100003646528,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_el2_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.595167768456,
                                                ["angle"] = 375.42214320003,
                                                ["x"] = -21.531554066515,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.850214385975,
                                                ["angle"] = 375.42214320003,
                                                ["x"] = -11.761692917277,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-P 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.17968132775,
                                                ["angle"] = 119.53942156512,
                                                ["x"] = -24.424874106349,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.17968132775,
                                                ["angle"] = 119.53942156512,
                                                ["x"] = -24.424874106349,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-W 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                        ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.084279884623,
                                                ["angle"] = 118.54458389148,
                                                ["x"] = -14.045921751688,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Elevator 2 on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "EL2 Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 30.540175245342,
                                                ["angle"] = 119.29507546984,
                                                ["x"] = -14.065938601277,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************

end

function DYNDECK.sc_el3_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "EL3 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.21480070767,
                                                ["angle"] = 224.62569582771,
                                                ["x"] = -101.46372616621,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "EL3 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 33.275586055124,
                                                ["angle"] = 224.62569582771,
                                                ["x"] = -90.506253749648,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "EL3 Tech-R 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 32.838770595401,
                                                ["angle"] = 120.27245985096,
                                                ["x"] = -103.85624140846,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "EL3 Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.443518892345,
                                                ["angle"] = 118.9111030344,
                                                ["x"] = -95.772647928271,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "EL3 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.163495978953,
                                                ["angle"] = 120.25500655844,
                                                ["x"] = -92.537165392662,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Elevator 3 on Nimitz Carriers
    
    local staticObj = {
        ["name"] = namePrefix .. "EL3 Tech-P 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 32.372135214934,
                                                ["angle"] = 114.94920563238,
                                                ["x"] = -88.080092987373,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_el4_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -33.344235799775,
                                                ["angle"] = 234.05047378848,
                                                ["x"] = -107.29391769261,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -33.406129444774,
                                                ["angle"] = 234.05047378848,
                                                ["x"] = -95.604236622335,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -31.964097133702,
                                                ["angle"] = 118.54458389148,
                                                ["x"] = -110.23901828911,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -29.671642155997,
                                                ["angle"] = 120.1328335108,
                                                ["x"] = -103.49094182992,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -25.072092217455,
                                                ["angle"] = 116.97378756469,
                                                ["x"] = -105.05066039867,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-W 4", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -27.725434969865,
                                                ["angle"] = 119.50451498008,
                                                ["x"] = -98.238166449895,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft the techs on Elevator 4 on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "EL4 Tech-B 5", -- unit name (Name this something identifiable if you wish to remove it later)
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -26.717017857683,
                                                ["angle"] = 116.86906780957,
                                                ["x"] = -93.431793780025,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    
end

function DYNDECK.sc_island(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island E-2Cx", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 15.467359055958,
                                                ["angle"] = 557.61706381573,
                                                ["x"] = -35.289777030018,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 7.0412458731262,
                                                ["angle"] = 160.11832667399,
                                                ["x"] = -37.131948660666,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs around island on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Island Tech-P 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "purple",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.632701538063,
                                                ["angle"] = 162.52688104174,
                                                ["x"] = -33.324470195337,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_deckeq(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats deck equipment around island on Nimitz class carrier.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.179609650167,
                                                ["angle"] = 545.06814649389,
                                                ["x"] = -34.726986137793,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 34.074706103411,
                                                ["angle"] = 546.01062428996,
                                                ["x"] = 71.571823411897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.835235254354,
                                                ["angle"] = 375.47450307759,
                                                ["x"] = -54.859983171871,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Tow 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -34.290094792497,
                                                ["angle"] = 507.63083403861,
                                                ["x"] = -119.2372580741,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-31A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.11354181959,
                                                ["angle"] = 523.07699791876,
                                                ["x"] = -48.306093823847,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Mover-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.835171682406,
                                                ["angle"] = 523.07699791876,
                                                ["x"] = -42.875676980416,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-32A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Crain", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.547575156325,
                                                ["angle"] = 585.8914032757,
                                                ["x"] = -69.02095322825,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-36A",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq Rescue", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["category"] = "ADEquipment",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.684031571391,
                                                ["angle"] = 545.01578661633,
                                                ["x"] = -72.889667764425,
                                            }, -- end of ["offsets"]
                                            ["type"] = "AS32-p25",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.156945293163,
                                                ["angle"] = 561.0030025646,
                                                ["x"] = -63.23041749546,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq SH-60B-2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "standard",
                                            ["category"] = "Helicopters",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.992908088869,
                                                ["angle"] = 561.0030025646,
                                                ["x"] = -51.334443322704,
                                            }, -- end of ["offsets"]
                                            ["type"] = "SH-60B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats a UH-60 on the helipad of a Hazard perry.
    
    local staticObj = {
        ["name"] = namePrefix .. "Deckeq E-2D", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vaw-125 tigertails",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.709702325664,
                                                ["angle"] = 557.61706381573,
                                                ["x"] = -79.053240272477,
                                            }, -- end of ["offsets"]
                                            ["type"] = "E-2C",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_patiol_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vf-31 tomcatters nk101 (2004)",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.272174412871,
                                                ["angle"] = 55.416024846851,
                                                ["x"] = -137.05946340778,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.90766034143,
                                                ["angle"] = 55.276398506692,
                                                ["x"] = -125.05018529034,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL F-14 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK103",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.688365467764,
                                                ["angle"] = 55.171678751572,
                                                ["x"] = -113.62551094625,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.249266486735,
                                                ["angle"] = 47.684216260516,
                                                ["x"] = -118.84548836107,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.198280514752,
                                                ["angle"] = 27.804916080299,
                                                ["x"] = -119.93375446631,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.50378327452,
                                                ["angle"] = 28.241248393297,
                                                ["x"] = -129.01825825982,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.680574336987,
                                                ["angle"] = 27.141690964541,
                                                ["x"] = -110.40087259709,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 17.991715812614,
                                                ["angle"] = 30.108750692932,
                                                ["x"] = -135.51865999092,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 17.751052416906,
                                                ["angle"] = 30.894148856329,
                                                ["x"] = -110.36489862637,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
end

function DYNDECK.sc_patior_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK103",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.574397958365,
                                                ["angle"] = 12.184219274949,
                                                ["x"] = -140.22202233315,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK106",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.999894815472,
                                                ["angle"] = 24.27935099127,
                                                ["x"] = -126.3733451222,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-14 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 28.245066265035,
                                                ["angle"] = 30.230923740571,
                                                ["x"] = -115.09659159312,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.273813754869,
                                                ["angle"] = 3.701919110256,
                                                ["x"] = -131.81665467857,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.24388530906,
                                                ["angle"] = 3.5448394775765,
                                                ["x"] = -119.34764000727,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.726752809735,
                                                ["angle"] = 3.6146526476563,
                                                ["x"] = -130.88525791424,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.911959307137,
                                                ["angle"] = 6.8435117638458,
                                                ["x"] = -114.74868459558,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 20.905678081278,
                                                ["angle"] = 5.2727154370509,
                                                ["x"] = -126.96371630654,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Patio on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.76100756934,
                                                ["angle"] = 6.8435117638458,
                                                ["x"] = -110.09545944759,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_patiol_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.333414700347,
                                                ["angle"] = 5.7265010425694,
                                                ["x"] = -142.47883139923,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.489198597179,
                                                ["angle"] = 5.0109160492517,
                                                ["x"] = -128.62332397449,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.432193601072,
                                                ["angle"] = 4.8538364165722,
                                                ["x"] = -116.23331243811,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-W 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.444990970708,
                                                ["angle"] = 3.7891855728557,
                                                ["x"] = -137.57043416091,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-B 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 21.586105244976,
                                                ["angle"] = 3.5622927700964,
                                                ["x"] = -137.10340081464,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-B 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.108589187036,
                                                ["angle"] = 3.5622927700964,
                                                ["x"] = -125.91383567431,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 26.921940063067,
                                                ["angle"] = 5.5694214098899,
                                                ["x"] = -118.34952748705,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on finger on Nimitz Carriers

    local staticObj = {
        ["name"] = namePrefix ..  "PatioL Tech-Y 5", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 19.591039946127,
                                                ["angle"] = 5.3250753146107,
                                                ["x"] = -114.02559376099,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
end

function DYNDECK.sc_patior_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Generic",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 27.235224469639,
                                                ["angle"] = 5.4472483622503,
                                                ["x"] = -114.93158495153,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.872561341676,
                                                ["angle"] = 5.55196811737,
                                                ["x"] = -125.21379408858,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "vmfa-122",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 25.018040335181,
                                                ["angle"] = 5.9010339677688,
                                                ["x"] = -136.68694073897,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-G 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -24.322739531564,
                                                ["angle"] = 1.6598838854226,
                                                ["x"] = -88.353782408567,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-G 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "green",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -20.650600765722,
                                                ["angle"] = 14.226254499782,
                                                ["x"] = -111.11725081114,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 23.19980412265,
                                                ["angle"] = 4.312784348454,
                                                ["x"] = -119.58220353962,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats F-18s and Techs on Finger.

    local staticObj = {
        ["name"] = namePrefix .. "PatioR Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 22.729152691366,
                                                ["angle"] = 4.5571304437332,
                                                ["x"] = -112.43738784538,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
end

function DYNDECK.sc_corral(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. "_" .. templateName .. "_"

    -- Creates aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 Clean",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 32.777470310288,
                                                ["angle"] = 224.62569582771,
                                                ["x"] = 5.9309357552636,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 29.62261911384,
                                                ["angle"] = 118.85874315684,
                                                ["x"] = 2.1943722273475,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on Corral on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "Corral Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 24.854273797478,
                                                ["angle"] = 116.27565586389,
                                                ["x"] = 7.4119005094149,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_fantail_f18(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  namePrefix ..  "FT F-18-2", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 401 Brennan 'Goonie' Haltli  XO Alternate 1994",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.5562057387847,
                                                ["angle"] = 6.2151932331278,
                                                ["x"] = -153.90243998348,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  namePrefix ..  "FT F-18-1", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 400 Paul 'Greekbull' Tsaras CO Low Vis",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 16.62341317287,
                                                ["angle"] = 6.1802866480879,
                                                ["x"] = -153.13519210902,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  namePrefix ..  "FT F-18-3", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_00_CAG_Terry",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.299429679681,
                                                ["angle"] = 6.2151932331278,
                                                ["x"] = -154.30318520217,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  namePrefix ..  "FT F-18-4", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 410 Dargel 'Loco' Napoles",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -12.684961593476,
                                                ["angle"] = 7.0354979815652,
                                                ["x"] = -145.46005275256,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  namePrefix ..  "FT F-18-5", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VFA-25 407 Scott 'Bonz' Reagan CO Low Vis OS",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -14.27002078993,
                                                ["angle"] = 1.1537384023443,
                                                ["x"] = -134.06044829341,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
    -- Creats aircraft and techs on Fan Tail of Nimitz Class Carriers.

    local staticObj = {
        ["name"] = namePrefix ..  namePrefix ..  "FT F-18-6", -- unit name (Name this something identifiable if you wish to remove it later)

    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VMFA-122C_DC_000_POM",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -21.202331190479,
                                                ["angle"] = 1.1362851098243,
                                                ["x"] = -119.57187523335,
                                            }, -- end of ["offsets"]
                                            ["type"] = "FA-18C_hornet",
    -- Copy and paste over this with the units information end

    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

    -- ********************************************************
end

function DYNDECK.sc_fantail_f14(shipID, templateName)

    local namePrefix = "dyndeck_" .. shipID .. templateName

    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK100",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 18.179512487887,
                                                ["angle"] = 496.26874060812,
                                                ["x"] = -154.54050081595,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 6.7391817566416,
                                                ["angle"] = 496.30364719316,
                                                ["x"] = -155.27503906218,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK101_NPD",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.0029690814996,
                                                ["angle"] = 496.30364719316,
                                                ["x"] = -155.87628096397,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK207",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -13.005046297121,
                                                ["angle"] = 497.1239519416,
                                                ["x"] = -146.66496187523,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-2 F-14B NK102_NPD",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -15.307549672268,
                                                ["angle"] = 491.24219236238,
                                                ["x"] = -135.97118197623,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT F-14B 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "VF-31 F-14B NK201 CO",
                                            ["category"] = "Planes",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -21.875030227257,
                                                ["angle"] = 491.22473906986,
                                                ["x"] = -120.15838880036,
                                            }, -- end of ["offsets"]
                                            ["type"] = "F-14B",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 14.618622991992,
                                                ["angle"] = 149.85579067227,
                                                ["x"] = -143.34737720138,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-R 2", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 3.8587904552019,
                                                ["angle"] = 150.3270295703,
                                                ["x"] = -148.39389397052,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-R 3", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "red",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = 2.9951744287039,
                                                ["angle"] = 150.60628225062,
                                                ["x"] = -148.6959220144,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-B 4", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "brown",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -3.2820572675681,
                                                ["angle"] = 148.33735422303,
                                                ["x"] = -146.46714599295,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-W 5", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "white",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -5.4176867628193,
                                                ["angle"] = 146.87127765135,
                                                ["x"] = -135.06168999672,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
    -- Creats aircraft and techs on fan tail on Nimitz Carriers.
    
    local staticObj = {
        ["name"] = namePrefix .. "FT Tech-Y 6", -- unit name (Name this something identifiable if you wish to remove it later)
    
    -- Copy and paste over this with the units information
                                            ["livery_id"] = "yellow",
                                            ["category"] = "Personnel",
                                            ["offsets"] = 
                                            {
                                                ["y"] = -11.185698655444,
                                                ["angle"] = 151.70583967938,
                                                ["x"] = -117.66135621609,
                                            }, -- end of ["offsets"]
                                            ["shape_name"] = "carrier_tech_USA",
                                            ["type"] = "us carrier tech",
    -- Copy and paste over this with the units information end
    
    -- these can be left as is, but is required.
        ["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
        ["unitId"] = 1,
        ["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
        ["x"] = 0,			
        ["heading"] = 0,
        ["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
        ["linkOffset"] = true,
        ["dead"] = false,
    }
    coalition.addStaticObject(country.id.USA, staticObj) -- makes the object
    
    -- ********************************************************
end

function DYNDECK.sc_wires(shipID, templateName) -- template for deck template function

    local namePrefix = "dyndeck_" .. shipID .. templateName

	-- ********************************************************
	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 24.571513678523,
												["angle"] = 5.0109160492517,
												["x"] = -109.38597605227,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 16.105060984841,
												["angle"] = 111.66798663863,
												["x"] = -76.98153012923,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
										["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 10.701253058197,
												["angle"] = 112.20903870674,
												["x"] = -43.328997939506,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 4", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.650600765722,
												["angle"] = 334.66870516596,
												["x"] = -111.11725081114,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires Tech-G 5", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "green",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -24.862850276162,
												["angle"] = 334.66870516596,
												["x"] = -88.432445487217,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO1-1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -20.639902404069,
												["angle"] = 18.991003357727,
												["x"] = -128.87964937709,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso4_usa",
											["type"] = "Carrier LSO Personell 4",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats techs along landing area on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Wires LSO4-2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -22.336654402517,
												["angle"] = 40.476006449779,
												["x"] = -130.51429093913,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_lso3_usa",
											["type"] = "Carrier LSO Personell 3",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
    -- ********************************************************

end

function DYNDECK.sc_street(shipID, templateName) -- template for deck template function

    local namePrefix = "dyndeck_" .. shipID .. templateName
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VFA-25 406 Ryan 'GreenHead' Kitts",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 8.6288177467084,
												["angle"] = 657.50225690737,
												["x"] = -7.0777660328889,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street F-18 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VFA-25 413 Adam 'sickdog' Soloway",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 6.9391671683504,
												["angle"] = 657.50225690737,
												["x"] = 2.5541960441424,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street F-18 4", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "vmfa-122 high visibility",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 5.4704260470337,
												["angle"] = 657.50225690737,
												["x"] = 12.099386533672,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street Tech-Y 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 3.6189556139081,
												["angle"] = 492.14976357342,
												["x"] = -12.865438917002,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street Tech-Y 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 3.0638087495994,
												["angle"] = 17.629646541172,
												["x"] = 14.649276218361,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and techs on street on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Street Tech-Y 3", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "yellow",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 11.274891964877,
												["angle"] = 19.217896160486,
												["x"] = 19.925853226823,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	
end

function DYNDECK.sc_bow(shipID, templateName) -- template for deck template function

    local namePrefix = "dyndeck_" .. shipID .. templateName
	-- Creats aircraft and Techs on Bow on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Bow F-18 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VFA-25 Clean",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = -3.848033676395,
												["angle"] = 731.99290938249,
												["x"] = 164.12363956928,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and Techs on Bow on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Bow F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VMFA-122C_DC_04_Gigs",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 6.2231174373491,
												["angle"] = 731.99290938249,
												["x"] = 164.16779592396,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and Techs on Bow on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Bow Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "brown",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = -0.91963539000237,
												["angle"] = 493.12714795453,
												["x"] = 158.59517086731,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	-- Creats aircraft and Techs on Bow on Nimitz Carriers.

	local staticObj = {
		["name"] = namePrefix .. "Bow Tech-W 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "white",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 0.96975688117813,
												["angle"] = 493.63329343761,
												["x"] = 158.16543528477,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************
	
end

function DYNDECK.sc_point(shipID, templateName) -- template for deck template function

    local namePrefix = "dyndeck_" .. shipID .. templateName
	-- Creats static aircraft and techs on the Point on Nimitz carriers.

	local staticObj = {
		["name"] = namePrefix .. "Point S-3B 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "S3_VS37",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 34.100242104084,
												["angle"] = 375.42214320003,
												["x"] = 49.68480942168,
											}, -- end of ["offsets"]
											["type"] = "S-3B Tanker",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************-- Creats static aircraft and techs on the Point on Nimitz carriers.
	-- Creats static aircraft and techs on the Point on Nimitz carriers.

	local staticObj = {
		["name"] = namePrefix .. "Point F-18 2", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "VFA-25 407  Scott 'Bonz' Reagan Custom",
											["category"] = "Planes",
											["offsets"] = 
											{
												["y"] = 33.476355525632,
												["angle"] = 375.42214320003,
												["x"] = 59.061195556497,
											}, -- end of ["offsets"]
											["type"] = "FA-18C_hornet",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************-- Creats static aircraft and techs on the Point on Nimitz carriers.

	local staticObj = {
		["name"] = namePrefix .. "Point Tech-B 1", -- unit name (Name this something identifiable if you wish to remove it later)

	-- Copy and paste over this with the units information
											["livery_id"] = "brown",
											["category"] = "Personnel",
											["offsets"] = 
											{
												["y"] = 29.547724102961,
												["angle"] = 119.76631436788,
												["x"] = 56.582054462759,
											}, -- end of ["offsets"]
											["shape_name"] = "carrier_tech_USA",
											["type"] = "us carrier tech",
	-- Copy and paste over this with the units information end

	-- these can be left as is, but is required.
		["groupId"] = 1,		-- id's of the group/unit we're spawning (will auto increment if id taken?)
		["unitId"] = 1,
		["y"] = 0,			-- The initial location of the unit (required else unit will offset on origin of map)
		["x"] = 0,			
		["heading"] = 0,
		["linkUnit"] = shipID, -- This value must be set Via 'shipID = #' where # is the id of the ship you wish to spawn on
		["linkOffset"] = true,
		["dead"] = false,
	}
	coalition.addStaticObject(country.id.USA, staticObj) -- makes the object

	-- ********************************************************

end

--- END Dynamic Deck Templates  
--------------------------------[dynamic_deck_data.lua]-------------------------------- 
 
env.info( "[JTF-1] dynamic_deck_data.lua" )

--- Dynamic Deck Templates
--
-- NOTE: dynamic_deck_population.lua should be loaded AFTER this file.
--
-- Load order in miz MUST be;
--     1. dynamic_deck_data.lua
--     2. dynamic_deck.lua
--
--     dynamic_deck_templates.lua can be loaded either before or after these files

local _msg

if not DYNDECK then -- Error prevention. Create empty container if DDP module not loaded.
    _msg = "[JTF-1 DYNDECK] CORE FILE NOT LOADED!"
    DYNDECK = {}
elseif not DYNDECK.sc_ then
    _msg = "[JTF-1 DYNDECK] TEMPLATE FILE NOT LOADED!"
    BASE:E(_msg)
end

if _msg then
    BASE:E(_msg)
end

DYNDECK.menu_root = "MENU_CVN_CONTROL"

DYNDECK.ship = {
    {
        name = "CVN-72 Lincoln", -- Name will be used for ship's menu entry
        id = 2269, -- unit ID in Mission Editor
        coalitionID = 2, -- 1, red, 2 blue
        fullTemplateActive = false, -- flag to denote a full deck template is active
        templates = {
            {
                -- Submenu group under which template should appear. 
                -- "" assumes full template. 
                -- If a name is present, partial template assumed. 
                -- Value will be used as the text for group in the submenu.
                -- Templates with same group name will appear in same group submenu

                group = "",

                -- name of template as it appears in the name of the function containing the template

                name = "sc_lch_low", 

                -- text that will appear in the template's menu entry

                menutext = "Launch low density", 

                -- whether a full deck clear should not be performed prior to applying the template. 
                -- True = do not clear deck (for partial templates). 
                -- False = clear deck first (for full templates)

                noClear = true, 

                -- flag to denote template is active. 
                -- True = active (do not re-apply the template if it seelcted from the menu). 
                -- False = template is not active.

                active = false
            }, 
            {
                group = "",
                name = "sc_lch_med", 
                menutext = "Launch medium density", 
                noClear = true, 
                active = false
            }, 
            {
                group = "",
                name = "sc_lch_hvy", 
                menutext = "Launch high density", 
                noClear = true, 
                active = false
            }, 
            {
                group = "",
                name = "sc_rec_low", 
                menutext = "Recovery low density", 
                noClear = true, 
                active = false
            }, 
            {
                group = "",
                name = "sc_rec_med", 
                menutext = "Recovery medium density", 
                noClear = true, 
                active = false
            }, 
            {
                group = "",
                name = "sc_rec_hvy", 
                menutext = "Recovery high density", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Cat",
                name = "sc_cat1l_f18", 
                menutext = "F18 Cat 1 Launch", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Cat",
                name = "sc_cat1r_f18", 
                menutext = "F18 Cat 1 Recovery", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Cat",
                name = "sc_cat2l_f18", 
                menutext = "F18 Cat 2 Launch", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Cat",
                name = "sc_cat2r_f18", 
                menutext = "F18 Cat 2 Recovery", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el1_f14", 
                menutext = "F14 EL1", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el2_f14", 
                menutext = "F14 EL2", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el3_f14", 
                menutext = "F14 EL3", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el4_f14", 
                menutext = "F14 EL4", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el1_f18", 
                menutext = "F18 EL1", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el2_f18", 
                menutext = "F18 EL2", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el3_f18", 
                menutext = "F18 EL3", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Elevators",
                name = "sc_el4_f18", 
                menutext = "F18 EL4", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Island",
                name = "sc_island", 
                menutext = "AC and Tech around Island", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Island",
                name = "sc_deckeq", 
                menutext = "Deck eqpt around Island", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Patio",
                name = "sc_patiol_f14", 
                menutext = "F14 on Patio Launch", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Patio",
                name = "sc_patior_f14", 
                menutext = "F14 on Patio Recovery", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Patio",
                name = "sc_patiol_f18", 
                menutext = "F18 on Patio Launch", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Patio",
                name = "sc_patior_f18", 
                menutext = "F18 on Patio Recovery", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Corral",
                name = "sc_corral", 
                menutext = "AC and Tech Corral", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Fantail",
                name = "sc_fantail_f14", 
                menutext = "F14 on Fantail", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Fantail",
                name = "sc_fantail_f18", 
                menutext = "F18 on Fantail", 
                noClear = true, 
                active = false
            },
            {
                group = "Other",
                name = "sc_wires", 
                menutext = "Techs along Wires", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Other",
                name = "sc_street", 
                menutext = "AC and techs on Street", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Other",
                name = "sc_bow", 
                menutext = "AC and techs on Bow", 
                noClear = true, 
                active = false
            }, 
            {
                group = "Other",
                name = "sc_point", 
                menutext = "AC and techs on Point", 
                noClear = true, 
                active = false
            }, 
        }
    },
}

if DYNDECK.Start then
    DYNDECK:Start()
end
  
--------------------------------[core\Hercules_Cargo.lua]-------------------------------- 
 
env.info( "[JTF-1] Hercules_Cargo.lua" )
-- Hercules Cargo Drop Events by Anubis Yinepu

-- This script will only work for the Herculus mod by Anubis
-- Payloads carried by pylons 11, 12 and 13 need to be declared in the Herculus_Loadout.lua file
-- Except for Ammo pallets, this script will spawn whatever payload gets launched from pylons 11, 12 and 13
-- Pylons 11, 12 and 13 are moveable within the Herculus cargobay area
-- Ammo pallets can only be jettisoned from these pylons with no benefit to DCS world
-- To benefit DCS world, Ammo pallets need to be off/on loaded using DCS arming and refueling window
-- Cargo_Container_Enclosed = true: Cargo enclosed in container with parachute, need to be dropped from 100m (300ft) or more, except when parked on ground
-- Cargo_Container_Enclosed = false: Open cargo with no parachute, need to be dropped from 10m (30ft) or less

Hercules_Cargo = {}
Hercules_Cargo.Hercules_Cargo_Drop_Events = {}
local GT_DisplayName = ""
local GT_Name = ""
local Cargo_Drop_initiator = ""
local Cargo_Container_Enclosed = false
local SoldierGroup = false
local ParatrooperCount = 1
local ParatrooperGroupSpawnInit = false
local ParatrooperGroupSpawn = false

local Herc_j = 0
local Herc_Cargo = {}
Herc_Cargo.Cargo_Drop_Direction = 0
Herc_Cargo.Cargo_Contents = ""
Herc_Cargo.Cargo_Type_name = ""
Herc_Cargo.Cargo_over_water = false
Herc_Cargo.Container_Enclosed = false
Herc_Cargo.offload_cargo = false
Herc_Cargo.all_cargo_survive_to_the_ground = false
Herc_Cargo.all_cargo_gets_destroyed = false
Herc_Cargo.destroy_cargo_dropped_without_parachute = false
Herc_Cargo.scheduleFunctionID = 0

local CargoHeading = 0
local Cargo_Drop_Position = {}

local SoldierUnitID = 12000
local SoldierGroupID = 12000
local GroupSpacing = 0
--added by wrench
Hercules_Cargo.types = {
	["ATGM M1045 HMMWV TOW Air [7183lb]"] = {['name'] = "M1045 HMMWV TOW", ['container'] = true},
	["ATGM M1045 HMMWV TOW Skid [7073lb]"] = {['name'] = "M1045 HMMWV TOW", ['container'] = false},
	["APC M1043 HMMWV Armament Air [7023lb]"] = {['name'] = "M1043 HMMWV Armament", ['container'] = true},
	["APC M1043 HMMWV Armament Skid [6912lb]"] = {['name'] = "M1043 HMMWV Armament", ['container'] = false},
	["SAM Avenger M1097 Air [7200lb]"] = {['name'] = "M1097 Avenger", ['container'] = true},
	["SAM Avenger M1097 Skid [7090lb]"] = {['name'] = "M1097 Avenger", ['container'] = false},
	["APC Cobra Air [10912lb]"] = {['name'] = "Cobra", ['container'] = true},
	["APC Cobra Skid [10802lb]"] = {['name'] = "Cobra", ['container'] = false},
	["APC M113 Air [21624lb]"] = {['name'] = "M-113", ['container'] = true},
	["APC M113 Skid [21494lb]"] = {['name'] = "M-113", ['container'] = false},
	["Tanker M978 HEMTT [34000lb]"] = {['name'] = "M978 HEMTT Tanker", ['container'] = false},
	["HEMTT TFFT [34400lb]"] = {['name'] = "HEMTT TFFT", ['container'] = false},
	["SPG M1128 Stryker MGS [33036lb]"] = {['name'] = "M1128 Stryker MGS", ['container'] = false},
	["AAA Vulcan M163 Air [21666lb]"] = {['name'] = "Vulcan", ['container'] = true},
	["AAA Vulcan M163 Skid [21577lb]"] = {['name'] = "Vulcan", ['container'] = false},
	["APC M1126 Stryker ICV [29542lb]"] = {['name'] = "M1126 Stryker ICV", ['container'] = false},
	["ATGM M1134 Stryker [30337lb]"] = {['name'] = "M1134 Stryker ATGM", ['container'] = false},
	["APC LAV-25 Air [22520lb]"] = {['name'] = "LAV-25", ['container'] = true},
	["APC LAV-25 Skid [22514lb]"] = {['name'] = "LAV-25", ['container'] = false},
	["M1025 HMMWV Air [6160lb]"] = {['name'] = "Hummer", ['container'] = true},
	["M1025 HMMWV Skid [6050lb]"] = {['name'] = "Hummer", ['container'] = false},
	["IFV M2A2 Bradley [34720lb]"] = {['name'] = "M-2 Bradley", ['container'] = false},
	["IFV MCV-80 [34720lb]"] = {['name'] = "MCV-80", ['container'] = false},
	["IFV BMP-1 [23232lb]"] = {['name'] = "BMP-1", ['container'] = false},
	["IFV BMP-2 [25168lb]"] = {['name'] = "BMP-2", ['container'] = false},
	["IFV BMP-3 [32912lb]"] = {['name'] = "BMP-3", ['container'] = false},
	["ARV BRDM-2 Air [12320lb]"] = {['name'] = "BRDM-2", ['container'] = true},
	["ARV BRDM-2 Skid [12210lb]"] = {['name'] = "BRDM-2", ['container'] = false},
	["APC BTR-80 Air [23936lb]"] = {['name'] = "BTR-80", ['container'] = true},
	["APC BTR-80 Skid [23826lb]"] = {['name'] = "BTR-80", ['container'] = false},
	["APC BTR-82A Air [24998lb]"] = {['name'] = "BTR-82A", ['container'] = true},
	["APC BTR-82A Skid [24888lb]"] = {['name'] = "BTR-82A", ['container'] = false},
	["SAM ROLAND ADS [34720lb]"] = {['name'] = "Roland Radar", ['container'] = false},
	["SAM ROLAND LN [34720b]"] = {['name'] = "Roland ADS", ['container'] = false},
	["SAM SA-13 STRELA [21624lb]"] = {['name'] = "Strela-10M3", ['container'] = false},
	["AAA ZSU-23-4 Shilka [32912lb]"] = {['name'] = "ZSU-23-4 Shilka", ['container'] = false},
	["SAM SA-19 Tunguska 2S6 [34720lb]"] = {['name'] = "2S6 Tunguska", ['container'] = false},
	["Transport UAZ-469 Air [3747lb]"] = {['name'] = "UAZ-469", ['container'] = true},
	["Transport UAZ-469 Skid [3630lb]"] = {['name'] = "UAZ-469", ['container'] = false},
	["AAA GEPARD [34720lb]"] = {['name'] = "Gepard", ['container'] = false},
	["SAM CHAPARRAL Air [21624lb]"] = {['name'] = "M48 Chaparral", ['container'] = true},
	["SAM CHAPARRAL Skid [21516lb]"] = {['name'] = "M48 Chaparral", ['container'] = false},
	["SAM LINEBACKER [34720lb]"] = {['name'] = "M6 Linebacker", ['container'] = false},
	["Transport URAL-375 [14815lb]"] = {['name'] = "Ural-375", ['container'] = false},
	["Transport M818 [16000lb]"] = {['name'] = "M 818", ['container'] = false},
	["IFV MARDER [34720lb]"] = {['name'] = "Marder", ['container'] = false},
	["Transport Tigr Air [15900lb]"] = {['name'] = "Tigr_233036", ['container'] = true},
	["Transport Tigr Skid [15730lb]"] = {['name'] = "Tigr_233036", ['container'] = false},
	["IFV TPZ FUCH [33440lb]"] = {['name'] = "TPZ", ['container'] = false},
	["IFV BMD-1 Air [18040lb]"] = {['name'] = "BMD-1", ['container'] = true},
	["IFV BMD-1 Skid [17930lb]"] = {['name'] = "BMD-1", ['container'] = false},
	["IFV BTR-D Air [18040lb]"] = {['name'] = "BTR_D", ['container'] = true},
	["IFV BTR-D Skid [17930lb]"] = {['name'] = "BTR_D", ['container'] = false},
	["EWR SBORKA Air [21624lb]"] = {['name'] = "Dog Ear radar", ['container'] = true},
	["EWR SBORKA Skid [21624lb]"] = {['name'] = "Dog Ear radar", ['container'] = false},
	["ART 2S9 NONA Air [19140lb]"] = {['name'] = "SAU 2-C9", ['container'] = true},
	["ART 2S9 NONA Skid [19030lb]"] = {['name'] = "SAU 2-C9", ['container'] = false},
	["ART GVOZDIKA [34720lb]"] = {['name'] = "SAU Gvozdika", ['container'] = false},
	["APC MTLB Air [26400lb]"] = {['name'] = "MTLB", ['container'] = true},
	["APC MTLB Skid [26290lb]"] = {['name'] = "MTLB", ['container'] = false},
	--["Generic Crate [20000lb]"] = {['name'] =  "Hercules_Container_Parachute", ['container'] = true}
}
function Hercules_Cargo.Soldier_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country, GroupSpacing)
	SoldierUnitID = SoldierUnitID + 30
	SoldierGroupID = SoldierGroupID + 1
	local Herc_Soldier_Spawn = 
	{
		["visible"] = false,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["uncontrollable"] = false,
		["task"] = "Ground Nothing",
		["taskSelected"] = true,
		["groupId"] = SoldierGroupID,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 0.5 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 0.5 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [1]
			[2] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 1.0 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 1.0 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [2]
			[3] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 1.5 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 1.0 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [3]
			[4] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 2.0 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 2.0 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [4]
			[5] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 2.5 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 2.5 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [5]
			[6] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 3.0 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 3.0 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [6]
			[7] = 
			{
				["type"] = "Soldier M249",
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 3.5 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 3.5 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [7]
			[8] = 
			{
				["type"] = "Soldier M249",
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 4.0 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 4.0 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [8]
			[9] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 4.5 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 4.5 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [9]
			[10] = 
			{
				["type"] = "Paratrooper RPG-16",
				["transportable"] = 
				{
					["randomTransportable"] = true,
				}, -- end of ["transportable"]
				["unitId"] = SoldierUnitID + 1,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z + 5.0 + GroupSpacing,
				["x"] = Cargo_Drop_Position.x + 5.0 + GroupSpacing,
				["name"] = "Soldier Unit "..SoldierUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = false,
			}, -- end of [10]
		}, -- end of ["units"]
		["y"] = Cargo_Drop_Position.z,
		["x"] = Cargo_Drop_Position.x,
		["name"] = "Soldier_Group_"..SoldierGroupID,
		["start_time"] = 0,
	}
	coalition.addGroup(Cargo_Country, Group.Category.GROUND, Herc_Soldier_Spawn)
end

local CargoUnitID = 10000
local CargoGroupID = 10000
local CargoStaticGroupID = 11000

function Hercules_Cargo.Cargo_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country)
	CargoUnitID = CargoUnitID + 1
	CargoGroupID = CargoGroupID + 1
	local Herc_Cargo_Spawn = 
	{
		["visible"] = false,
		["tasks"] = 
		{
		}, -- end of ["tasks"]
		["uncontrollable"] = false,
		["task"] = "Ground Nothing",
		["groupId"] = CargoGroupID,
		["hidden"] = false,
		["units"] = 
		{
			[1] = 
			{
				["type"] = Cargo_Type_name,
				["transportable"] = 
				{
					["randomTransportable"] = false,
				}, -- end of ["transportable"]
				["unitId"] = CargoUnitID,
				["skill"] = "Excellent",
				["y"] = Cargo_Drop_Position.z,
				["x"] = Cargo_Drop_Position.x,
				["name"] = "Cargo Unit "..CargoUnitID,
				["heading"] = CargoHeading,
				["playerCanDrive"] = true,
			}, -- end of [1]
		}, -- end of ["units"]
		["y"] = Cargo_Drop_Position.z,
		["x"] = Cargo_Drop_Position.x,
		["name"] = "Cargo Group "..CargoUnitID,
		["start_time"] = 0,
	}
	coalition.addGroup(Cargo_Country, Group.Category.GROUND, Herc_Cargo_Spawn)
end

function Hercules_Cargo.Cargo_SpawnStatic(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, dead, Cargo_Country)
	CargoStaticGroupID = CargoStaticGroupID + 1
	local Herc_CargoObject_Spawn = 
	{
		["type"] = Cargo_Type_name,
		["y"] = Cargo_Drop_Position.z,
		["x"] = Cargo_Drop_Position.x,
		["name"] = "Cargo Static Group "..CargoStaticGroupID,
		["heading"] = CargoHeading,
		["dead"] = dead,
	}
	coalition.addStaticObject(Cargo_Country, Herc_CargoObject_Spawn)
end

function Hercules_Cargo.Cargo_SpawnObjects(Cargo_Drop_Direction, Cargo_Content_position, Cargo_Type_name, Cargo_over_water, Container_Enclosed, ParatrooperGroupSpawn, offload_cargo, all_cargo_survive_to_the_ground, all_cargo_gets_destroyed, destroy_cargo_dropped_without_parachute, Cargo_Country)
	if offload_cargo == true then
		------------------------------------------------------------------------------
		if CargoHeading >= 3.14 then
			CargoHeading = 0
			Cargo_Drop_Position = {["x"] = Cargo_Content_position.x - (30.0 * math.cos(Cargo_Drop_Direction - 1.0)),
								   ["z"] = Cargo_Content_position.z - (30.0 * math.sin(Cargo_Drop_Direction - 1.0))}
		else
			if CargoHeading >= 1.57 then
				CargoHeading = 3.14
				Cargo_Drop_Position = {["x"] = Cargo_Content_position.x - (20.0 * math.cos(Cargo_Drop_Direction + 0.5)),
									   ["z"] = Cargo_Content_position.z - (20.0 * math.sin(Cargo_Drop_Direction + 0.5))}
			else
				if CargoHeading >= 0 then
					CargoHeading = 1.57
					Cargo_Drop_Position = {["x"] = Cargo_Content_position.x - (10.0 * math.cos(Cargo_Drop_Direction + 1.5)),
										   ["z"] = Cargo_Content_position.z - (10.0 * math.sin(Cargo_Drop_Direction + 1.5))}
				end
			end
		end
		------------------------------------------------------------------------------
		if ParatrooperGroupSpawn == true then
			Hercules_Cargo.Soldier_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country, 0)
			Hercules_Cargo.Soldier_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country, 5)
			Hercules_Cargo.Soldier_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country, 10)
		else
			Hercules_Cargo.Cargo_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country, 0)
		end
	else
		------------------------------------------------------------------------------
		CargoHeading = 0
		Cargo_Drop_Position = {["x"] = Cargo_Content_position.x - (20.0 * math.cos(Cargo_Drop_Direction)),
							   ["z"] = Cargo_Content_position.z - (20.0 * math.cos(Cargo_Drop_Direction))}
		------------------------------------------------------------------------------
		if all_cargo_gets_destroyed == true or Cargo_over_water == true then
			if Container_Enclosed == true then
				Hercules_Cargo.Cargo_SpawnStatic(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, true, Cargo_Country)
				if ParatrooperGroupSpawn == false then
					Hercules_Cargo.Cargo_SpawnStatic(Cargo_Drop_Position, "Hercules_Container_Parachute_Static", CargoHeading, true, Cargo_Country)
				end
			else
				Hercules_Cargo.Cargo_SpawnStatic(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, true, Cargo_Country)
			end
		else
			------------------------------------------------------------------------------
			if all_cargo_survive_to_the_ground == true then
				if ParatrooperGroupSpawn == true then
					Hercules_Cargo.Cargo_SpawnStatic(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, true, Cargo_Country)
				else
					Hercules_Cargo.Cargo_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country)
				end
				if Container_Enclosed == true then
					if ParatrooperGroupSpawn == false then
						Hercules_Cargo.Cargo_SpawnStatic({["z"] = Cargo_Drop_Position.z + 10.0,["x"] = Cargo_Drop_Position.x + 10.0}, "Hercules_Container_Parachute_Static", CargoHeading, false, Cargo_Country)
					end
				end
			end
			------------------------------------------------------------------------------
			if destroy_cargo_dropped_without_parachute == true then
				if Container_Enclosed == true then
					if ParatrooperGroupSpawn == true then
						Hercules_Cargo.Soldier_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country, 0)
					else
						Hercules_Cargo.Cargo_SpawnGroup(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, Cargo_Country)
						Hercules_Cargo.Cargo_SpawnStatic({["z"] = Cargo_Drop_Position.z + 10.0,["x"] = Cargo_Drop_Position.x + 10.0}, "Hercules_Container_Parachute_Static", CargoHeading, false, Cargo_Country)
					end
				else
					Hercules_Cargo.Cargo_SpawnStatic(Cargo_Drop_Position, Cargo_Type_name, CargoHeading, true, Cargo_Country)
				end
			end
			------------------------------------------------------------------------------
		end
	end
end

function Hercules_Cargo.Calculate_Object_Height_AGL(object)
	return object:getPosition().p.y - land.getHeight({x = object:getPosition().p.x, y = object:getPosition().p.z})
end

function Hercules_Cargo.Check_SurfaceType(object)
   -- LAND,--1 SHALLOW_WATER,--2 WATER,--3 ROAD,--4 RUNWAY--5
	return land.getSurfaceType({x = object:getPosition().p.x, y = object:getPosition().p.z})
end

function Hercules_Cargo.Cargo_Track(Arg, time)
	local status, result = pcall(
		function()
		local next = next
		if next(Arg[1].Cargo_Contents) ~= nil then
			if Hercules_Cargo.Calculate_Object_Height_AGL(Arg[1].Cargo_Contents) < 5.0 then--pallet less than 5m above ground before spawning
				if Hercules_Cargo.Check_SurfaceType(Arg[1].Cargo_Contents) == 2 or Hercules_Cargo.Check_SurfaceType(Arg[1].Cargo_Contents) == 3 then
					Arg[1].Cargo_over_water = true--pallets gets destroyed in water
				end
				Arg[1].Cargo_Contents:destroy()--remove pallet+parachute before hitting ground and replace with Cargo_SpawnContents
				Hercules_Cargo.Cargo_SpawnObjects(Arg[1].Cargo_Drop_Direction, Object.getPoint(Arg[1].Cargo_Contents), Arg[1].Cargo_Type_name, Arg[1].Cargo_over_water, Arg[1].Container_Enclosed, Arg[1].ParatrooperGroupSpawn, Arg[1].offload_cargo, Arg[1].all_cargo_survive_to_the_ground, Arg[1].all_cargo_gets_destroyed, Arg[1].destroy_cargo_dropped_without_parachute, Arg[1].Cargo_Country)
				timer.removeFunction(Arg[1].scheduleFunctionID)
				Arg[1] = {}
			end
			return time + 0.1
		end
	end) -- pcall
	if not status then
		-- env.error(string.format("Cargo_Spawn: %s", result))
	else
		return result
	end
end

function Hercules_Cargo.Calculate_Cargo_Drop_initiator_NorthCorrection(point)	--correction needed for true north
	if not point.z then --Vec2; convert to Vec3
		point.z = point.y
		point.y = 0
	end
	local lat, lon = coord.LOtoLL(point)
	local north_posit = coord.LLtoLO(lat + 1, lon)
	return math.atan2(north_posit.z - point.z, north_posit.x - point.x)
end

function Hercules_Cargo.Calculate_Cargo_Drop_initiator_Heading(Cargo_Drop_initiator)
	local Heading = math.atan2(Cargo_Drop_initiator:getPosition().x.z, Cargo_Drop_initiator:getPosition().x.x)
	Heading = Heading + Hercules_Cargo.Calculate_Cargo_Drop_initiator_NorthCorrection(Cargo_Drop_initiator:getPosition().p)
	if Heading < 0 then
		Heading = Heading + (2 * math.pi)-- put heading in range of 0 to 2*pi
	end
	return Heading + 0.06 -- rad
end

function Hercules_Cargo.Cargo_Initialize(initiator, Cargo_Contents, Cargo_Type_name, Container_Enclosed)
	local status, result = pcall(
		function()
		Cargo_Drop_initiator = Unit.getByName(initiator:getName())
		local next = next
		if next(Cargo_Drop_initiator) ~= nil then
			if ParatrooperGroupSpawnInit == true then
				if (ParatrooperCount == 1 or ParatrooperCount == 2 or ParatrooperCount == 3) then
					Herc_j = Herc_j + 1
					Herc_Cargo[Herc_j] = {}
					Herc_Cargo[Herc_j].Cargo_Drop_Direction = Hercules_Cargo.Calculate_Cargo_Drop_initiator_Heading(Cargo_Drop_initiator)
					Herc_Cargo[Herc_j].Cargo_Contents = Cargo_Contents
					Herc_Cargo[Herc_j].Cargo_Type_name = Cargo_Type_name
					Herc_Cargo[Herc_j].Container_Enclosed = Container_Enclosed
					Herc_Cargo[Herc_j].ParatrooperGroupSpawn = ParatrooperGroupSpawnInit
					Herc_Cargo[Herc_j].Cargo_Country = initiator:getCountry()
				------------------------------------------------------------------------------
					if Hercules_Cargo.Calculate_Object_Height_AGL(Cargo_Drop_initiator) < 5.0 then--aircraft on ground
						Herc_Cargo[Herc_j].offload_cargo = true
						ParatrooperCount = 0
						ParatrooperGroupSpawnInit = false
					else
				------------------------------------------------------------------------------
						if Hercules_Cargo.Calculate_Object_Height_AGL(Cargo_Drop_initiator) < 10.0 then--aircraft less than 10m above ground
							Herc_Cargo[Herc_j].all_cargo_survive_to_the_ground = true
						else
				------------------------------------------------------------------------------
							if Hercules_Cargo.Calculate_Object_Height_AGL(Cargo_Drop_initiator) < 152.4 then--aircraft more than 30ft but less than 500ft above ground
								Herc_Cargo[Herc_j].all_cargo_gets_destroyed = true
							else
				------------------------------------------------------------------------------
								Herc_Cargo[Herc_j].destroy_cargo_dropped_without_parachute = true--aircraft more than 152.4m (500ft)above ground
							end
						end
					end
				------------------------------------------------------------------------------
					Herc_Cargo[Herc_j].scheduleFunctionID = timer.scheduleFunction(Hercules_Cargo.Cargo_Track, {Herc_Cargo[Herc_j]}, timer.getTime() + 0.1)
					ParatrooperCount = ParatrooperCount + 1.0
				else
					if (ParatrooperCount == 30) then
						ParatrooperGroupSpawnInit = false
						ParatrooperCount = 1
					else
						ParatrooperCount = ParatrooperCount + 1.0
					end
				end
			else
				Herc_j = Herc_j + 1
				Herc_Cargo[Herc_j] = {}
				Herc_Cargo[Herc_j].Cargo_Drop_Direction = Hercules_Cargo.Calculate_Cargo_Drop_initiator_Heading(Cargo_Drop_initiator)
				Herc_Cargo[Herc_j].Cargo_Contents = Cargo_Contents
				Herc_Cargo[Herc_j].Cargo_Type_name = Cargo_Type_name
				Herc_Cargo[Herc_j].Container_Enclosed = Container_Enclosed
				Herc_Cargo[Herc_j].ParatrooperGroupSpawn = ParatrooperGroupSpawnInit
				Herc_Cargo[Herc_j].Cargo_Country = initiator:getCountry()
			------------------------------------------------------------------------------
				if Hercules_Cargo.Calculate_Object_Height_AGL(Cargo_Drop_initiator) < 5.0 then--aircraft on ground
					Herc_Cargo[Herc_j].offload_cargo = true
				else
			------------------------------------------------------------------------------
					if Hercules_Cargo.Calculate_Object_Height_AGL(Cargo_Drop_initiator) < 10.0 then--aircraft less than 10m above ground
						Herc_Cargo[Herc_j].all_cargo_survive_to_the_ground = true
					else
			------------------------------------------------------------------------------
						if Hercules_Cargo.Calculate_Object_Height_AGL(Cargo_Drop_initiator) < 100.0 then--aircraft more than 10m but less than 100m above ground
							Herc_Cargo[Herc_j].all_cargo_gets_destroyed = true
						else
			------------------------------------------------------------------------------
							Herc_Cargo[Herc_j].destroy_cargo_dropped_without_parachute = true--aircraft more than 100m above ground
						end
					end
				end
			------------------------------------------------------------------------------
				Herc_Cargo[Herc_j].scheduleFunctionID = timer.scheduleFunction(Hercules_Cargo.Cargo_Track, {Herc_Cargo[Herc_j]}, timer.getTime() + 0.1)
			end
		end
	end) -- pcall
	if not status then
		-- env.error(string.format("Cargo_Initialize: %s", result))
	else
		return result
	end
end

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	-- EventHandlers
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function Hercules_Cargo.Hercules_Cargo_Drop_Events:onEvent(Cargo_Drop_Event)
	if Cargo_Drop_Event.id == world.event.S_EVENT_SHOT then
		GT_DisplayName = Weapon.getDesc(Cargo_Drop_Event.weapon).typeName:sub(15, -1)--Remove "weapons.bombs." from string
		 -- trigger.action.outTextForCoalition(coalition.side.BLUE, string.format("Cargo_Drop_Event: %s", Weapon.getDesc(Cargo_Drop_Event.weapon).typeName), 10)
		 -- trigger.action.outTextForCoalition(coalition.side.RED, string.format("Cargo_Drop_Event: %s", Weapon.getDesc(Cargo_Drop_Event.weapon).typeName), 10)
			 ---------------------------------------------------------------------------------------------------------------------------------
			if (GT_DisplayName == "Squad 30 x Soldier [7950lb]") then
				GT_Name = "Soldier M4 GRG"
				SoldierGroup = true
				ParatrooperGroupSpawnInit = true
				Hercules_Cargo.Cargo_Initialize(Cargo_Drop_Event.initiator, Cargo_Drop_Event.weapon, GT_Name, SoldierGroup)
			end
			 ---------------------------------------------------------------------------------------------------------------------------------
			if Hercules_Cargo.types[GT_DisplayName] then
				local GT_Name = Hercules_Cargo.types[GT_DisplayName]['name']
				local Cargo_Container_Enclosed = Hercules_Cargo.types[GT_DisplayName]['container']
				Hercules_Cargo.Cargo_Initialize(Cargo_Drop_Event.initiator, Cargo_Drop_Event.weapon, GT_Name, Cargo_Container_Enclosed)
			end
	end
end
world.addEventHandler(Hercules_Cargo.Hercules_Cargo_Drop_Events)

-- trigger.action.outTextForCoalition(coalition.side.BLUE, string.format("Cargo_Drop_Event.weapon: %s", Weapon.getDesc(Cargo_Drop_Event.weapon).typeName), 10)
-- trigger.action.outTextForCoalition(coalition.side.BLUE, tostring('Calculate_Object_Height_AGL: ' .. aaaaa), 10)
-- trigger.action.outTextForCoalition(coalition.side.BLUE, string.format("Speed: %.2f", Calculate_Object_Speed(Cargo_Drop_initiator)), 10)
-- trigger.action.outTextForCoalition(coalition.side.BLUE, string.format("Russian Interceptor Patrol scrambled from Nalchik"), 10)

-- function basicSerialize(var)
	-- if var == nil then
		-- return "\"\""
	-- else
		-- if ((type(var) == 'number') or
				-- (type(var) == 'boolean') or
				-- (type(var) == 'function') or
				-- (type(var) == 'table') or
				-- (type(var) == 'userdata') ) then
			-- return tostring(var)
		-- else
			-- if type(var) == 'string' then
				-- var = string.format('%q', var)
				-- return var
			-- end
		-- end
	-- end
-- end
	
-- function tableShow(tbl, loc, indent, tableshow_tbls) --based on serialize_slmod, this is a _G serialization
	-- tableshow_tbls = tableshow_tbls or {} --create table of tables
	-- loc = loc or ""
	-- indent = indent or ""
	-- if type(tbl) == 'table' then --function only works for tables!
		-- tableshow_tbls[tbl] = loc
		-- local tbl_str = {}
		-- tbl_str[#tbl_str + 1] = indent .. '{\n'
		-- for ind,val in pairs(tbl) do -- serialize its fields
			-- if type(ind) == "number" then
				-- tbl_str[#tbl_str + 1] = indent
				-- tbl_str[#tbl_str + 1] = loc .. '['
				-- tbl_str[#tbl_str + 1] = tostring(ind)
				-- tbl_str[#tbl_str + 1] = '] = '
			-- else
				-- tbl_str[#tbl_str + 1] = indent
				-- tbl_str[#tbl_str + 1] = loc .. '['
				-- tbl_str[#tbl_str + 1] = basicSerialize(ind)
				-- tbl_str[#tbl_str + 1] = '] = '
			-- end
			-- if ((type(val) == 'number') or (type(val) == 'boolean')) then
				-- tbl_str[#tbl_str + 1] = tostring(val)
				-- tbl_str[#tbl_str + 1] = ',\n'
			-- elseif type(val) == 'string' then
				-- tbl_str[#tbl_str + 1] = basicSerialize(val)
				-- tbl_str[#tbl_str + 1] = ',\n'
			-- elseif type(val) == 'nil' then -- won't ever happen, right?
				-- tbl_str[#tbl_str + 1] = 'nil,\n'
			-- elseif type(val) == 'table' then
				-- if tableshow_tbls[val] then
					-- tbl_str[#tbl_str + 1] = tostring(val) .. ' already defined: ' .. tableshow_tbls[val] .. ',\n'
				-- else
					-- tableshow_tbls[val] = loc ..	'[' .. basicSerialize(ind) .. ']'
					-- tbl_str[#tbl_str + 1] = tostring(val) .. ' '
					-- tbl_str[#tbl_str + 1] = tableShow(val,	loc .. '[' .. basicSerialize(ind).. ']', indent .. '		', tableshow_tbls)
					-- tbl_str[#tbl_str + 1] = ',\n'
				-- end
			-- elseif type(val) == 'function' then
				-- if debug and debug.getinfo then
					-- local fcnname = tostring(val)
					-- local info = debug.getinfo(val, "S")
					-- if info.what == "C" then
						-- tbl_str[#tbl_str + 1] = string.format('%q', fcnname .. ', C function') .. ',\n'
					-- else
						-- if (string.sub(info.source, 1, 2) == [[./]]) then
							-- tbl_str[#tbl_str + 1] = string.format('%q', fcnname .. ', defined in (' .. info.linedefined .. '-' .. info.lastlinedefined .. ')' .. info.source) ..',\n'
						-- else
							-- tbl_str[#tbl_str + 1] = string.format('%q', fcnname .. ', defined in (' .. info.linedefined .. '-' .. info.lastlinedefined .. ')') ..',\n'
						-- end
					-- end
				-- else
					-- tbl_str[#tbl_str + 1] = 'a function,\n'
				-- end
			-- else
				-- tbl_str[#tbl_str + 1] = 'unable to serialize value type ' .. basicSerialize(type(val)) .. ' at index ' .. tostring(ind)
			-- end
		-- end
		-- tbl_str[#tbl_str + 1] = indent .. '}'
		-- return table.concat(tbl_str)
	-- end
-- end




-- function F10CargoDrop(GroupId, Unitname)
	-- local rootPath = missionCommands.addSubMenuForGroup(GroupId, "Cargo Drop")
	-- missionCommands.addCommandForGroup(GroupId, "Drop direction", rootPath, CruiseMissilesMessage, {GroupId, Unitname})
	-- missionCommands.addCommandForGroup(GroupId, "Drop distance", rootPath, ForwardConvoy, nil)
	-- local measurementsSetPath = missionCommands.addSubMenuForGroup(GroupId,"Set measurement units",rootPath)
	-- missionCommands.addCommandForGroup(GroupId, "Set to Imperial (feet, knts)",measurementsSetPath,setMeasurements,{GroupId, "imperial"})
	-- missionCommands.addCommandForGroup(GroupId, "Set to Metric (meters, km/h)",measurementsSetPath,setMeasurements,{GroupId, "metric"})
-- end

-- function Calculate_Object_Speed(object)
	-- return math.sqrt(object:getVelocity().x^2 + object:getVelocity().y^2 + object:getVelocity().z^2) * 3600 / 1852 -- knts
-- end

-- function vecDotProduct(vec1, vec2)
	-- return vec1.x*vec2.x + vec1.y*vec2.y + vec1.z*vec2.z
-- end

-- function Calculate_Aircraft_ForwardVelocity(Drop_initiator)
	-- return vecDotProduct(Drop_initiator:getPosition().x, Drop_initiator:getVelocity())
-- end

--- END HERCULES CARGO SUPPORT SECTION


  
--------------------------------[core\mission_end.lua]-------------------------------- 
 
env.info( "*** [JTF-1] MISSION SCRIPTS END ***" )
